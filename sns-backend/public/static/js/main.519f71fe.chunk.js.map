{"version":3,"sources":["registerServiceWorker.js","store/modules/login.js","lib/Spinner/index.js","components/main/Login/Login.js","containers/main/LoginContainer.js","pages/MainPage.js","components/common/Modal/Modal.js","components/user/Profile/Profile.js","containers/user/ProfileContainer.js","components/user/Posts/Posts.js","pages/UserPage.js","components/post/Hashtag/Hashtag.js","components/post/EachComment/EachComment.js","components/post/Comment/Comment.js","containers/user/CommentContainer.js","components/post/PostTemplate/PostTemplate.js","containers/post/PostTemplateContainer.js","pages/EachPostPage.js","pages/NotFound.js","components/common/Button/Button.js","components/common/Header/Header.js","components/writing/WritingForm/WritingForm.js","store/modules/post.js","containers/writing/WritingFormContainer.js","components/writing/WritingTemplate/index.js","components/writing/WritingTemplate/WritingTemplate.js","pages/WritingPage.js","components/register/RegisterForm/RegisterForm.js","pages/RegisterPage.js","components/feed/EachFeedComment/EachFeedComment.js","components/feed/EachFeed/EachFeed.js","components/feed/Feed/Feed.js","containers/feed/FeedContainer.js","pages/FeedPage.js","components/edit/Edit.js","pages/EditPage.js","components/common/SearchList/SearchList.js","containers/HeaderContainer/HeaderContainer.js","components/App.js","store/configure.js","containers/AppContainer.js","Root.js","index.js","lib/Spinner/puff.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","checkLogin","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","get","abrupt","sent","stop","this","apply","arguments","login","createAction","handleActions","objectSpread","pender","type","onSuccess","action","data","payload","localStorage","setItem","user","id","nick","Spinner","width","height","pw","ph","style","react_default","createElement","display","justifyContent","alignItems","src","spinner","alt","Login","email","password","isLoading","ref","handleChange","e","_this","setState","defineProperty","target","name","value","tryLogin","_this$state","result","post","setTimeout","focus","pic","props","history","push","handleEnter","key","_this2","spinnerSize","innerWidth","lib_Spinner","className","placeholder","spellCheck","onChange","onKeyPress","onClick","textAlign","paddingBottom","paddingTop","Link","to","background","disabled","_callee2","_context2","Component","withRouter","LoginContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getItem","LoginActions","main_Login_Login","connect","dispatch","bindActionCreators","loginActions","MainPage","main_LoginContainer","ModalPortal","children","el","document","getElementById","ReactDOM","createPortal","Modal","handleOpenModal","handleModal","handleCloseModal","showProfile","concat","_this$props","check","list","open","flist","map","item","Modal_ModalPortal","Profile","buttonLabel","followers","following","profilePic","modal","select","renderModal","common_Modal_Modal","initializer","userid","uid","params","alert","Number","cursor","filter","checkFollow","handleFollow","followid","showFollowerModal","showFollowingModal","bool","editProfile","_this$props2","prevProps","prevState","fontstyle","_this$state2","length","fontSize","fontWeight","PureComponent","ProfileContainer","user_Profile_Profile","Post","handleClick","userId","img","Posts","posts","reverse","_this3","index","Posts_Post","user_ProfileContainer","user_Posts_Posts","Hashtag","hashtag","slice","EachComment","usernick","link","withHT","content","split","post_Hashtag_Hashtag","unlike","like","Comment","likeCount","comment","commentsBefore","likers","isloading","postid","likeUsers","updateComment","scrollTop","scrollHeight","handleLikeClick","handleCommentChange","handleSubmit","_callee3","re","_context3","handleKeyPress","showLikers","previewCount","post_EachComment_EachComment","CommentContainer","post_Comment_Comment","PostTemplate","handleDelete","_this$props$match$par","confirm","contentWithHashtag","marginBottom","hashtags","user_CommentContainer","PostTemplateContainer","post_PostTemplate_PostTemplate","EachPostPage","post_PostTemplateContainer","NotFound","marginTop","Div","rest","objectWithoutProperties","Button","removeItem","isAble","token","Element","classes","href","React","Header","toggle","handleToggle","input","handleBlur","onBlur","common_Button_Button","WritingForm","selectedFile","uploading","isLinkedTagExist","fd","contentType","submit","FormData","append","headers","Content-Type","handleFileChange","files","color","imageButtonLabel","accept","submitPost","change","postedId","WritingFormContainer","PostActions","writing_WritingForm_WritingForm","onSubmit","postActions","WritingTemplate","writing_WritingFormContainer","WritingPage","writing_WritingTemplate","RegisterForm","e_placeholder","n_placeholder","p_placeholder","e_validity","n_validity","p_validity","_this$setState","_this$setState2","nickCheck","emailCheck","test","preventDefault","RrgisterPage","register_RegisterForm_RegisterForm","EachFeedComment","handleCommentAction","unlikeImage","likeImage","EachFeed","likeCounts","commentsCount","commentToggle","loggedInUser","toggleComment","timeConversion","millisec","seconds","toFixed","minutes","hours","_this$props3","date","writtenDate","substr","postTime","Date","toISOString","parse","marginRight","marginLeft","feed_EachFeedComment_EachFeedComment","RecommendUser","users","shuffle","array","i","j","Math","floor","random","shuffled","recommendedUsersNumber","isFirstLogin","loginuser","query","qs","search","Feed_EachRecommend","paddingLeft","paddingRight","EachRecommend","_ref2","Feed","loadingState","noPost","tk","wrongAccess","items","it","endOfList","_this3$props","followingList","listData","tag","t0","splice","infiniteScroll","refs","iScroll","addEventListener","clientHeight","loadMoreItems","_this4","ht","scrollTo","_this5","temp","_this6","Feed_RecommendUser","eachList","feed_EachFeed_EachFeed","createdAt","recommendUsers","FeedContainer","feed_Feed_Feed","FeedPage","overflow","feed_FeedContainer","Edit","EditPage","components_edit_Edit","UserResult","HashTagResult","_this2$props","title","SearchList","mapItems","arr","count","SearchList_UserResult","SearchList_HashTagResult","HeaderContainer","results","searchUser","debounce","_x","common_Header_Header","common_SearchList_SearchList","App","containers_HeaderContainer_HeaderContainer","Switch","Route","exact","path","component","UserPage","RegisterPage","reducers","combineReducers","modules","middleWares","penderMiddleware","composeEnhancer","compose","configure","createStore","applyMiddleware","AppContainer","components_App","Root","store","es","BrowserRouter","containers_AppContainer","render","src_Root","URL","process","origin","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.519f71fe.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createAction, handleActions} from 'redux-actions'\r\nimport {pender} from 'redux-pender'\r\nimport axios from 'axios'\r\n\r\nconst checkLogin = async () => await axios.get('/auth/login')\r\n\r\nconst LOGIN = 'login/LOGIN'\r\n\r\nexport const login = createAction(LOGIN,checkLogin)\r\n\r\nconst initialState = {\r\n  user : null,\r\n  id : null\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n  ...pender({\r\n    type : LOGIN,\r\n    onSuccess : (state,action) =>{\r\n      const { data } = action.payload\r\n      \r\n      \r\n      localStorage.setItem('id', data.user.id)\r\n      localStorage.setItem('nick', data.user.nick)\r\n\r\n      // localStorage.id = data.user.id\r\n      // localStorage.nick = data.user.nick\r\n      \r\n      return {user : data.user}\r\n      // return {user : 'asdasd'}\r\n    }\r\n  })\r\n},initialState)","import React from \"react\";\r\nimport spinner from \"./puff.svg\";\r\n\r\nconst Spinner = ({ width, height, pw, ph }) => {\r\n  const style = { width: width, height: height};\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: pw,\r\n        height: ph,\r\n        \r\n      }}\r\n    >\r\n      <img src={spinner} style={style} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"lib/Spinner\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoading: false,\r\n    error: false\r\n  };\r\n\r\n  ref = null;\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  tryLogin = async () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    const { email, password } = this.state;\r\n    const result = await axios.post(\"/auth/login\", { email, password });\r\n    console.log(result.data);\r\n\r\n    if (result.data === \"failure\") {\r\n      // 시각적 효과를 위함\r\n      setTimeout( () => {\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\",\r\n          isLoading: false,\r\n          error: true\r\n        });\r\n        this.ref.focus();\r\n      }, 200)            \r\n    } else {            \r\n      localStorage.setItem(\"id\", result.data.id)\r\n      localStorage.setItem(\"nick\", result.data.nick)\r\n      localStorage.setItem(\"pic\", result.data.pic)\r\n\r\n      this.setState({ isLoading: false });\r\n      this.props.history.push(\"/feed\");\r\n    }\r\n  };\r\n\r\n  handleEnter = e => {\r\n    if (e.key === \"Enter\") this.tryLogin();\r\n  };\r\n\r\n  render() {\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if (this.state.isLoading)\r\n      return (\r\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\r\n      );\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"inner\">\r\n          <h2>Koostagram</h2>\r\n          \r\n          <div>\r\n            <p>\r\n              <input\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                spellCheck={false}\r\n                className=\"input\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                ref={ref => (this.ref = ref)}\r\n              />\r\n            </p>\r\n            <p>\r\n              <input\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"input\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                onKeyPress={this.handleEnter}\r\n              />\r\n            </p>\r\n\r\n            <p>\r\n              <input\r\n                className=\"submit\"\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                onClick={this.tryLogin}\r\n              />\r\n            </p>\r\n            {this.state.error ? (\r\n              <div className=\"error-message\">\r\n                id 혹은 비밀번호가 일치하지 않습니다.\r\n              </div>\r\n            ) : null}\r\n\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                paddingBottom: \"20px\",\r\n                paddingTop: \"20px\"\r\n              }}\r\n            >\r\n              If you don't have account...\r\n            </div>\r\n            <p>\r\n              <Link to=\"/register\">\r\n                <input className=\"submit\" type=\"button\" value=\"New Account\" />\r\n              </Link>\r\n            </p>\r\n\r\n            <p>\r\n              <input\r\n                className=\"submit\"\r\n                type=\"submit\"\r\n                // value=\"KaKao Login\"\r\n                value=\"Now Beta..\"\r\n                style={{ background: \"#fcd411\" }}\r\n                disabled\r\n                onClick={async () => {\r\n                  axios.post(\"/auth/kakao\");\r\n                  // await axios.post('/post/sk')\r\n                  // console.log(1)\r\n                }}\r\n              />\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"left-box\">\r\n          <img\r\n            className=\"img\"\r\n            src=\"http://www.parisapartment7eme.com/eiffelcam/etandmoonb.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\nimport * as loginActions from 'store/modules/login'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport Login from 'components/main/Login'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass LoginContainer extends Component {\r\n  \r\n  constructor(props){\r\n    super(props)            \r\n    if(localStorage.getItem(\"id\")){      \r\n      \r\n      // this.props.history.push(`/user/${user.id}`)    \r\n      this.props.history.push('/feed')\r\n      return  \r\n    }    \r\n  }  \r\n  \r\n  componentDidMount() {\r\n    const {LoginActions} = this.props\r\n    LoginActions.login();    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Login />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(withRouter(LoginContainer))","import React from 'react';\r\nimport LoginContainer from 'containers/main/LoginContainer';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div>\r\n      <LoginContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ModalPortal = ({ children }) => {\r\n  const el = document.getElementById(\"modal\");\r\n  return ReactDOM.createPortal(children, el);\r\n};\r\n\r\nclass Modal extends Component {\r\n  handleOpenModal = () => {\r\n    this.props.handleModal(true);\r\n  };\r\n  \r\n  handleCloseModal = () => {\r\n    this.props.handleModal(false);\r\n  };\r\n\r\n  showProfile = id => {\r\n    this.handleCloseModal();\r\n    this.props.history.push(`/user/${id}`);\r\n  };\r\n\r\n  render() {\r\n    // check : modal의 제목(Follower인지 Following 인지 구분)\r\n    // list : Following(Follower) 목록\r\n    // open : true일 때 모달을 열어줌\r\n    const { check, list, open } = this.props;\r\n\r\n    // first : 넘어온 list로 목록을 구성해 줌\r\n    if (open === true) {\r\n      const flist = list.map(item => {\r\n        return (\r\n          <div\r\n            key={item.id}\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            onClick={() => {\r\n              this.showProfile(item.id);\r\n            }}\r\n            className=\"each-user\"\r\n          >\r\n            <div>\r\n              <img src={item.pic ? item.pic : \"https://myspace.com/common/images/user.png\"} className=\"img\" alt=\"\"/>\r\n            </div> \r\n            <div className=\"nick\">{item.nick}</div>            \r\n          </div>\r\n        );\r\n      });\r\n\r\n\r\n      return (\r\n        <ModalPortal>\r\n          <div className=\"modal\">\r\n            <div className=\"content\">\r\n              <center>\r\n                <h3>{check}</h3>\r\n              </center>\r\n              <div className=\"flist\">{flist}</div>\r\n              <br />\r\n              <center>\r\n                <button onClick={this.handleCloseModal} className=\"close\">Close</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </ModalPortal>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Modal);\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./Profile.scss\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../../common/Modal/Modal\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nclass Profile extends PureComponent {\r\n  state = {\r\n    nick: \"\",\r\n    buttonLabel: \"follow\",\r\n    followers: [],\r\n    following: [],\r\n    profilePic: \"\",\r\n    modal: false,\r\n    select: 0,\r\n    style: null,\r\n    isLoading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { uid } = this.props;\r\n    if (prevProps.uid !== uid) this.initializer();\r\n  }\r\n\r\n  renderModal = () => {\r\n    return <Modal open={this.state.modal} />;\r\n  };\r\n\r\n  // 초기화 함수\r\n  initializer = async () => {\r\n    this.setState({ isLoading: true }); // 읽어오기 시작!\r\n    const { userid } = this.props.match.params;\r\n    const { history, uid, user } = this.props;\r\n\r\n    // 버튼라벨 초기화\r\n    if (this.state.buttonLabel === \"unfollow\") {\r\n      this.setState({\r\n        buttonLabel: \"follow\"\r\n      });\r\n    }\r\n\r\n    const nick = await axios.post(\"/post/getNick\", { userid }).catch(e => {\r\n      alert(\"Wrong Request(해당 유저가 존재하지 않습니다.)\");\r\n      history.push(\"/\");\r\n    });\r\n\r\n    const followers = await axios.post(\"/post/getFollowers\", { userid });\r\n    const following = await axios.post(\"/post/getFollowing\", { userid });\r\n    const profilePic = await axios.post(\"/post/getUserPic\", { userid });\r\n\r\n    this.setState({ isLoading: false }); // 읽어오기 완료!\r\n\r\n    // 자기 프로필 일 때만 커서를 pointer로 해서 edit 하기 위함\r\n    let style = null;\r\n    if (user) {\r\n      style = Number(uid) === user.id ? { cursor: \"pointer\" } : null;\r\n    }\r\n  \r\n    this.setState({\r\n      nick: nick.data,\r\n      followers: followers.data.filter(item => item.id !== Number(userid)),\r\n      following: following.data.filter(item => item.id !== Number(userid)),\r\n      profilePic: profilePic.data,\r\n      style: style\r\n    });\r\n    this.checkFollow();\r\n  };\r\n\r\n  checkFollow = () => {\r\n    const { user } = this.props;\r\n    const { followers } = this.state;\r\n\r\n    if (user) {\r\n      followers.map(item => {\r\n        if (item.id === user.id) {\r\n          this.setState({\r\n            buttonLabel: \"unfollow\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // follow(unfollow)버튼 클릭\r\n  handleFollow = e => {\r\n    //팔로우 버튼 누르면\r\n    const { userid } = this.props.match.params;\r\n    const { user } = this.props;\r\n    const { followers, buttonLabel } = this.state;\r\n\r\n    if (buttonLabel === \"follow\") {\r\n      axios.post(\"/post/follow\", { followid: user.id, userid });\r\n      this.setState({\r\n        buttonLabel: \"unfollow\",\r\n        followers: followers.concat({ id: user.id, nick: user.nick })\r\n      });\r\n    } else {\r\n      axios.post(\"/post/unfollow\", { followid: user.id, userid });\r\n      this.setState({\r\n        buttonLabel: \"follow\",\r\n        followers: followers.filter(item => item.id !== user.id)\r\n      });\r\n    }\r\n  };\r\n\r\n  // select로 follower를 띄울 모달인지 following를 띄울 모달인지 구별해줌\r\n  // Follower와 관련된 modal을 열어줌\r\n  showFollowerModal = e => {\r\n    this.setState({\r\n      modal: true,\r\n      select: 0\r\n    });\r\n  };\r\n\r\n  // Following과 관련된 modal을 열어줌\r\n  showFollowingModal = e => {\r\n    this.setState({\r\n      modal: true,\r\n      select: 1\r\n    });\r\n  };\r\n\r\n  // modal 열기/닫기\r\n  handleModal = bool => {\r\n    this.setState({\r\n      modal: bool\r\n    });\r\n  };\r\n\r\n  // 본인의 page일 때만 프로필사진 편집이 가능하게 구현, 남의 page에선 동작 X\r\n  editProfile = () => {\r\n    const { uid, user, history } = this.props;\r\n    if (Number(uid) === user.id) {\r\n      history.push(\"/edit\");\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { userid } = this.props.match.params;\r\n    const { user } = this.props;\r\n    const {\r\n      followers,\r\n      following,\r\n      buttonLabel,\r\n      nick,\r\n      modal,\r\n      select,\r\n      profilePic,\r\n      style,\r\n      isLoading\r\n    } = this.state;\r\n    \r\n    \r\n\r\n    // 로딩 puff 보여주기\r\n    if (isLoading) {\r\n      let ph;\r\n      window.innerWidth > 676 ? (ph = \"240px\") : (ph = \"310px\");\r\n      const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n      return (\r\n        <div className=\"profile\">\r\n          <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph={ph} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let fontstyle;\r\n    if( window.innerWidth < 450 &&  nick.length >= 8){\r\n      fontstyle = {fontSize : \"1rem\", fontWeight : \"800\"}\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        {select ? (\r\n          <Modal\r\n            open={modal}\r\n            handleModal={this.handleModal}\r\n            check=\"Following\"\r\n            list={following}\r\n          />\r\n        ) : (\r\n          <Modal\r\n            open={modal}\r\n            handleModal={this.handleModal}\r\n            check=\"Followers\"\r\n            list={followers}\r\n          />\r\n        )}\r\n        <div className=\"profile-pic\" onClick={this.editProfile} style={style}>\r\n          <img src={profilePic? profilePic : \"https://myspace.com/common/images/user.png\"} alt=\"\"/>          \r\n        </div>\r\n        <div className=\"user-detail\">\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div>\r\n              <div className=\"nick\" style={fontstyle}>\r\n                {nick ?   '' +nick : \"loading...\"}\r\n              </div>{\" \"}\r\n              <br />\r\n              {!user || Number(userid) === user.id ? null : (\r\n                <input\r\n                  type=\"button\"\r\n                  value={buttonLabel}\r\n                  onClick={this.handleFollow}\r\n                  className=\"follow-button\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"show-follow\" onClick={this.showFollowerModal}>\r\n              {followers.length} <br />\r\n            </div>\r\n            Followers\r\n          </div>\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"show-follow\" onClick={this.showFollowingModal}>\r\n              {following.length} <br />\r\n            </div>\r\n            Following\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"../../components/user/Profile/Profile\";\r\nimport * as loginActions from 'store/modules/login'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\n\r\nclass ProfileContainer extends Component {\r\n  render() {        \r\n    return (\r\n      <div>\r\n        <Profile\r\n          user={this.props.user}\r\n          uid={this.props.uid}\r\n          match={this.props.match}   \r\n          history={this.props.history}       \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user: state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(ProfileContainer);\r\n","import React, { Component } from \"react\";\r\nimport \"./Posts.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nclass Post extends Component {\r\n  \r\n  handleClick = (e) => {\r\n    const {item, history} = this.props\r\n    history.push(`/user/${item.userId}/${item.id}`)\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.props\r\n    return (\r\n      // <div className=\"post\">\r\n        <img\r\n          src={item.img}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          alt=\"\"\r\n          onClick={this.handleClick}        \r\n        />\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    posts: [\"noPost\"],    \r\n    isLoading : false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer()\r\n  }\r\n\r\n  initializer = () => {\r\n    const { userid } = this.props.match.params;\r\n    this.setState({isLoading : true})\r\n    axios.post(\"/post/getPosts\", { userid }).then(posts => {\r\n      this.setState({\r\n        posts: posts.data.reverse(),\r\n        isLoading : false\r\n      })\r\n    });\r\n  } \r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.uid !== this.props.uid)  this.initializer();\r\n  }\r\n  \r\n  render() {\r\n    const { posts, isLoading } = this.state;\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if(isLoading) {\r\n      return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"60vh\"/>\r\n    }\r\n  \r\n\r\n    // loading , check no post\r\n    if (posts[0] === \"noPost\") {\r\n      return null\r\n    } else if (posts.length === 0) {\r\n      return <div className=\"no-post\">No post </div>;\r\n    }\r\n\r\n    // TODO : delete index(key) when deploy(선택사항)\r\n    const list = posts.map((item, index) => (\r\n      <Post src={item.img} key={index} item={item} history={this.props.history} />\r\n    ));\r\n    //console.log(posts)\r\n    return (\r\n      <center>\r\n        <div className=\"posts\">{list}</div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Posts);","import React from 'react';\r\nimport ProfileContainer from 'containers/user/ProfileContainer';\r\nimport Posts from 'components/user/Posts'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst UserPage = ({match, history}) => {\r\n  const { userid : uid } = match.params;\r\n  return (\r\n    <div>\r\n      <ProfileContainer uid={uid} match={match} history={history}/>\r\n      <Posts uid={uid}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserPage)","import React, { Component } from 'react';\r\n\r\nclass Hashtag extends Component {\r\n  render() {\r\n    const { history, hashtag } = this.props;\r\n    return (\r\n      <div\r\n        className=\"hashed\"\r\n        onClick={() => {\r\n          history.push(`/feed?hashtag=${hashtag.slice(1)}`);\r\n        }}\r\n      >\r\n        {hashtag}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hashtag;\r\n","import React, { Component } from 'react';\r\nimport './EachComment.scss'\r\nimport axios from 'axios'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Hashtag from '../Hashtag/Hashtag';\r\n\r\n\r\nclass EachComment extends Component {\r\n\r\n  state = {\r\n    id : null\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const link = await axios.post('/post/getIdByNick', {nick : this.props.usernick})\r\n    this.setState({\r\n      id : link.data.id\r\n    })\r\n  }\r\n  \r\n  handleClick =() =>{\r\n    const { history } = this.props\r\n    const {id} = this.state\r\n    id && history.push(`/user/${id}`)\r\n  }\r\n\r\n  render() {\r\n    const {content, usernick } = this.props\r\n    let withHT;\r\n    if (content) {\r\n      withHT = content.split(/\\s+/);      // space or newline으로 나눠줌\r\n      withHT = withHT.map((item) => {\r\n        // console.log(item)\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />              \r\n            </div>\r\n          );\r\n        }\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n    \r\n    return (\r\n      <div className=\"each-comment\">\r\n        <div onClick={this.handleClick} className=\"nick-area\">{usernick} &nbsp; </div>\r\n        <div className=\"test\"> {withHT}</div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default withRouter(EachComment)","import React, { Component } from \"react\";\r\nimport \"./Comment.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EachComment from \"../EachComment/EachComment\";\r\nimport Modal from \"../../common/Modal/Modal\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nconst unlike =\r\n  \"https://cdn1.iconfinder.com/data/icons/valentine-s-day-simplicity/512/empty_heart-512.png\";\r\nconst like =\r\n  \"https://cdn1.iconfinder.com/data/icons/love-icons/512/love-heart-512.png\";\r\n\r\n// TODO : this.props.nick은 댓글 작성할 때 쓸 것\r\nclass Comment extends Component {\r\n  state = {\r\n    like: unlike,\r\n    likeCount: 0,\r\n    comment: \"\",\r\n    commentsBefore: null,\r\n    modal: false,\r\n    likers: [],\r\n    isloading: false\r\n  };\r\n\r\n  // likeUsers에 좋아요 누른 애들 정보 들어있음\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  initializer = async () => {\r\n    this.setState({ isloading: true });\r\n    const { postid } = this.props.match.params;\r\n    const { user } = this.props;\r\n\r\n    const likeUsers = await axios.post(\"/post/getLikeCount\", { postid });\r\n    const commentsBefore = await axios.post(\"/post/getComments\", { postid });\r\n\r\n    this.setState({\r\n      likeCount: likeUsers.data.length,\r\n      commentsBefore: commentsBefore.data,\r\n      likers: likeUsers.data\r\n    });\r\n\r\n    if (user) {\r\n      likeUsers.data.map(item => {\r\n        if (item.id === user.id) {\r\n          this.setState({\r\n            like: like\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this.setState({ isloading: false });\r\n  };\r\n\r\n  // 댓글 등록 후 실시간으로 업데이트 시키기, 댓글 등록후 스크롤 맨 아래로 내려서 본인이 등록한 댓글 확인\r\n  updateComment = async () => {\r\n    const { postid } = this.props.match.params;\r\n    const commentsBefore = await axios.post(\"/post/getComments\", { postid });\r\n    this.setState(\r\n      {\r\n        commentsBefore: commentsBefore.data\r\n      },\r\n      () => {\r\n        document.getElementById(\"cl\").scrollTop = document.getElementById(\r\n          \"cl\"\r\n        ).scrollHeight;\r\n      }\r\n    );\r\n  };\r\n\r\n  // 좋아요 버튼이 눌릴 때 좋아요 및 좋아요 취소\r\n  handleLikeClick = () => {\r\n    const { postid } = this.props.match.params;\r\n    const { user } = this.props;\r\n    if (!user) {\r\n      alert(\"Login 후에 시도해 주세요.\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.like === unlike) {\r\n      this.setState({\r\n        like: like,\r\n        likeCount: this.state.likeCount + 1\r\n      });\r\n      axios.post(\"/post/like\", { userid: user.id, postid });\r\n    } else {\r\n      this.setState({\r\n        like: unlike,\r\n        likeCount: this.state.likeCount - 1\r\n      });\r\n      axios.post(\"/post/unlike\", { userid: user.id, postid });\r\n    }\r\n  };\r\n\r\n  handleCommentChange = e => {\r\n    this.setState({\r\n      comment: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    const { postid } = this.props.match.params;\r\n    const { comment } = this.state;\r\n    const { nick } = this.props.user;\r\n\r\n    let re = []\r\n    try{\r\n    re  = comment.match(/#[^\\s]*/g).filter(item => item.length >= 14)\r\n    }catch(e){\r\n      console.log(e)\r\n      re =[]\r\n    }\r\n    \r\n    if (!this.props.user) {\r\n      alert(\"먼저 로그인해 주세요.\");\r\n      return;\r\n    }\r\n    if (comment.length >= 50) {\r\n      alert(\"댓글은 50자 이내로 입력해 주세요.\");\r\n      return;\r\n    }\r\n    if(comment.match(/#.*\\S#/g)){\r\n      alert(\"해쉬태그는 연결해서 등록할수 없어요!\")\r\n      return\r\n    }else if(re[0]){\r\n      alert(\"14자가 넘는 해쉬태그가 존재합니다.\")\r\n      return\r\n    }\r\n\r\n    \r\n    \r\n  \r\n\r\n    if (!comment) {\r\n      alert(\"내용을 입력해주세요.\");\r\n      return;\r\n    }\r\n    await axios.post(\"/post/uploadComment\", {\r\n      content: comment,\r\n      postid,\r\n      usernick: nick\r\n    });\r\n    this.setState({\r\n      comment: \"\"\r\n    });\r\n    this.updateComment();\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") this.handleSubmit();\r\n  };\r\n\r\n  showLikers = () => {\r\n    this.setState({\r\n      modal: true\r\n    });\r\n  };\r\n\r\n  // modal 열기/닫기\r\n  handleModal = bool => {\r\n    this.setState({\r\n      modal: bool\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { previewCount } = this.props;\r\n    const { commentsBefore, modal, isloading, comment } = this.state;\r\n\r\n    if (isloading) {\r\n      return <Spinner width=\"50px\" height=\"50px\" pw=\"100%\" ph=\"150%\" />;\r\n    }\r\n\r\n    let list =\r\n      commentsBefore &&\r\n      commentsBefore.map(item => {\r\n        return (\r\n          <EachComment\r\n            content={item.content}\r\n            usernick={item.usernick}\r\n            key={item.id}\r\n          />\r\n        );\r\n      });\r\n\r\n    if (list !== null && list.length === 0) list = \"첫 코멘트를 입력해주세요!\";\r\n\r\n    return (\r\n      <div className=\"comment\">\r\n        <Modal\r\n          open={modal}\r\n          handleModal={this.handleModal}\r\n          check=\"Likers\"\r\n          list={this.state.likers}\r\n        />\r\n        <div>\r\n          <img\r\n            style={{ cursor: \"pointer\" }}\r\n            src={this.state.like}\r\n            width={30}\r\n            height={30}\r\n            alt=\"\"\r\n            onClick={this.handleLikeClick}\r\n          />\r\n          <span className=\"show-likers\" onClick={this.showLikers}>\r\n            &nbsp;{this.state.likeCount} likes\r\n          </span>\r\n        </div>\r\n        <div className=\"comments-list\" id=\"cl\">\r\n          {list}\r\n        </div>\r\n\r\n        {previewCount >= 5 ? (\r\n          <div className=\"comment-write\">\r\n            <input\r\n              value={this.state.comment}\r\n              onChange={this.handleCommentChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              className=\"comment-input\"\r\n              placeholder=\"Your Comment\"\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              onClick={this.handleSubmit}\r\n              className=\"comment-submit\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Comment);\r\n","import React, { Component } from \"react\";\r\nimport Comment from \"../../components/post/Comment/Comment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CommentContainer extends Component {\r\n  render() {\r\n    const { user, previewCount } = this.props;\r\n    // console.log(user);\r\n    return (\r\n      <div style={{ height: \"36%\" }}>\r\n        <Comment  user={user} previewCount={previewCount}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(CommentContainer);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PostTemplate.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CommentContainer from \"../../../containers/user/CommentContainer\";\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nclass PostTemplate extends Component {\r\n  state = {\r\n    img: null,\r\n    content: null,\r\n    nick: null\r\n  };\r\n\r\n  \r\n\r\n  async componentDidMount() {\r\n    const { userid, postid } = this.props.match.params;\r\n\r\n    // 게시글 가져오기 실패는 빈 배열이라도 리턴해 주니까 catch가 아닌 이런 방식으로 해야함\r\n    const post = await axios.post(\"/post/getSinglePost\", { postid });\r\n    if (!post.data) {\r\n      alert(\"Wrong Request(해당 게시글이 존재하지 않습니다.)\");\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n\r\n    // nick은 가져오기 실패시 catch로 디버깅\r\n    const user = await axios.post(\"/post/getNick\", { userid }).catch(e => {\r\n      alert(\"Wrong Request(해당 유저가 존재하지 않습니다.)\");\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    });\r\n\r\n    this.setState({\r\n      img: post.data.img,\r\n      content: post.data.content,\r\n      nick: user.data\r\n    });\r\n  }\r\n\r\n  handleDelete = async () => {\r\n    const { postid, userid } = this.props.match.params;\r\n    const { history } = this.props;\r\n\r\n    if (window.confirm(\"삭제하시겠습니까?\")) {\r\n      await axios.post(\"/post/deletePost\", { postid });\r\n      history.push(`/user/${userid}`);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { img, content } = this.state;\r\n    const { userid } = this.props.match.params;\r\n    const { history, user } = this.props;\r\n\r\n    // 본문의 hashtag부분을 해당 해쉬태그 검색과 연결시키는 부분, string형태의 본문을 재구성하여 해쉬태그부분을 차별화\r\n    let contentWithHashtag;\r\n    if (content) {\r\n      contentWithHashtag = content.split(/\\s+/);      // space or newline으로 나눠줌\r\n      contentWithHashtag = contentWithHashtag.map((item) => {\r\n        // console.log(item)\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />              \r\n            </div>\r\n          );\r\n        }\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    if (!img) {\r\n      return (\r\n        <div className=\"loading\">\r\n          <Spinner width=\"100px\" height=\"100px\" pw=\"10%\" ph=\"10vh\"/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"post-template\">\r\n        <div className=\"pic\">\r\n          <img src={img} alt=\"\" />\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"content\">\r\n            <div className=\"nick-with-delete-button\">\r\n              <b\r\n                className=\"nick\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  history.push(`/user/${userid}`);\r\n                }}\r\n              >\r\n                <div style={{ marginBottom: \"20px\" }}>@{this.state.nick}</div>\r\n              </b>\r\n              {(user ? user.id : null) === Number(userid) ? (\r\n                <input\r\n                  className=\"delete-button\"\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={this.handleDelete}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className=\"test\">{contentWithHashtag}</div>\r\n            <div>{this.hashtags}</div>\r\n          </div>\r\n          <CommentContainer previewCount={5} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PostTemplate);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport PostTemplate from '../../components/post/PostTemplate/PostTemplate';\r\n\r\nclass PostTemplateContainer extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <PostTemplate user={this.props.user}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user : state.login.user\r\n  })\r\n)(PostTemplateContainer)","import React from 'react';\r\nimport PostTemplate from 'components/post/PostTemplate'\r\nimport PostTemplateContainer from '../containers/post/PostTemplateContainer';\r\n\r\nconst EachPostPage = () => {\r\n  return (\r\n    <div>      \r\n      <PostTemplateContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EachPostPage;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"no-post\" style={{fontSize : \"3rem\", marginTop : \"15vh\"}}>\r\n      Page Not Found\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Button.css\";\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst Div = ({ children, ...rest }) => <div {...rest}>{children}</div>;\r\n\r\nclass Button extends React.Component {  \r\n  handleClick= () => {\r\n    localStorage.removeItem('user')\r\n    this.props.history.push('/user/4')\r\n  }\r\n  \r\n  render() {\r\n  const { children, isAble, to, token } = this.props\r\n  const Element = isAble && to ? Link : Div;\r\n\r\n  let classes = \"button\";\r\n  if (!isAble) {\r\n    classes = \"button disable\";\r\n  }\r\n\r\n  if(token){\r\n    return (\r\n      <div className={classes} onClick={this.handleClick} style={{cursor : \"pointer\"}}>\r\n        {children}      \r\n      </div>\r\n    ) \r\n  }\r\n\r\n    \r\n  return (\r\n    <Element href ={to} to={to} className={classes}>\r\n      {children}\r\n    </Element>\r\n  );\r\n};\r\n\r\n\r\n\r\n    \r\n  \r\n}\r\n\r\nexport default withRouter(Button)","import React, { Component } from \"react\";\r\nimport \"./Header.scss\";\r\nimport Button from \"components/common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    toggle: false\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAble, to, input, handleChange, handleBlur } = this.props;\r\n    \r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"header\">\r\n          <Link className=\"logo\" to=\"/\">\r\n            Koostagram\r\n          </Link>\r\n\r\n          <div className=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              spellCheck={false}\r\n              placeholder=\"Search\"\r\n              onBlur={handleBlur}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"right-part\">\r\n            <Button isAble={isAble} to=\"/write\">\r\n              Write Post\r\n            </Button>\r\n            <Button isAble={isAble} to={to}>\r\n              My Page\r\n            </Button>\r\n            {/* <div\r\n              className=\"mobile-search-icon\"\r\n              onClick={this.handleToggle}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <img\r\n                src=\"https://png.pngtree.com/svg/20170313/search_white__122520.png\"\r\n                width={40}\r\n                height={40}\r\n                alt=\"\"\r\n              />\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        {/* {toggle ? \r\n        <div className=\"header\">\r\n              <input \r\n              style={{marginLeft : '5%'}}\r\n              type=\"text\"\r\n              className=\"search\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              spellCheck={false}\r\n              placeholder=\"Search\"\r\n              onBlur={handleBlur}\r\n            /> \r\n            </div>\r\n            : \r\n        null} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./WritingForm.scss\";\nimport Spinner from \"../../../lib/Spinner\";\n\n\nclass WritingForm extends Component {\n  state = {\n    selectedFile: null,\n    uploading : false\n  };\n\n  handleSubmit = async data => {\n    const { history, input, onChange } = this.props;\n    const { selectedFile } = this.state;\n\n    let re = input.match(/#[^\\s]*/g);\n    let isLinkedTagExist = input.match(/#.*\\S#/g)    \n    // console.log(isLinkedTagExist)\n    \n    // 사진을 업로드하지 않은 경우\n    if (!selectedFile) {\n      alert(\"사진은 필수로 첨부해주세요.\");\n      return;\n    } else if (input.length >= 140) {\n      alert(\"본문 내용은 140자 이내로 해주세요.\");\n      return;\n    } else if (re) {\n      re = re.filter(item => item.length >= 14);\n      if (re[0]) {\n        alert(\"12자가 넘는 해쉬태그가 존재합니다.\");\n        return;\n      }\n    }\n\n    if(isLinkedTagExist){        \n      alert(\"해쉬태그 간에는 공백을 넣어주세요.(space)\")\n      return\n    }\n\n    const fd = new FormData();\n    // console.log(selectedFile);\n    fd.append(\"img\", selectedFile, selectedFile.name); // 파일의 원본 파일이름 그대로\n    fd.append(\"text\", input);\n    fd.append(\"id\", Number(localStorage.getItem(\"id\")))\n\n    const contentType = {\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    };\n\n    this.setState({uploading : true})\n\n    const submit = await axios.post(\"/post\", fd, contentType);\n    \n    // console.log(submit.data)\n    \n    if(submit.data === \"failure\") {\n      alert(\"업로드에 실패하였습니다. 관리자에게 카톡주세요.\")\n      history.push('/write')\n    }\n\n    onChange(\"\");    \n    history.push(`/user/${submit.data.userId}/${submit.data.id}`);\n  };\n\n  handleChange = e => {\n    const { onChange } = this.props;\n    onChange(e.target.value);\n  };\n\n  handleFileChange = e => {\n    this.setState({\n      selectedFile: e.target.files[0]\n    });\n    // console.log(e.target.files[0]);\n  };\n\n  render() {\n    const { input } = this.props;\n    const style = input.length < 140 ? null : { color: \"red\" };\n    const placeholder =\n      window.innerWidth > 450\n        ? \"오늘의 하루는 어떠셨나요? :)\"\n        : \"오늘의 하루는\\n어떠셨나요? :)\";\n\n    const spinnerSize = \n      window.innerWidth > 450\n        ? \"100px\"\n        : \"50px\";\n\n    const imageButtonLabel = this.state.selectedFile\n      ? \"선택완료 :)\"\n      : \"업로드할 사진 고르기\";\n\n    // 업로드 버튼 눌러서 업로딩으로 들어가면 스피너 띄우게\n    if(this.state.uploading) return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />;\n    \n\n    return (\n      \n      <center>        \n        <div className=\"writing-form\">\n          <div className=\"title\">Post Your Content!</div>\n          <label className=\"file-wrapper\">\n            {imageButtonLabel}\n            <input\n              id=\"img\"\n              name=\"img\"\n              type=\"file\"\n              className=\"file-upload\"\n              onChange={this.handleFileChange}\n              accept=\".gif, .jpg, .png\"\n            />\n          </label>\n          <textarea\n            spellCheck={false}\n            name=\"content\"\n            placeholder={placeholder}\n            className=\"text\"\n            value={input}\n            onChange={this.handleChange}\n          />\n          <div className=\"word-count\" style={style}>\n            {input.length < 140 ? input.length + \" / 140\" : \"글자수 초과\"}\n          </div>\n          \n          <input\n            type=\"button\"\n            value=\"Submit!\"\n            className=\"submit\"\n            onClick={() => {\n              this.handleSubmit(input);\n            }}\n          />\n        </div>        \n        \n      </center>\n    );\n  }\n}\n\nexport default withRouter(WritingForm);\n","import {createAction, handleActions} from 'redux-actions'\r\nimport {pender} from 'redux-pender'\r\nimport axios from 'axios'\r\n\r\n// 뒤에 img 흠..\r\nexport const submitPost = (content,img) => axios.post('/post', {content, img})\r\n\r\nconst CHANGE = 'post/CHANGE'\r\nconst SUBMIT = 'post/SUBMIT'\r\n\r\nexport const change = createAction(CHANGE)\r\nexport const submit = createAction(SUBMIT,submitPost)\r\n\r\nconst initialState = {\r\n  input : '',\r\n  postedId : ''\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n  [CHANGE] : (state,action) => {\r\n    const {payload : input} = action\r\n    return ({input})\r\n  },\r\n  ...pender({\r\n    type : SUBMIT,    \r\n    onSuccess : (state,action) =>{\r\n      const {id} = action.payload.data\r\n      return ({postedId : id})\r\n    }\r\n  })\r\n},initialState)","import React, { Component } from \"react\";\r\nimport * as postActions from \"store/modules/post\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport WritingForm from \"../../components/writing/WritingForm/WritingForm\";\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass WritingFormContainer extends Component {\r\n  componentDidMount() {    \r\n      if(!localStorage.getItem(\"id\")) { alert(\"Please login first.\"); this.props.history.push('/');}        \r\n  }\r\n  \r\n  render() {\r\n    const { PostActions, input } = this.props;\r\n    return (\r\n      <div>\r\n        <WritingForm\r\n          input={input}          \r\n          onSubmit={PostActions.submit}          \r\n          onChange={(e)=>{PostActions.change(e)}}          \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    input: state.post.input,\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    PostActions: bindActionCreators(postActions, dispatch)\r\n  })\r\n)(withRouter(WritingFormContainer));\r\n","import WritingTemplate from './WritingTemplate';\n\nexport default WritingTemplate;\n","import React from 'react';\nimport Header from 'components/common/Header'\nimport WritingForm from 'components/writing/WritingForm'\nimport WritingFormContainer from '../../../containers/writing/WritingFormContainer';\n\nconst WritingTemplate = () => (\n  <div>\n    <WritingFormContainer />\n  </div>\n);\n\n\nexport default WritingTemplate\n","import React from 'react';\r\nimport WritingTemplate from 'components/writing/WritingTemplate'\r\n\r\nconst WritingPage = () => {\r\n  return (\r\n    <div>\r\n      <WritingTemplate />      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingPage;","import React, { Component } from \"react\";\r\nimport \"./RegisterForm.scss\";\r\nimport axios from \"axios\";\r\nimport Spinner from 'lib/Spinner'\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    nick: \"\",\r\n    password: \"\",\r\n\r\n    e_placeholder: \"Email을 입력해주세요\",\r\n    n_placeholder: \"nickname 입력 및 중복검사를 해주세요.\",\r\n    p_placeholder: \"8자이상의 비밀번호를 입력해주세요\",\r\n\r\n    e_validity: 0,\r\n    n_validity: 0,\r\n    p_validity: 0,\r\n\r\n    isLoading : false\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    //document.getElementById(\"submit\").disabled = true;\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n    \r\n  //   const {e_validity, n_validity, p_validity} = this.state\r\n\r\n  //   if (e_validity && n_validity && p_validity) {\r\n  //     document.getElementById(\"submit\").disabled = false;\r\n  //     this.setState({\r\n  //       style: { color: \"red\", background: \"blue\" }\r\n  //     });\r\n  //   }\r\n    \r\n  // }\r\n  \r\n\r\n\r\n  handleChange = e => {\r\n    if (e.target.name === \"nick\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n        n_validity: 0,\r\n        n_placeholder: \"nickname 중복 검사를 해주세요.\"\r\n      });\r\n    } else if (e.target.name === \"email\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n        e_validity: 0,\r\n        e_placeholder: \"email 검사를 해주세요.\"\r\n      });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          [e.target.name]: e.target.value\r\n        },\r\n        () => {\r\n          if (this.state.password.length >= 8)\r\n            this.setState({\r\n              p_validity: 1,\r\n              p_placeholder: \"사용 가능한 비밀번호 입니다.\"\r\n            });\r\n          else this.setState({\r\n            p_validity: 0,\r\n            p_placeholder : \"비밀번호가 너무 짧습니다.\"\r\n          })\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  nickCheck = async () => {\r\n    if (this.state.nick.length <= 0) return;\r\n\r\n    const check = await axios.post(\"/auth/nickCheck\", {\r\n      nick: this.state.nick\r\n    });\r\n    console.log(check.data);\r\n    // 중복 닉 없음\r\n    if (check.data === \"ok\" && this.state.nick.length > 0 && this.state.nick.length <= 10) {\r\n      this.setState({\r\n        n_validity: 1,\r\n        n_placeholder: \"사용 가능한 닉네임입니다.\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        n_placeholder: \"중복 닉네임 혹은 닉네임의 길이가 10자 이상입니다.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  emailCheck = async () => {\r\n    const { email } = this.state;\r\n    const pattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\r\n\r\n    if (pattern.test(email)) {\r\n      const check = await axios.post(\"/auth/emailCheck\", { email });\r\n      check.data === \"ok\"\r\n        ? this.setState({\r\n            e_validity: 1,\r\n            e_placeholder: \"사용 가능한 email입니다.\"\r\n          })\r\n        : this.setState({ e_validity : 0, e_placeholder: \"이미 가입된 email입니다.\" });\r\n    } else {\r\n      this.setState({\r\n        e_placeholder: \"올바른 형식의 email이 아닙니다.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit =async (e) => {\r\n    e.preventDefault()\r\n    this.setState({isLoading:true})\r\n    const {email, nick, password, e_validity, n_validity, p_validity} = this.state\r\n    if(e_validity && n_validity && p_validity)  {\r\n      const register = await axios.post(\"/auth/join\", { email, nick, password})  \r\n      register.data === \"success\" ? this.props.history.push('/') : alert(\"작은 오류가 발생했습니다. 회원가입은 정상적으로 되어있을 수 있으니 로그인을 시도해 보세요!\"); this.props.history.push('/')\r\n    }     \r\n    else alert(\"조건에 맞게 요소들을 작성해주세요.\")\r\n    \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      e_placeholder,\r\n      n_placeholder,\r\n      p_placeholder,\r\n      e_validity,\r\n      n_validity,\r\n      p_validity,\r\n      isLoading\r\n    } = this.state;\r\n\r\n    \r\n\r\n    if (e_validity && n_validity && p_validity) {\r\n      document.getElementById(\"submit\").disabled = false;\r\n      // this.setState({\r\n      //   style: { color: \"red\", background: \"blue\" }\r\n      // });\r\n    }\r\n    const spinnerSize = \r\n      window.innerWidth > 450\r\n        ? \"100px\"\r\n        : \"50px\";\r\n\r\n\r\n    if(isLoading) return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />;\r\n\r\n    return (\r\n\r\n\r\n      <form>\r\n        <center>\r\n          <div className=\"register-form\">\r\n            <div className=\"checkSyntax\" style={e_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n              {e_placeholder}\r\n            </div>\r\n            <input\r\n              name=\"email\"\r\n              placeholder=\"email\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              spellCheck={false}\r\n              value={this.state.email}\r\n            />\r\n            <input\r\n              className=\"checkButton\"\r\n              type=\"button\"\r\n              value=\"email 중복 검사\"\r\n              onClick={this.emailCheck}\r\n            />\r\n\r\n            <div className=\"checkSyntax\" style={n_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n              {n_placeholder}\r\n            </div>\r\n            <input\r\n              name=\"nick\"\r\n              spellCheck={false}\r\n              placeholder=\"nickname\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              value={this.state.nick}\r\n              id=\"nick-input\"\r\n            />\r\n            <input\r\n              className=\"checkButton\"\r\n              type=\"button\"\r\n              value=\"nickname 중복 검사\"\r\n              onClick={this.nickCheck}\r\n            />\r\n\r\n            <div className=\"checkSyntax\" style={p_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n              {p_placeholder}\r\n            </div>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              className=\"input\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input\r\n            \r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              className=\"submit-regi\"\r\n              id=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </div>\r\n        </center>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from 'components/register/RegisterForm'\r\n\r\nconst RrgisterPage = ({history}) => {\r\n  return (\r\n    <div>      \r\n      <RegisterForm history={history}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RrgisterPage;","import React, { Component } from \"react\";\r\nimport \"./EachFeedComment.scss\";\r\nimport axios from \"axios\";\r\n\r\nclass EachFeedComment extends Component {\r\n  state = {\r\n    content: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { handleCommentAction, id } = this.props;\r\n    const { content } = this.state;\r\n\r\n    let re =[]\r\n    try{\r\n      re  = content.match(/#[^\\s]*/g).filter(item => item.length >= 14)\r\n    }catch(e){}\r\n\r\n    if(!content){\r\n      alert(\"내용을 입력해주세요.\")\r\n      return \r\n    }\r\n\r\n    if (content.match(/#.*\\S#/g)) {\r\n      alert(\"해쉬태그는 연결해서 등록할수 없어요!\");\r\n      return;\r\n    }else if(re[0]){\r\n      alert(\"14자가 넘는 해쉬태그가 존재합니다.\")\r\n      return\r\n    }\r\n\r\n    \r\n\r\n    const isSuccess = await axios.post(\"/post/uploadComment\", {\r\n      content: this.state.content,\r\n      postid: id,\r\n      usernick: localStorage.getItem(\"nick\")\r\n    });\r\n    if (isSuccess.data === \"success\") handleCommentAction();\r\n    else alert(\"잠시 후 다시 시도해주세요.\");\r\n  };\r\n\r\n  handleEnter = e => {\r\n    if (e.key === \"Enter\") this.handleSubmit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"each-feed-comment\">\r\n        <input\r\n          placeholder=\"Add Comment\"\r\n          className=\"comment-content\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n          onKeyPress={this.handleEnter}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Submit\"\r\n          className=\"submit-button\"\r\n          onClick={this.handleSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachFeedComment;\r\n","import React, { Component } from \"react\";\r\nimport \"./EachFeed.scss\";\r\nimport axios from \"axios\";\r\nimport Hashtag from \"../../post/Hashtag/Hashtag\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\nimport EachFeedComment from \"../EachFeedComment\";\r\n\r\nconst unlikeImage =\r\n  \"https://cdn1.iconfinder.com/data/icons/valentine-s-day-simplicity/512/empty_heart-512.png\";\r\nconst likeImage =\r\n  \"https://cdn1.iconfinder.com/data/icons/love-icons/512/love-heart-512.png\";\r\nconst commentImage =\r\n  \"https://cdn4.iconfinder.com/data/icons/vectory-basic/40/comment_2-512.png\";\r\n\r\nclass EachFeed extends Component {\r\n  state = {\r\n    nick: \"\",\r\n    likeCounts: 0,\r\n    profilePic: \"\",\r\n    isLoading: false,\r\n    like: unlikeImage,\r\n    commentsCount: 0,\r\n    commentToggle: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  // 이니셜라이저, 요청하는 부분\r\n  initializer = async () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    const { id, loggedInUser: user, userid } = this.props;\r\n    const nick = await axios.post(\"/post/getNick\", {\r\n      userid: this.props.userid\r\n    });\r\n\r\n    const likeCounts = await axios.post(\"/post/getLikeCount\", { postid: id });\r\n    const commentsCount = await axios.post(\"/post/getComments\", { postid: id });\r\n    const profilePic = await axios.post(\"/post/getUserPic\", {\r\n      userid\r\n    });\r\n\r\n    //console.log(nick.data)\r\n    this.setState({\r\n      nick: nick.data,\r\n      likeCounts: likeCounts.data.length,\r\n      profilePic: profilePic.data,\r\n      commentsCount: commentsCount.data.length\r\n    });\r\n\r\n    if (user) {\r\n      likeCounts.data.map(item => {\r\n        if (item.id === user.id) {\r\n          this.setState({\r\n            like: likeImage\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { history, id: postid, userid } = this.props;\r\n    history.push(`/user/${userid}/${postid}`);\r\n  };\r\n\r\n  handleLikeClick = () => {\r\n    const { id: postid } = this.props;\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"좋아요는 로그인 후에 가능합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.like === unlikeImage) {\r\n      this.setState({\r\n        like: likeImage,\r\n        likeCounts: this.state.likeCounts + 1\r\n      });\r\n      axios.post(\"/post/like\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    } else {\r\n      this.setState({\r\n        like: unlikeImage,\r\n        likeCounts: this.state.likeCounts - 1\r\n      });\r\n      axios.post(\"/post/unlike\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleComment = () => {\r\n    const { commentToggle } = this.state;\r\n\r\n    if (!localStorage.getItem(\"nick\")) {\r\n      alert(\"댓글 작성은 로그인 후에 가능합니다.\");\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      commentToggle: !commentToggle\r\n    });\r\n  };\r\n\r\n  handleCommentAction = () => {\r\n    const { commentsCount } = this.state;\r\n    this.setState({\r\n      commentsCount: commentsCount + 1,\r\n      commentToggle: 0\r\n    });\r\n  };\r\n\r\n  timeConversion = millisec => {\r\n    const seconds = (millisec / 1000).toFixed(0);\r\n    const minutes = (millisec / (1000 * 60)).toFixed(0);\r\n    const hours = (millisec / (1000 * 60 * 60)).toFixed(0);\r\n\r\n    if (seconds < 60) {\r\n      return seconds + \" sec ago\";\r\n    } else if (minutes < 60) {\r\n      return minutes + \" min ago\";\r\n    } else if (hours < 24) {\r\n      return hours + \" hrs ago\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { img, date, content, userid, history } = this.props;\r\n    const { nick, likeCounts, profilePic, like, commentsCount } = this.state;\r\n\r\n    // 게시글 작성 시간과 현재 시간의 날짜를 구해옴\r\n    const writtenDate = date.substr(0, 10);\r\n    const nowDate = new Date().toISOString().substr(0, 10);\r\n\r\n    // n시간 전\r\n    let postTime = null;\r\n    if (writtenDate === nowDate) {\r\n      postTime = this.timeConversion(new Date() - Date.parse(date));\r\n    } else {\r\n      postTime = writtenDate;\r\n    }\r\n\r\n    let spinnerSize = \"100px\";\r\n    if (window.innerWidth < 500) {\r\n      spinnerSize = \"50px\";\r\n    }\r\n\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\r\n      );\r\n    }\r\n\r\n    let contentWithHashtag;\r\n    if (content) {\r\n      contentWithHashtag = content.split(/\\s+/); // space or newline으로 나눠줌\r\n      contentWithHashtag = contentWithHashtag.map(item => {\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />\r\n            </div>\r\n          );\r\n        }\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"each-feed\">\r\n        <div className=\"top\">\r\n          <div\r\n            className=\"left\"\r\n            onClick={() => {\r\n              history.push(`/user/${userid}`);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <div className=\"profile-pic\">\r\n              <img\r\n                src={\r\n                  profilePic\r\n                    ? profilePic\r\n                    : \"https://myspace.com/common/images/user.png\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            {nick}\r\n          </div>\r\n          <div className=\"right\">\r\n            {postTime}\r\n            {/* {date.substr(0, 10)} {time} */}\r\n          </div>\r\n        </div>\r\n        <div className=\"img-area\">\r\n          <div onClick={this.handleClick} className=\"onimg\">\r\n            <img src={img} alt=\"\" />\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <div className=\"comment-area\">\r\n              <img\r\n                src={like}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  marginTop: \"5px\",\r\n                  marginRight: \"5px\",\r\n                  marginLeft: \"-10px\"\r\n                }}\r\n                onClick={this.handleLikeClick}\r\n              />\r\n              <div style={{ width: \"100%\" }}>{likeCounts}</div>{\" \"}\r\n              <img\r\n                src={commentImage}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                style={{\r\n                  marginTop: \"5px\",\r\n                  marginLeft: \"10px\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n                onClick={this.toggleComment}\r\n              />\r\n              <div className=\"cCount\">{commentsCount}</div>\r\n            </div>\r\n            <div className=\"test\">{contentWithHashtag}</div>\r\n            {this.state.commentToggle ? (\r\n              <EachFeedComment\r\n                handleCommentAction={this.handleCommentAction}\r\n                id={this.props.id}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachFeed;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport EachFeed from \"../EachFeed/EachFeed\";\r\nimport \"./Feed.scss\";\r\nimport qs from \"query-string\";\r\n\r\nclass RecommendUser extends Component {\r\n  state = {\r\n    users: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const users = await axios.post(\"/post/getAlluser\");\r\n    this.setState({\r\n      users: users.data\r\n    });\r\n  }\r\n\r\n  // 친구추천을 위한 배열 셔플(섞기)\r\n  shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    const { recommendedUsersNumber, isFirstLogin, loginuser, location } = this.props;\r\n    const query = qs.parse(location.search);\r\n\r\n    // 본인 제외\r\n    let shuffled;\r\n    if(loginuser) shuffled = users.filter(user => user.id !== loginuser.id)\r\n    shuffled = this.shuffle(shuffled);\r\n    shuffled = shuffled.slice(0, recommendedUsersNumber);\r\n\r\n    const list = shuffled.map(user => {\r\n      return (\r\n        <EachRecommend\r\n          user={user}\r\n          key={user.id}\r\n          history={this.props.history}\r\n          pic={user.pic}\r\n        />\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <div\r\n        style={{ textAlign: \"center\", paddingLeft: \"10%\", paddingRight: \"10%\" }}\r\n        className=\"rec-user\"\r\n      >\r\n        <div\r\n          style={{ fontSize: \"1.25rem\", fontWeight: \"700\", marginTop: \"30px\" }}\r\n        >\r\n          {isFirstLogin ? (\r\n            <div className=\"greeting\">Feed에 더 이상 소식이 없습니다.<br/> 아래 계정들도 둘러보세요!</div>\r\n          ) : (\r\n            <div className=\"greeting\">\r\n              { !query.hashtag ? \"Koostagram 가입을 환영합니다!\" : \"검색결과 없음\" }\r\n              <br />\r\n              Follow할 계정을 둘러보세요!\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"following-rec\">{list}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst EachRecommend = ({ user, history, pic }) => {\r\n  return (\r\n    <div\r\n      className=\"each-rec\"\r\n      onClick={() => {\r\n        history.push(`/user/${user.id}`);\r\n      }}\r\n    >\r\n      <div className=\"profile-pic\">\r\n        {pic ? (\r\n          <img src={pic} alt=\"\" />\r\n        ) : (\r\n          <img src=\"https://myspace.com/common/images/user.png\" alt=\"\" />\r\n        )}\r\n      </div>\r\n      <div className=\"nick\">{user.nick}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Feed extends Component {\r\n  state = {\r\n    list: null,\r\n    loadingState: false,\r\n    noPost: null,\r\n    tk: 0,\r\n    wrongAccess: null,\r\n    isLoading: false\r\n  };\r\n\r\n  // 인피니트 스크롤 관련 변수들\r\n  items = [];\r\n  it = 0;\r\n  endOfList = false;\r\n\r\n  componentDidMount() {\r\n    // console.log(\"Component did mount\");\r\n    setTimeout(() => {\r\n      this.initializer();\r\n    }, 100);\r\n  }\r\n\r\n  // feed에서 query가 바뀔때 바로 적용하기 위해서\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log(\"Component did UPDATA!!!!\");\r\n\r\n    const { user, ht } = this.props;\r\n    if (prevProps.user !== user || prevProps.ht !== ht) {\r\n      this.initializer();\r\n      try {\r\n        document.getElementById(\"list\").scrollTo(0, 0);\r\n      } catch (error) {\r\n        console.log(error);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  initializer = async () => {\r\n    const { location, user } = this.props;\r\n    const query = qs.parse(location.search);\r\n\r\n    // 로그인 안해도 검색한 해쉬태그는 볼 수 있게\r\n    // console.log(localStorage.getItem('id'))\r\n    if (!localStorage.getItem(\"id\") && !query.hashtag) {      \r\n      return;\r\n    }\r\n  \r\n    const followingList = query.hashtag\r\n      ? await axios.post(\"/post/getHashTagPost\", { tag: query.hashtag })\r\n      : await axios.post(\"/post/getFollowingPosts\", { userid: Number(localStorage.getItem('id')) });\r\n\r\n\r\n    let listData = followingList.data;\r\n\r\n    if (listData === \"no data\") {\r\n      this.setState({\r\n        noPost: 1\r\n      });\r\n      return;\r\n    } else {\r\n      this.it = listData.length;\r\n      listData = listData.reverse();\r\n      this.items = listData.splice(0, 3);\r\n\r\n      // to rendering\r\n      this.setState({\r\n        tk: !this.state.tk\r\n      });\r\n\r\n      if (listData.length > 3) {\r\n        this.infiniteScroll(listData);\r\n      } else {\r\n        this.endOfList = true;\r\n        this.setState({\r\n          tk: !this.state.tk\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  infiniteScroll = listData => {\r\n    this.refs.iScroll.addEventListener(\"scroll\", () => {\r\n      if (\r\n        this.refs.iScroll.scrollTop + this.refs.iScroll.clientHeight >=\r\n        this.refs.iScroll.scrollHeight\r\n      ) {\r\n        this.loadMoreItems(listData);\r\n      }\r\n    });\r\n  };\r\n\r\n  loadMoreItems(listData) {\r\n    if (this.items.length >= this.it) {\r\n      this.endOfList = true;\r\n      this.setState({\r\n        tk: !this.state.tk\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { items } = this;\r\n    const temp = listData.splice(0, 3); // listData는 앞에 3개를 줄였음\r\n\r\n    this.setState({ loadingState: true });\r\n    this.items = items.concat(temp);\r\n\r\n    setTimeout(() => {\r\n      // console.log(this.items);\r\n      this.setState({ loadingState: false });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { items } = this;\r\n    const { history, location } = this.props;\r\n    const query = qs.parse(location.search);\r\n\r\n    // console.log(localStorage.getItem('id'), localStorage.getItem('nick'))\r\n\r\n    // 해쉬태그 검색결과가 없을 때 ( no post )\r\n    if (this.state.noPost && this.it === 0) {\r\n      return (\r\n        <div style={{ marginTop: \"100px\" }}>\r\n          <RecommendUser\r\n            loginuser={this.props.user}\r\n            history={this.props.history}\r\n            recommendedUsersNumber={100}\r\n            location={this.props.location}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const eachList = items.map(item => (\r\n      <EachFeed\r\n        id={item.id}\r\n        img={item.img}\r\n        nick={item.nick}\r\n        history={history}\r\n        key={item.id}\r\n        date={item.createdAt}\r\n        userid={item.userId}\r\n        content={item.content}\r\n        loggedInUser={this.props.user}\r\n      />\r\n    ));\r\n\r\n    // 첫 로그인 시(팔로우 하는 사람이 0 일 시) 추천친구를 100명 보여줌\r\n    let recommendUsers = 3;\r\n    if (this.it === 0) recommendUsers = 100;\r\n\r\n    return (\r\n      <div className=\"feed\">\r\n        <div ref=\"iScroll\" className=\"list\" id=\"list\">\r\n          {query.hashtag ? (\r\n            <center>\r\n              <div className=\"searched-hashtag\">\r\n                Searched Hashtag : {window.innerWidth < 450 ? <br/> : null}<span className=\"ht\">#{query.hashtag}</span>\r\n              </div>\r\n            </center>\r\n          ) : (\r\n            <div style={{ height: \"30px\" }} />\r\n          )}\r\n\r\n          <center>{eachList}</center>\r\n          {this.endOfList ? (\r\n            <RecommendUser\r\n              history={this.props.history}\r\n              recommendedUsersNumber={recommendUsers}\r\n              isFirstLogin={this.it}\r\n              loginuser={this.props.user}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//}\r\n\r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\nimport Feed from \"components/feed/Feed\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass FeedContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Feed\r\n          user={this.props.user}\r\n          history={this.props.history}\r\n          location={this.props.location}\r\n          ht = {this.props.ht}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(withRouter(FeedContainer));\r\n","import React from 'react';\r\nimport FeedContainer from '../containers/feed/FeedContainer';\r\nimport qs from 'query-string'\r\n\r\nconst FeedPage = ({location}) => {\r\n  const query = qs.parse(location.search).hashtag  \r\n  return (\r\n    <div style={{overflow : \"hidden\"}}>\r\n      <FeedContainer ht={query}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;","import React, { Component } from \"react\";\r\nimport \"./Edit.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../lib/Spinner\";\r\n\r\nclass Edit extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    uploading: false\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { user, history } = this.props;\r\n    if (!user) {\r\n      alert(\"Please login first\");\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleFileChange = e => {\r\n    this.setState({\r\n      selectedFile: e.target.files[0]\r\n    });\r\n    console.log(e.target.files[0]);\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { history, user } = this.props;\r\n    const { selectedFile } = this.state;\r\n\r\n    if (!selectedFile) {\r\n      alert(\"프로필 사진을 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const fd = new FormData();\r\n    console.log(selectedFile);\r\n    fd.append(\"img\", selectedFile, selectedFile.name); // 파일의 원본 파일이름 그대로\r\n    fd.append(\"userid\", user.id);\r\n\r\n    const contentType = {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    };\r\n\r\n    this.setState({\r\n      uploading: true\r\n    });\r\n    await axios.post(\"/post/profile\", fd, contentType);\r\n    history.push(`/user/${user.id}`);\r\n  };\r\n\r\n  render() {\r\n    const { selectedFile } = this.state;\r\n\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if(this.state.uploading) return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />;\r\n    \r\n    return (\r\n      <div className=\"edit\">\r\n        <center>\r\n          <div className=\"writing-form\">\r\n            <label className=\"file-wrapper\">\r\n              {selectedFile ? \"선택완료 :)\" : \"프로필 사진 선택하기\"}\r\n              <input\r\n                id=\"img\"\r\n                name=\"img\"\r\n                type=\"file\"\r\n                className=\"file-upload\"\r\n                onChange={this.handleFileChange}\r\n                accept=\".gif, .jpg, .png\"\r\n              />\r\n            </label>\r\n            {selectedFile ? selectedFile.name : \"\"}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              className=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(withRouter(Edit));\r\n","import React from 'react';\r\nimport Edit from \"components/edit/Edit\"\r\n\r\nconst EditPage = () => {\r\n  return (\r\n    <div>\r\n        <Edit />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPage;","import React, { Component } from \"react\";\r\nimport \"./SearchList.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass UserResult extends Component {\r\n  handleClick = () => {\r\n    // console.log(\"User Clicked\");\r\n    const { history, user } = this.props;\r\n    history.push(`/user/${user.id}`);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div className=\"user-result\" onClick={this.handleClick}>\r\n        {user.nick}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HashTagResult extends Component {\r\n  handleClick = () => {\r\n    console.log(\"hashtag Clicked\");\r\n    const { history, hashtag } = this.props;\r\n    history.push(`/feed?hashtag=${hashtag.title}`);\r\n  };\r\n\r\n  render() {\r\n    const { hashtag } = this.props;\r\n    return (\r\n      <div className=\"ht-result\" onClick={this.handleClick}>\r\n        #{hashtag.title}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SearchList extends Component {\r\n  // token이 \"user\"이면 user 3개를, \"user\"가 아니면 user의 3래의 결과를 리턴해줌\r\n  // count에 따라 둘다 갯수만큼 리턴해줌(hashtag만 검색되거나 user만 검색된 경우에 6개를 받고, 둘다 검색된 경우에 3개씩 받기 위함)\r\n  mapItems = (arr, token, count) => {\r\n    return token === \"user\"\r\n      ? arr\r\n          .slice(0, count)\r\n          .map(user => (\r\n            <UserResult\r\n              user={user}\r\n              history={this.props.history}\r\n              key={user.id}\r\n            />\r\n          ))\r\n      : arr\r\n          .slice(0, 3)\r\n          .map(hashtag => (\r\n            <HashTagResult\r\n              hashtag={hashtag}\r\n              history={this.props.history}\r\n              key={hashtag.id}\r\n            />\r\n          ));\r\n  };\r\n\r\n  render() {\r\n    const { input, data } = this.props;\r\n    const { mapItems } = this;\r\n\r\n    if (input.length <= 1) {\r\n      return <div />;\r\n    }\r\n\r\n    if (data) {\r\n      // 입력을 해서 데이터가 있을 때\r\n      const { user, hashtag } = data;\r\n      // console.log(user, hashtag);\r\n      if (user[0] && hashtag[0]) {\r\n        // 유저와 해시태그 모두 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"user-list\">{mapItems(user, \"user\", 3)}</div>\r\n              <div className=\"hash-list\">{mapItems(hashtag, \"hash\", 3)}</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (user[0] && !hashtag[0]) {\r\n        // 유저만 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"user-list\" style={{ height: \"200px\" }}>\r\n                {mapItems(user, \"user\", 6)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (!user[0] && hashtag[0]) {\r\n        // 해시태그만 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"hash-list\" style={{ height: \"200px\" }}>\r\n                {mapItems(hashtag, \"hash\", 6)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        // 검색결과 없음\r\n\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"noresult\">No Result</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchList);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../components/common/Header/Header\";\r\nimport SearchList from \"../../components/common/SearchList\";\r\nimport { debounce } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nclass HeaderContainer extends Component {\r\n  state = {\r\n    input: \"\",\r\n    results : null,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState(\r\n      {input: e.target.value},\r\n      () => {  if(this.state.input.length >= 2) this.searchUser(this.state.input);}\r\n    );\r\n  };\r\n\r\n  handleBlur = () =>{\r\n    setTimeout( () => {\r\n      this.setState({\r\n        input : ''\r\n      })\r\n    },150)\r\n  }\r\n\r\n  searchUser = debounce(async input => {\r\n    const results = await axios.post(\"/post/search\", { input: input });\r\n    this.setState({\r\n      results : results.data\r\n    })\r\n  }, 500);\r\n\r\n\r\n  render() {\r\n    const { isAble, to } = this.props;\r\n    const { input } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Header\r\n          isAble={isAble}\r\n          to={to}\r\n          input={input}\r\n          handleChange={this.handleChange}\r\n          handleBlur={this.handleBlur}\r\n        />\r\n        <SearchList data={this.state.results} input={input} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderContainer;\r\n","import React, { Component } from 'react';\nimport {Switch, Route } from 'react-router-dom'\nimport {MainPage, EachPostPage, UserPage, WritingPage, NotFound, RegisterPage, FeedPage, EditPage} from 'pages'\nimport HeaderContainer from '../containers/HeaderContainer/HeaderContainer';\n\n\nclass App extends Component {\n  render() {\n    const id = localStorage.getItem('id')\n    return (\n      <div>\n        \n        { id !== null ? (<HeaderContainer isAble={true} to={`/user/${id}`} />) : (<HeaderContainer isAble={false} to=\"123\"/>)}             \n        <Switch>\n          <Route exact path='/' component={MainPage} />          \n          <Route path='/user/:userid/:postid' component={EachPostPage} />\n          <Route path='/user/:userid' component={UserPage} />\n          <Route path='/write' component={WritingPage} />          \n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/feed\" component={FeedPage} />\n          <Route path=\"/edit\" component={EditPage} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App\n","import { createStore, applyMiddleware, compose, combineReducers} from 'redux'\r\nimport penderMiddleware from 'redux-pender'\r\nimport * as modules from './modules'\r\n\r\nconst reducers = combineReducers(modules)\r\nconst middleWares = [penderMiddleware()]\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancer = devtools || compose\r\n\r\nconst configure = () => createStore(reducers, composeEnhancer(applyMiddleware(...middleWares)))\r\nexport default configure","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport App from \"../components/App\";\r\nimport * as loginActions from 'store/modules/login'\r\nimport {bindActionCreators} from 'redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass AppContainer extends Component {  \r\n  componentDidMount() {\r\n    const {LoginActions} = this.props\r\n    LoginActions.login();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    return (      \r\n        <App user={user} />              \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  state => ({\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(AppContainer))","import React from \"react\";\r\nimport App from \"components/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configure from \"store/configure\";\r\nimport AppContainer from \"./containers/AppContainer\";\r\n\r\n\r\n// Appcontianer로 바꿔서 헤더 하려 했는데 흠 잘안됨 여기서 부터 봐라\r\n\r\nconst Root = () => {\r\n  const store = configure();\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>        \r\n        <AppContainer />                \r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport Root from './Root';\nimport 'styles/base.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/puff.4597a1a0.svg\";"],"sourceRoot":""}