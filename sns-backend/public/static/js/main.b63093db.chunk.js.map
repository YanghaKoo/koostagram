{"version":3,"sources":["registerServiceWorker.js","store/modules/login.js","store/modules/post.js","store/configure.js","lib/Spinner/index.js","components/main/Login/Login.js","containers/main/LoginContainer.js","pages/MainPage.js","components/common/Modal/Modal.js","components/user/Profile/Profile.js","containers/user/ProfileContainer.js","components/user/Posts/Posts.js","pages/UserPage.js","components/post/Hashtag/Hashtag.js","components/post/Mention/Mention.js","components/post/EachComment/EachComment.js","components/post/Comment/Comment.js","containers/user/CommentContainer.js","components/post/PostTemplate/PostTemplate.js","containers/post/PostTemplateContainer.js","pages/EachPostPage.js","pages/NotFound.js","components/writing/WritingForm/WritingForm.js","containers/writing/WritingFormContainer.js","components/writing/WritingTemplate/index.js","components/writing/WritingTemplate/WritingTemplate.js","pages/WritingPage.js","components/register/RegisterForm/RegisterForm.js","pages/RegisterPage.js","components/feed/EachFeedComment/EachFeedComment.js","components/feed/EachFeed/EachFeed.js","components/feed/Feed/Feed.js","containers/feed/FeedContainer.js","pages/FeedPage.js","components/edit/Edit.js","pages/EditPage.js","components/common/NotifyModal/NotifyModal.js","components/common/Header/Header.js","components/common/SearchList/SearchList.js","containers/HeaderContainer/HeaderContainer.js","components/App.js","containers/AppContainer.js","Root.js","index.js","lib/Spinner/puff.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","checkLogin","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","get","abrupt","sent","stop","this","apply","arguments","login","createAction","handleActions","objectSpread","pender","type","onSuccess","action","data","payload","localStorage","setItem","user","id","nick","pic","submitPost","content","img","post","change","submit","defineProperty","input","postedId","reducers","combineReducers","modules","middleWares","penderMiddleware","composeEnhancer","compose","configure","createStore","applyMiddleware","Spinner","width","height","pw","ph","style","react_default","createElement","display","justifyContent","alignItems","src","spinner","alt","Login","email","password","isLoading","ref","handleChange","e","_this","setState","target","name","value","tryLogin","_this$state","result","setTimeout","focus","props","history","push","handleEnter","key","_this2","spinnerSize","innerWidth","lib_Spinner","className","placeholder","spellCheck","onChange","onKeyPress","textAlign","onClick","paddingBottom","paddingTop","Link","to","background","disabled","_callee2","_context2","Component","withRouter","LoginContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getItem","LoginActions","main_Login_Login","connect","dispatch","bindActionCreators","loginActions","MainPage","main_LoginContainer","ModalPortal","children","el","document","getElementById","ReactDOM","createPortal","Modal","handleOpenModal","handleModal","handleCloseModal","showProfile","concat","_this$props","check","list","open","flist","map","item","Modal_ModalPortal","Profile","buttonLabel","followers","following","profilePic","modal","select","renderModal","common_Modal_Modal","initializer","userid","uid","params","alert","Number","cursor","filter","checkFollow","handleFollow","followid","showFollowerModal","showFollowingModal","bool","editProfile","_this$props2","prevProps","prevState","fontstyle","_this$state2","length","fontSize","fontWeight","PureComponent","ProfileContainer","user_Profile_Profile","Post","handleClick","userId","Posts","posts","reverse","_this3","index","Posts_Post","user_ProfileContainer","user_Posts_Posts","Hashtag","hashtag","slice","Mention","isExist","mention","exist","EachComment","tk","usernick","link","withHT","split","post_Hashtag_Hashtag","post_Mention_Mention","unlike","like","Comment","likeCount","comment","commentsBefore","likers","isloading","postid","likeUsers","updateComment","scrollTop","scrollHeight","handleLikeClick","handleCommentChange","handleSubmit","_callee3","re","_context3","handleKeyPress","showLikers","timeConversion","millisec","seconds","toFixed","minutes","hours","token1","token2","previewCount","createdAt","postTime","writtenDate","substr","Date","toISOString","parse","post_EachComment_EachComment","CommentContainer","post_Comment_Comment","PostTemplate","_this$props$match$par","handleDelete","_this$props$match$par2","confirm","contentWithHashtag","marginBottom","hashtags","user_CommentContainer","PostTemplateContainer","post_PostTemplate_PostTemplate","EachPostPage","post_PostTemplateContainer","NotFound","marginTop","WritingForm","selectedFile","uploading","imagePreviewUrl","isLinkedTagExist","fd","contentType","FormData","append","headers","Content-Type","handleFileChange","reader","FileReader","file","files","onloadend","readAsDataURL","color","imagePreview","imageButtonLabel","accept","WritingFormContainer","PostActions","writing_WritingForm_WritingForm","onSubmit","postActions","WritingTemplate","writing_WritingFormContainer","WritingPage","writing_WritingTemplate","RegisterForm","e_placeholder","n_placeholder","p_placeholder","e_validity","n_validity","p_validity","_this$setState","_this$setState2","nickCheck","emailCheck","test","preventDefault","RrgisterPage","register_RegisterForm_RegisterForm","EachFeedComment","handleCommentAction","unlikeImage","likeImage","EachFeed","likeCounts","commentsCount","commentToggle","forEach","toggleComment","_this$props3","date","marginRight","marginLeft","feed_EachFeedComment_EachFeedComment","RecommendUser","users","shuffle","array","i","j","Math","floor","random","recommendedUsersNumber","isFirstLogin","query","shuffled","Feed_EachRecommend","paddingLeft","paddingRight","EachRecommend","_ref2","Feed","loadingState","noPost","wrongAccess","items","it","endOfList","followingList","listData","qs","search","tag","t0","splice","infiniteScroll","refs","iScroll","addEventListener","clientHeight","loadMoreItems","_this4","ht","scrollTo","_this5","temp","_this6","Feed_RecommendUser","loginuser","eachList","feed_EachFeed_EachFeed","loggedInUser","recommendUsers","FeedContainer","feed_Feed_Feed","FeedPage","overflow","feed_FeedContainer","Edit","EditPage","components_edit_Edit","EachNotification","nickname","postpic","postUserId","isChecked","Promise","all","getPostInfo","category","NotifyModal","handleToggle","notifications","NotifyModal_EachNotification","notifying","NotifyModal_ModalPortal","Header","toggle","hasNewNotification","getNotifications","setInterval","myNotifications","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","undefined","Symbol","iterator","done","return","finish","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","handleLink","handleToggleNotify","nextProps","isAble","handleBlur","cursorStyle","common_NotifyModal_NotifyModal","onBlur","UserResult","HashTagResult","_this2$props","title","SearchList","mapItems","arr","token","count","SearchList_UserResult","SearchList_HashTagResult","HeaderContainer","results","searchUser","debounce","_x","common_Header_Header","common_SearchList_SearchList","App","containers_HeaderContainer_HeaderContainer","Switch","Route","exact","path","component","UserPage","RegisterPage","AppContainer","components_App","Root","store","es","BrowserRouter","containers_AppContainer","render","src_Root","URL","process","origin","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b63093db.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createAction, handleActions} from 'redux-actions'\r\nimport {pender} from 'redux-pender'\r\nimport axios from 'axios'\r\n\r\nconst checkLogin = async () => await axios.get('/auth/login')\r\n\r\nconst LOGIN = 'login/LOGIN'\r\n\r\nexport const login = createAction(LOGIN,checkLogin)\r\n\r\nconst initialState = {\r\n  user : null,\r\n  id : null\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n  ...pender({\r\n    type : LOGIN,\r\n    onSuccess : (state,action) =>{\r\n      const { data } = action.payload\r\n      \r\n      \r\n      localStorage.setItem('id', data.user.id)\r\n      localStorage.setItem('nick', data.user.nick)\r\n      localStorage.setItem(\"pic\", data.user.pic)\r\n\r\n      // localStorage.id = data.user.id\r\n      // localStorage.nick = data.user.nick\r\n      \r\n      return {user : data.user}\r\n      // return {user : 'asdasd'}\r\n    }\r\n  })\r\n},initialState)","import {createAction, handleActions} from 'redux-actions'\r\nimport {pender} from 'redux-pender'\r\nimport axios from 'axios'\r\n\r\n// 뒤에 img 흠..\r\nexport const submitPost = (content,img) => axios.post('/post', {content, img})\r\n\r\nconst CHANGE = 'post/CHANGE'\r\nconst SUBMIT = 'post/SUBMIT'\r\n\r\nexport const change = createAction(CHANGE)\r\nexport const submit = createAction(SUBMIT,submitPost)\r\n\r\nconst initialState = {\r\n  input : '',\r\n  postedId : ''\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n  [CHANGE] : (state,action) => {\r\n    const {payload : input} = action\r\n    return ({input})\r\n  },\r\n  ...pender({\r\n    type : SUBMIT,    \r\n    onSuccess : (state,action) =>{\r\n      const {id} = action.payload.data\r\n      return ({postedId : id})\r\n    }\r\n  })\r\n},initialState)","import { createStore, applyMiddleware, compose, combineReducers} from 'redux'\r\nimport penderMiddleware from 'redux-pender'\r\nimport * as modules from './modules'\r\n\r\nconst reducers = combineReducers(modules)\r\nconst middleWares = [penderMiddleware()]\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancer = devtools || compose\r\n\r\nconst configure = () => createStore(reducers, composeEnhancer(applyMiddleware(...middleWares)))\r\nexport default configure","import React from \"react\";\r\nimport spinner from \"./puff.svg\";\r\n\r\nconst Spinner = ({ width, height, pw, ph }) => {\r\n  const style = { width: width, height: height};\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: pw,\r\n        height: ph,\r\n        \r\n      }}\r\n    >\r\n      <img src={spinner} style={style} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"lib/Spinner\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoading: false,\r\n    error: false\r\n  };\r\n\r\n  ref = null;\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  tryLogin = async () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    const { email, password } = this.state;\r\n    const result = await axios.post(\"/auth/login\", { email, password });\r\n    \r\n    if (result.data === \"failure\") {\r\n      // 시각적 효과를 위함\r\n      setTimeout( () => {\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\",\r\n          isLoading: false,\r\n          error: true\r\n        });\r\n        this.ref.focus();\r\n      }, 200)            \r\n    } else {            \r\n      localStorage.setItem(\"id\", result.data.id)\r\n      localStorage.setItem(\"nick\", result.data.nick)\r\n      localStorage.setItem(\"pic\", result.data.pic)\r\n\r\n      this.setState({ isLoading: false });\r\n      this.props.history.push(\"/feed\");\r\n    }\r\n  };\r\n\r\n  handleEnter = e => {\r\n    if (e.key === \"Enter\") this.tryLogin();\r\n  };\r\n\r\n  render() {\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if (this.state.isLoading)\r\n      return (\r\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\r\n      );\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"inner\">\r\n          <h2>Koostagram</h2>\r\n          \r\n          <div>\r\n            <p>\r\n              <input\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                spellCheck={false}\r\n                className=\"input\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                ref={ref => (this.ref = ref)}\r\n              />\r\n            </p>\r\n            <p>\r\n              <input\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"input\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                onKeyPress={this.handleEnter}\r\n              />\r\n            </p>\r\n\r\n            <p style={{textAlign:\"center\"}}>              \r\n              <input\r\n                className=\"submit\"\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                onClick={this.tryLogin}\r\n              />\r\n            </p>\r\n            {this.state.error ? (\r\n              <div className=\"error-message\">\r\n                id 혹은 비밀번호가 일치하지 않습니다.\r\n              </div>\r\n            ) : null}\r\n\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                paddingBottom: \"20px\",\r\n                paddingTop: \"20px\"\r\n              }}\r\n            >\r\n              If you don't have account...\r\n            </div>\r\n            <p style={{textAlign:\"center\"}}>   \r\n              <Link to=\"/register\">\r\n                <input className=\"submit\" type=\"button\" value=\"New Account\" />\r\n              </Link>\r\n            </p>\r\n\r\n            <p style={{textAlign:\"center\"}}>   \r\n              <input\r\n                className=\"submit\"\r\n                type=\"submit\"\r\n                // value=\"KaKao Login\"\r\n                value=\"Now Beta..\"\r\n                style={{ background: \"#fcd411\" }}\r\n                disabled\r\n                onClick={async () => {\r\n                  axios.post(\"/auth/kakao\");\r\n                  // await axios.post('/post/sk')\r\n                  // console.log(1)\r\n                }}\r\n              />\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"left-box\">\r\n          <img\r\n            className=\"img\"\r\n            src=\"https://www.parisapartment7eme.com/eiffelcam/etandmoonb.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\nimport * as loginActions from 'store/modules/login'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport Login from 'components/main/Login'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass LoginContainer extends Component {\r\n  \r\n  constructor(props){\r\n    super(props)            \r\n    if(localStorage.getItem(\"id\")){      \r\n      \r\n      // this.props.history.push(`/user/${user.id}`)    \r\n      this.props.history.push('/feed')\r\n      return  \r\n    }    \r\n  }  \r\n  \r\n  componentDidMount() {\r\n    const {LoginActions} = this.props\r\n    LoginActions.login();    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Login />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(withRouter(LoginContainer))","import React from 'react';\r\nimport LoginContainer from 'containers/main/LoginContainer';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div>\r\n      <LoginContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ModalPortal = ({ children }) => {\r\n  const el = document.getElementById(\"modal\");\r\n  return ReactDOM.createPortal(children, el);\r\n};\r\n\r\n\r\nclass Modal extends Component {\r\n  handleOpenModal = () => {\r\n    this.props.handleModal(true);\r\n  };\r\n  \r\n  handleCloseModal = () => {\r\n    this.props.handleModal(false);\r\n  };\r\n\r\n  showProfile = id => {\r\n    this.handleCloseModal();\r\n    this.props.history.push(`/user/${id}`);\r\n  };\r\n\r\n  render() {\r\n    // check : modal의 제목(Follower인지 Following 인지 구분)\r\n    // list : Following(Follower) 목록\r\n    // open : true일 때 모달을 열어줌\r\n    const { check, list, open } = this.props;\r\n\r\n    // first : 넘어온 list로 목록을 구성해 줌\r\n    if (open === true) {\r\n      const flist = list.map(item => {\r\n        \r\n        return (\r\n          <div\r\n            key={item.id}\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            onClick={() => {\r\n              this.showProfile(item.id);\r\n            }}\r\n            className=\"each-user\"\r\n          >\r\n            <div>\r\n              <img src={item.pic ? item.pic : \"https://myspace.com/common/images/user.png\"} className=\"img\" alt=\"\"/>\r\n            </div> \r\n            <div className=\"nick\">{item.nick}</div>            \r\n          </div>\r\n        );\r\n      });\r\n\r\n\r\n      return (\r\n        <ModalPortal>\r\n          <div className=\"modal\">\r\n            <div className=\"content\">\r\n              <center>\r\n                <h3>{check}</h3>\r\n              </center>\r\n              <div className=\"flist\">{flist}</div>\r\n              <br />\r\n              <center>\r\n                <button onClick={this.handleCloseModal} className=\"close\">Close</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </ModalPortal>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Modal);\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./Profile.scss\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../../common/Modal/Modal\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nclass Profile extends PureComponent {\r\n  state = {\r\n    nick: \"\",\r\n    buttonLabel: \"follow\",\r\n    followers: [],\r\n    following: [],\r\n    profilePic: \"\",\r\n    modal: false,\r\n    select: 0,\r\n    style: null,\r\n    isLoading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { uid } = this.props;\r\n    if (prevProps.uid !== uid) this.initializer();\r\n  }\r\n\r\n  renderModal = () => {\r\n    return <Modal open={this.state.modal} />;\r\n  };\r\n\r\n  // 초기화 함수\r\n  initializer = async () => {\r\n    this.setState({ isLoading: true }); // 읽어오기 시작!\r\n    const { userid } = this.props.match.params;\r\n    const { history, uid } = this.props;\r\n\r\n    // 버튼라벨 초기화\r\n    if (this.state.buttonLabel === \"unfollow\") {\r\n      this.setState({\r\n        buttonLabel: \"follow\"\r\n      });\r\n    }\r\n\r\n    const nick = await axios.post(\"/post/getNick\", { userid }).catch(e => {\r\n      alert(\"Wrong Request(해당 유저가 존재하지 않습니다.)\");\r\n      history.push(\"/\");\r\n    });\r\n\r\n    const followers = await axios.post(\"/post/getFollowers\", { userid });\r\n    const following = await axios.post(\"/post/getFollowing\", { userid });\r\n    const profilePic = await axios.post(\"/post/getUserPic\", { userid });\r\n\r\n    this.setState({ isLoading: false }); // 읽어오기 완료!\r\n\r\n    // 자기 프로필 일 때만 커서를 pointer로 해서 edit 하기 위함\r\n    let style = null;\r\n    if (Number(localStorage.getItem(\"id\"))) {\r\n      style =\r\n        Number(uid) === Number(localStorage.getItem(\"id\"))\r\n          ? { cursor: \"pointer\" }\r\n          : null;\r\n    }\r\n\r\n    this.setState({\r\n      nick: nick.data,\r\n      followers: followers.data.filter(item => item.id !== Number(userid)),\r\n      following: following.data.filter(item => item.id !== Number(userid)),\r\n      profilePic: profilePic.data,\r\n      style: style\r\n    });\r\n    this.checkFollow();\r\n  };\r\n\r\n  checkFollow = () => {    \r\n    const { followers } = this.state;\r\n\r\n    if (Number(localStorage.getItem('id'))) {\r\n      followers.map(item => {\r\n        if (item.id === Number(localStorage.getItem(\"id\"))) {\r\n          this.setState({\r\n            buttonLabel: \"unfollow\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // follow(unfollow)버튼 클릭\r\n  handleFollow = e => {\r\n    //팔로우 버튼 누르면\r\n    const { userid } = this.props.match.params;\r\n    const { followers, buttonLabel } = this.state;\r\n\r\n    if (buttonLabel === \"follow\") {\r\n      axios.post(\"/post/follow\", {\r\n        followid: Number(localStorage.getItem(\"id\")),\r\n        userid\r\n      });\r\n      this.setState({\r\n        buttonLabel: \"unfollow\",\r\n        followers: followers.concat({\r\n          id: Number(localStorage.getItem(\"id\")),\r\n          nick: localStorage.getItem(\"nick\"),\r\n          pic: localStorage.getItem(\"pic\")\r\n        })\r\n      });\r\n    } else {\r\n      axios.post(\"/post/unfollow\", {\r\n        followid: Number(localStorage.getItem(\"id\")),\r\n        userid\r\n      });\r\n      this.setState({\r\n        buttonLabel: \"follow\",\r\n        followers: followers.filter(\r\n          item => item.id !== Number(localStorage.getItem(\"id\"))\r\n        )\r\n      });\r\n    }\r\n  };\r\n\r\n  // select로 follower를 띄울 모달인지 following를 띄울 모달인지 구별해줌\r\n  // Follower와 관련된 modal을 열어줌\r\n  showFollowerModal = e => {\r\n    this.setState({\r\n      modal: true,\r\n      select: 0\r\n    });\r\n  };\r\n\r\n  // Following과 관련된 modal을 열어줌\r\n  showFollowingModal = e => {\r\n    this.setState({\r\n      modal: true,\r\n      select: 1\r\n    });\r\n  };\r\n\r\n  // modal 열기/닫기\r\n  handleModal = bool => {\r\n    this.setState({\r\n      modal: bool\r\n    });\r\n  };\r\n\r\n  // 본인의 page일 때만 프로필사진 편집이 가능하게 구현, 남의 page에선 동작 X\r\n  editProfile = () => {\r\n    const { uid, history } = this.props;\r\n    if (Number(uid) === Number(localStorage.getItem(\"id\"))) {\r\n      history.push(\"/edit\");\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { userid } = this.props.match.params;\r\n\r\n    const {\r\n      followers,\r\n      following,\r\n      buttonLabel,\r\n      nick,\r\n      modal,\r\n      select,\r\n      profilePic,\r\n      style,\r\n      isLoading\r\n    } = this.state;\r\n\r\n    // 로딩 puff 보여주기\r\n    if (isLoading) {\r\n      let ph;\r\n      window.innerWidth > 676 ? (ph = \"240px\") : (ph = \"310px\");\r\n      const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n      return (\r\n        <div className=\"profile\">\r\n          <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph={ph} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let fontstyle;\r\n    if (window.innerWidth < 450 && nick.length >= 8) {\r\n      fontstyle = { fontSize: \"1rem\", fontWeight: \"800\" };\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        {select ? (\r\n          <Modal\r\n            open={modal}\r\n            handleModal={this.handleModal}\r\n            check=\"Following\"\r\n            list={following}\r\n          />\r\n        ) : (\r\n          <Modal\r\n            open={modal}\r\n            handleModal={this.handleModal}\r\n            check=\"Followers\"\r\n            list={followers}\r\n          />\r\n        )}\r\n        <div className=\"profile-pic\" onClick={this.editProfile} style={style}>\r\n          <img\r\n            src={\r\n              profilePic\r\n                ? profilePic\r\n                : \"https://myspace.com/common/images/user.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"user-detail\">\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div>\r\n              <div className=\"nick\" style={fontstyle}>\r\n                {nick ? \"\" + nick : \"loading...\"}\r\n              </div>{\" \"}\r\n              <br />\r\n              {!localStorage.getItem(\"id\") ||\r\n              userid === localStorage.getItem(\"id\") ? null : (\r\n                <input\r\n                  type=\"button\"\r\n                  value={buttonLabel}\r\n                  onClick={this.handleFollow}\r\n                  className=\"follow-button\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"show-follow\" onClick={this.showFollowerModal}>\r\n              {followers.length} <br />\r\n            </div>\r\n            Followers\r\n          </div>\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"show-follow\" onClick={this.showFollowingModal}>\r\n              {following.length} <br />\r\n            </div>\r\n            Following\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"../../components/user/Profile/Profile\";\r\nimport * as loginActions from 'store/modules/login'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\n\r\nclass ProfileContainer extends Component {\r\n  render() {        \r\n    return (\r\n      <div>\r\n        <Profile\r\n          user={this.props.user}\r\n          uid={this.props.uid}\r\n          match={this.props.match}   \r\n          history={this.props.history}       \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user: state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(ProfileContainer);\r\n","import React, { Component } from \"react\";\r\nimport \"./Posts.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nclass Post extends Component {\r\n  \r\n  handleClick = (e) => {\r\n    const {item, history} = this.props\r\n    history.push(`/user/${item.userId}/${item.id}`)\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.props\r\n    return (\r\n        <img\r\n          src={item.img}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          alt=\"\"\r\n          onClick={this.handleClick}        \r\n        />      \r\n    );\r\n  }\r\n}\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    posts: [\"noPost\"],    \r\n    isLoading : false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer()\r\n  }\r\n\r\n  initializer = () => {\r\n    const { userid } = this.props.match.params;\r\n    this.setState({isLoading : true})\r\n    axios.post(\"/post/getPosts\", { userid }).then(posts => {\r\n      this.setState({\r\n        posts: posts.data.reverse(),\r\n        isLoading : false\r\n      })\r\n    });\r\n  } \r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.uid !== this.props.uid)  this.initializer();\r\n  }\r\n  \r\n  render() {\r\n    const { posts, isLoading } = this.state;\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if(isLoading) {\r\n      return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"60vh\"/>\r\n    }\r\n  \r\n\r\n    // loading , check no post\r\n    if (posts[0] === \"noPost\") {\r\n      return null\r\n    } else if (posts.length === 0) {\r\n      return <div className=\"no-post\">No post </div>;\r\n    }\r\n\r\n    // TODO : delete index(key) when deploy(선택사항)\r\n    const list = posts.map((item, index) => (\r\n      <Post src={item.img} key={index} item={item} history={this.props.history} />\r\n    ));\r\n    //console.log(posts)\r\n    return (\r\n      <center>\r\n        <div className=\"posts\">{list}</div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Posts);","import React from 'react';\r\nimport ProfileContainer from 'containers/user/ProfileContainer';\r\nimport Posts from 'components/user/Posts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport './UserPage.scss'\r\n\r\nconst UserPage = ({match, history}) => {\r\n  const { userid : uid } = match.params;\r\n  return (\r\n    <div className=\"userpage-container\">\r\n      <ProfileContainer uid={uid} match={match} history={history}/>\r\n      <Posts uid={uid}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserPage)","import React, { Component } from 'react';\r\n\r\nclass Hashtag extends Component {\r\n  render() {\r\n    const { history, hashtag } = this.props;\r\n    return (\r\n      <div\r\n        className=\"hashed\"\r\n        onClick={() => {\r\n          history.push(`/feed?hashtag=${hashtag.slice(1)}`);\r\n        }}\r\n      >\r\n        {hashtag}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hashtag;\r\n","import React, { Component } from \"react\";\r\nimport \"./Mention.scss\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Mention extends Component {\r\n  state = {\r\n    isExist: true,\r\n    id: null,\r\n    \r\n  };\r\n\r\n  async componentDidMount() {\r\n    const nick = this.props.mention.slice(1);\r\n    const exist = await axios.post(\"/post/getIdByNick\", { nick });\r\n    if (exist.data.id) {      \r\n      this.setState({        \r\n        id: exist.data.id,        \r\n      })\r\n    }else{\r\n      this.setState({\r\n        isExist : false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { history } = this.props;\r\n    if(this.state.isExist && this.state.id) history.push(`/user/${this.state.id}`);\r\n  };\r\n\r\n  render() {\r\n    const { mention } = this.props;\r\n    const className = this.state.isExist ? \"mention\" : null;\r\n\r\n      return (\r\n        <div className={className} onClick={this.handleClick}>\r\n          {mention}\r\n        </div>\r\n      );      \r\n  }\r\n}\r\n\r\nexport default Mention;\r\n","import React, { Component } from \"react\";\r\nimport \"./EachComment.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport Mention from \"../Mention/Mention\";\r\n\r\nclass EachComment extends Component {\r\n  state = {\r\n    id: null,\r\n    tk: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const link = await axios.post(\"/post/getIdByNick\", {\r\n      nick: this.props.usernick\r\n    });\r\n    this.setState({\r\n      id: link.data.id\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { history } = this.props;\r\n    const { id } = this.state;\r\n    id && history.push(`/user/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { content, usernick } = this.props;\r\n    let withHT;\r\n    if (content) {\r\n      withHT = content.split(/\\s+/); // space or newline으로 나눠줌\r\n      withHT = withHT.map(item => {\r\n        // console.log(item)\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />\r\n            </div>\r\n          );\r\n        } else if (item[0] === \"@\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Mention mention={item} history={this.props.history} match={this.props.match}/>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"each-comment\">\r\n        <div onClick={this.handleClick} className=\"nick-area\">\r\n          {usernick} &nbsp;{\" \"}\r\n        </div>\r\n        <div className=\"test\"> {withHT}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EachComment);\r\n","import React, { Component } from \"react\";\r\nimport \"./Comment.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EachComment from \"../EachComment/EachComment\";\r\nimport Modal from \"../../common/Modal/Modal\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nconst unlike =\r\n  \"https://cdn1.iconfinder.com/data/icons/valentine-s-day-simplicity/512/empty_heart-512.png\";\r\nconst like =\r\n  \"https://cdn1.iconfinder.com/data/icons/love-icons/512/love-heart-512.png\";\r\n\r\n// TODO : this.props.nick은 댓글 작성할 때 쓸 것\r\nclass Comment extends Component {\r\n  state = {\r\n    like: unlike,\r\n    likeCount: 0,\r\n    comment: \"\",\r\n    commentsBefore: null,\r\n    modal: false,\r\n    likers: [],\r\n    isloading: false\r\n  };\r\n\r\n  // likeUsers에 좋아요 누른 애들 정보 들어있음\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.token1 !== this.props.token1 ||\r\n      prevProps.token2 !== this.props.token2\r\n    )\r\n      this.initializer();\r\n  }\r\n\r\n  initializer = async () => {\r\n    this.setState({ isloading: true });\r\n    const { postid } = this.props.match.params;\r\n\r\n    const likeUsers = await axios.post(\"/post/getLikeCount\", { postid });\r\n    const commentsBefore = await axios.post(\"/post/getComments\", { postid });\r\n\r\n    this.setState({\r\n      likeCount: likeUsers.data.length,\r\n      commentsBefore: commentsBefore.data,\r\n      likers: likeUsers.data\r\n    });\r\n\r\n    if (localStorage.getItem(\"id\")) {\r\n      likeUsers.data.map(item => {\r\n        if (item.id === Number(localStorage.getItem(\"id\"))) {\r\n          this.setState({\r\n            like: like\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this.setState({ isloading: false });\r\n  };\r\n\r\n  // 댓글 등록 후 실시간으로 업데이트 시키기, 댓글 등록후 스크롤 맨 아래로 내려서 본인이 등록한 댓글 확인\r\n  updateComment = async () => {\r\n    const { postid } = this.props.match.params;\r\n    const commentsBefore = await axios.post(\"/post/getComments\", { postid });\r\n    this.setState(\r\n      {\r\n        commentsBefore: commentsBefore.data\r\n      },\r\n      () => {\r\n        document.getElementById(\"cl\").scrollTop = document.getElementById(\r\n          \"cl\"\r\n        ).scrollHeight;\r\n      }\r\n    );\r\n  };\r\n\r\n  // 좋아요 버튼이 눌릴 때 좋아요 및 좋아요 취소\r\n  handleLikeClick = () => {\r\n    const { postid } = this.props.match.params;\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"Login 후에 시도해 주세요.\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.like === unlike) {\r\n      this.setState({\r\n        like: like,\r\n        likeCount: this.state.likeCount + 1\r\n      });\r\n      axios.post(\"/post/like\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    } else {\r\n      this.setState({\r\n        like: unlike,\r\n        likeCount: this.state.likeCount - 1\r\n      });\r\n      axios.post(\"/post/unlike\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCommentChange = e => {\r\n    this.setState({\r\n      comment: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    const { postid } = this.props.match.params;\r\n    const { comment } = this.state;\r\n\r\n    let re = [];\r\n    try {\r\n      re = comment.match(/#[^\\s]*/g).filter(item => item.length >= 14);\r\n    } catch (e) {\r\n      // console.log(e)\r\n      re = [];\r\n    }\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"먼저 로그인해 주세요.\");\r\n      return;\r\n    }\r\n    if (comment.length >= 50) {\r\n      alert(\"댓글은 50자 이내로 입력해 주세요.\");\r\n      return;\r\n    }\r\n    if (comment.match(/#.*\\S#/g)) {\r\n      alert(\"해쉬태그는 연결해서 등록할수 없어요!\");\r\n      return;\r\n    } else if (re[0]) {\r\n      alert(\"14자가 넘는 해쉬태그가 존재합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (!comment) {\r\n      alert(\"내용을 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    await axios.post(\"/post/uploadComment\", {\r\n      content: comment,\r\n      postid,\r\n      usernick: localStorage.getItem(\"nick\")\r\n    });\r\n\r\n    this.setState({\r\n      comment: \"\"\r\n    });\r\n    this.updateComment();\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") this.handleSubmit();\r\n  };\r\n\r\n  showLikers = () => {\r\n    this.setState({\r\n      modal: true\r\n    });\r\n  };\r\n\r\n  // modal 열기/닫기\r\n  handleModal = bool => {\r\n    this.setState({\r\n      modal: bool\r\n    });\r\n  };\r\n\r\n  timeConversion = millisec => {\r\n    const seconds = (millisec / 1000).toFixed(0);\r\n    const minutes = (millisec / (1000 * 60)).toFixed(0);\r\n    const hours = (millisec / (1000 * 60 * 60)).toFixed(0);\r\n\r\n    if (seconds < 60) {\r\n      return seconds + \" sec ago\";\r\n    } else if (minutes < 60) {\r\n      return minutes + \" min ago\";\r\n    } else if (hours < 24) {\r\n      return hours + \" hrs ago\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { previewCount, createdAt } = this.props;\r\n    const { commentsBefore, modal, isloading } = this.state;\r\n\r\n    if (isloading) {\r\n      return <Spinner width=\"50px\" height=\"50px\" pw=\"100%\" ph=\"150%\" />;\r\n    }\r\n\r\n    let postTime = null;\r\n    if (createdAt) {\r\n      const writtenDate = createdAt.substr(0, 10);\r\n      const nowDate = new Date().toISOString().substr(0, 10);\r\n\r\n      // n시간 전\r\n      if (writtenDate === nowDate) {\r\n        postTime = this.timeConversion(new Date() - Date.parse(createdAt));\r\n      } else {\r\n        postTime = writtenDate;\r\n      }\r\n    }\r\n\r\n    let list =\r\n      commentsBefore &&\r\n      commentsBefore.map(item => {\r\n        return (\r\n          <EachComment\r\n            content={item.content}\r\n            usernick={item.usernick}\r\n            key={item.id}\r\n            match={this.props.match}\r\n          />\r\n        );\r\n      });\r\n\r\n    if (list !== null && list.length === 0) list = \"첫 코멘트를 입력해주세요!\";\r\n\r\n    return (\r\n      <div className=\"comment\">\r\n        <Modal\r\n          open={modal}\r\n          handleModal={this.handleModal}\r\n          check=\"Likers\"\r\n          list={this.state.likers}\r\n        />\r\n        <div>\r\n          <div className=\"like-wrap\">\r\n            <div>\r\n              <img\r\n                style={{ cursor: \"pointer\" }}\r\n                src={this.state.like}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                onClick={this.handleLikeClick}\r\n              />\r\n              <span className=\"show-likers\" onClick={this.showLikers}>\r\n                &nbsp;{this.state.likeCount} likes\r\n              </span>\r\n            </div>\r\n            <div className=\"sk-requirement\">\r\n              <img\r\n                src=\"https://cdn3.iconfinder.com/data/icons/glyph/141/Alarm-Clock-512.png\"\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n              />\r\n              <span>{postTime}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"comments-list\" id=\"cl\">\r\n          {list}\r\n        </div>\r\n\r\n        {previewCount >= 5 ? (\r\n          <div>\r\n            <div className=\"comment-write\">\r\n              <input\r\n                value={this.state.comment}\r\n                onChange={this.handleCommentChange}\r\n                onKeyPress={this.handleKeyPress}\r\n                className=\"comment-input\"\r\n                placeholder=\"Your Comment\"\r\n                spellCheck={false}\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                value=\"Submit\"\r\n                onClick={this.handleSubmit}\r\n                className=\"comment-submit\"\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Comment);\r\n","import React, { Component } from \"react\";\r\nimport Comment from \"../../components/post/Comment/Comment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CommentContainer extends Component {\r\n  render() {\r\n    const { user, previewCount, createdAt } = this.props;\r\n    // console.log(user);\r\n    return (\r\n      <div style={{ height: \"36%\" }}>\r\n        <Comment  user={user} previewCount={previewCount} token1={this.props.token1} token2={this.props.token2} createdAt={createdAt}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(CommentContainer);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PostTemplate.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CommentContainer from \"../../../containers/user/CommentContainer\";\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\nimport Mention from \"../Mention/Mention\";\r\n\r\n\r\nclass PostTemplate extends Component {\r\n  state = {\r\n    img: null,\r\n    content: null,\r\n    nick: null,\r\n    createdAt : null\r\n  };\r\n\r\n\r\n  async componentDidMount() {\r\n    this.initializer()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if( (prevProps.token1 !== this.props.token1)  || (prevProps.token2 !== this.props.token2) ) this.initializer()\r\n  }\r\n  \r\n\r\n  initializer = async () => {\r\n    const { userid, postid } = this.props.match.params;\r\n\r\n    // 게시글 가져오기 실패는 빈 배열이라도 리턴해 주니까 catch가 아닌 이런 방식으로 해야함\r\n    const post = await axios.post(\"/post/getSinglePost\", { postid });\r\n    if (!post.data) {\r\n      alert(\"해당 게시글이 존재하지 않습니다.\");\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n\r\n    // nick은 가져오기 실패시 catch로 디버깅\r\n    const user = await axios.post(\"/post/getNick\", { userid }).catch(e => {\r\n      alert(\"해당 유저가 존재하지 않습니다.\");\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    });\r\n\r\n    \r\n    this.setState({\r\n      img: post.data.img,\r\n      content: post.data.content,\r\n      nick: user.data,\r\n      createdAt : post.data.createdAt\r\n    });\r\n  }\r\n\r\n  handleDelete = async () => {\r\n    const { postid, userid } = this.props.match.params;\r\n    const { history } = this.props;\r\n\r\n    if (window.confirm(\"삭제하시겠습니까?\")) {\r\n      await axios.post(\"/post/deletePost\", { postid });      \r\n      history.push(`/user/${userid}`);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    const { img, content, createdAt } = this.state;\r\n    const { userid } = this.props.match.params;\r\n    const { history } = this.props;\r\n\r\n\r\n\r\n\r\n    // 본문의 hashtag부분을 해당 해쉬태그 검색과 연결시키는 부분, string형태의 본문을 재구성하여 해쉬태그부분을 차별화\r\n    let contentWithHashtag;\r\n    if (content) {\r\n      contentWithHashtag = content.split(/\\s+/);      // space or newline으로 나눠줌\r\n      contentWithHashtag = contentWithHashtag.map((item) => {\r\n        // console.log(item)\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />              \r\n            </div>\r\n          );\r\n        }else if (item[0] === \"@\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Mention mention={item} history={this.props.history} match={this.props.match}/>              \r\n            </div>\r\n          );\r\n        }\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    if (!img) {\r\n      return (\r\n        <div className=\"loading\">\r\n          <Spinner width=\"100px\" height=\"100px\" pw=\"10%\" ph=\"10vh\"/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"post-template\">\r\n        <div className=\"pic\">\r\n          <img src={img} alt=\"\" />\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"content\">\r\n            <div className=\"nick-with-delete-button\">\r\n              <b\r\n                className=\"nick\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  history.push(`/user/${userid}`);\r\n                }}\r\n              >\r\n                <div style={{ marginBottom: \"20px\" }}>@{this.state.nick}</div>\r\n              </b>\r\n              {(localStorage.getItem(\"id\") ? Number(localStorage.getItem('id')) : null) === Number(userid) ? (\r\n                <input\r\n                  className=\"delete-button\"\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={this.handleDelete}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className=\"test\">{contentWithHashtag}</div>\r\n            <div>{this.hashtags}</div>\r\n          </div>\r\n          <CommentContainer previewCount={5} token1={this.props.token1} token2={this.props.token2} createdAt={createdAt}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PostTemplate);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport PostTemplate from '../../components/post/PostTemplate/PostTemplate';\r\n\r\n\r\nclass PostTemplateContainer extends Component {\r\n  render() {\r\n    const { userid, postid} = this.props.match.params\r\n\r\n    return (\r\n      <div>\r\n        <PostTemplate user={this.props.user} token1={userid} token2={postid}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user : state.login.user\r\n  })\r\n)(PostTemplateContainer)","import React from 'react';\r\n\r\nimport PostTemplateContainer from '../containers/post/PostTemplateContainer';\r\n\r\nconst EachPostPage = ({match}) => {\r\n  return (\r\n    <div>      \r\n      <PostTemplateContainer match={match}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EachPostPage;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"no-post\" style={{fontSize : \"3rem\", marginTop : \"15vh\"}}>\r\n      Page Not Found\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./WritingForm.scss\";\nimport Spinner from \"../../../lib/Spinner\";\n\nclass WritingForm extends Component {\n  state = {\n    selectedFile: null,\n    uploading: false,\n    imagePreviewUrl: null\n  };\n\n  handleSubmit = async data => {\n    const { history, input, onChange } = this.props;\n    const { selectedFile } = this.state;\n\n    let re = input.match(/#[^\\s]*/g);\n    let isLinkedTagExist = input.match(/#.*\\S#/g);\n    // console.log(isLinkedTagExist)\n\n    // 사진을 업로드하지 않은 경우\n    if (!selectedFile) {\n      alert(\"사진은 필수로 첨부해주세요.\");\n      return;\n    } else if (input.length >= 140) {\n      alert(\"본문 내용은 140자 이내로 해주세요.\");\n      return;\n    } else if (re) {\n      re = re.filter(item => item.length >= 14);\n      if (re[0]) {\n        alert(\"12자가 넘는 해쉬태그가 존재합니다.\");\n        return;\n      }\n    }\n\n    if (isLinkedTagExist) {\n      alert(\"해쉬태그 간에는 공백을 넣어주세요.(space)\");\n      return;\n    }\n\n    const fd = new FormData();\n    // console.log(selectedFile);\n    fd.append(\"img\", selectedFile, selectedFile.name); // 파일의 원본 파일이름 그대로\n    fd.append(\"text\", input);\n    fd.append(\"id\", Number(localStorage.getItem(\"id\")));\n\n    const contentType = {\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    };\n\n    this.setState({ uploading: true });\n    const submit = await axios.post(\"/post\", fd, contentType);\n\n    if (submit.data === \"failure\") {\n      this.setState({ uploading: false });\n      alert(\"업로드에 실패하였습니다. 관리자에게 카톡주세요.\");\n      history.push(\"/write\");\n    } else {\n      onChange(\"\");\n      history.push(`/user/${submit.data.userId}/${submit.data.id}`);\n    }\n  };\n\n  handleChange = e => {\n    const { onChange } = this.props;\n    onChange(e.target.value);\n  };\n\n  handleFileChange = e => {\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        selectedFile: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n    try {\n      reader.readAsDataURL(file);\n    } catch (error) {}\n\n    // this.setState({\n    //   selectedFile: e.target.files[0]\n    // });\n  };\n\n  render() {\n    const { input } = this.props;\n    const { imagePreviewUrl } = this.state;\n\n    const style = input.length < 140 ? null : { color: \"red\" };\n    const placeholder =\n      window.innerWidth > 450\n        ? \"오늘의 하루는 어떠셨나요? :)\"\n        : \"오늘의 하루는\\n어떠셨나요? :)\";\n\n    const imagePreview = imagePreviewUrl ? (\n      <img src={imagePreviewUrl} alt=\"\" />\n    ) : (\n      null\n    );\n\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\n\n    const imageButtonLabel = this.state.selectedFile\n      ? \"다시고르기\"\n      : \"업로드할 사진 고르기\";\n\n    // 업로드 버튼 눌러서 업로딩으로 들어가면 스피너 띄우게\n    if (this.state.uploading)\n      return (\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\n      );\n\n    return (\n      <center>\n        <div className=\"writing-form\">\n          <div className=\"title\">Post Your Content!</div>\n          <div className=\"preview\">{imagePreview}</div>\n          <label className=\"file-wrapper\">\n            {imageButtonLabel}\n            <input\n              id=\"img\"\n              name=\"img\"\n              type=\"file\"\n              className=\"file-upload\"\n              onChange={this.handleFileChange}\n              accept=\".gif, .jpg, .png\"\n            />\n          </label>\n          <textarea\n            spellCheck={false}\n            name=\"content\"\n            placeholder={placeholder}\n            className=\"text\"\n            value={input}\n            onChange={this.handleChange}\n          />\n          <div className=\"word-count\" style={style}>\n            {input.length < 140 ? input.length + \" / 140\" : \"글자수 초과\"}\n          </div>\n\n          <input\n            type=\"button\"\n            value=\"Submit!\"\n            className=\"submit\"\n            onClick={() => {\n              this.handleSubmit(input);\n            }}\n          />\n        </div>\n      </center>\n    );\n  }\n}\n\nexport default withRouter(WritingForm);\n","import React, { Component } from \"react\";\r\nimport * as postActions from \"store/modules/post\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport WritingForm from \"../../components/writing/WritingForm/WritingForm\";\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass WritingFormContainer extends Component {\r\n  componentDidMount() {    \r\n      if(!localStorage.getItem(\"id\")) { alert(\"Please login first.\"); this.props.history.push('/');}        \r\n  }\r\n  \r\n  render() {\r\n    const { PostActions, input } = this.props;\r\n    return (\r\n      <div>\r\n        <WritingForm\r\n          input={input}          \r\n          onSubmit={PostActions.submit}          \r\n          onChange={(e)=>{PostActions.change(e)}}          \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    input: state.post.input,\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    PostActions: bindActionCreators(postActions, dispatch)\r\n  })\r\n)(withRouter(WritingFormContainer));\r\n","import WritingTemplate from './WritingTemplate';\n\nexport default WritingTemplate;\n","import React from 'react';\nimport WritingFormContainer from '../../../containers/writing/WritingFormContainer';\n\nconst WritingTemplate = () => (\n  <div>\n    <WritingFormContainer />\n  </div>\n);\n\n\nexport default WritingTemplate\n","import React from 'react';\r\nimport WritingTemplate from 'components/writing/WritingTemplate'\r\n\r\nconst WritingPage = () => {\r\n  return (\r\n    <div>\r\n      <WritingTemplate />      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingPage;","import React, { Component } from \"react\";\r\nimport \"./RegisterForm.scss\";\r\nimport axios from \"axios\";\r\nimport Spinner from 'lib/Spinner'\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    nick: \"\",\r\n    password: \"\",\r\n\r\n    e_placeholder: \"Email을 입력해주세요\",\r\n    n_placeholder: \"nickname 입력 및 중복검사를 해주세요.\",\r\n    p_placeholder: \"8자이상의 비밀번호를 입력해주세요\",\r\n\r\n    e_validity: 0,\r\n    n_validity: 0,\r\n    p_validity: 0,\r\n\r\n    isLoading : false\r\n\r\n  };\r\n\r\n  // componentDidMount() {\r\n    //document.getElementById(\"submit\").disabled = true;\r\n  // }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n    \r\n  //   const {e_validity, n_validity, p_validity} = this.state\r\n\r\n  //   if (e_validity && n_validity && p_validity) {\r\n  //     document.getElementById(\"submit\").disabled = false;\r\n  //     this.setState({\r\n  //       style: { color: \"red\", background: \"blue\" }\r\n  //     });\r\n  //   }\r\n    \r\n  // }\r\n  \r\n\r\n\r\n  handleChange = e => {\r\n    if (e.target.name === \"nick\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n        n_validity: 0,\r\n        n_placeholder: \"nickname 중복 검사를 해주세요.\"\r\n      });\r\n    } else if (e.target.name === \"email\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n        e_validity: 0,\r\n        e_placeholder: \"email 검사를 해주세요.\"\r\n      });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          [e.target.name]: e.target.value\r\n        },\r\n        () => {\r\n          if (this.state.password.length >= 8)\r\n            this.setState({\r\n              p_validity: 1,\r\n              p_placeholder: \"사용 가능한 비밀번호 입니다.\"\r\n            });\r\n          else this.setState({\r\n            p_validity: 0,\r\n            p_placeholder : \"비밀번호가 너무 짧습니다.\"\r\n          })\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  nickCheck = async () => {\r\n    if (this.state.nick.length <= 0) return;\r\n\r\n    const check = await axios.post(\"/auth/nickCheck\", {\r\n      nick: this.state.nick\r\n    });\r\n    console.log(check.data);\r\n    // 중복 닉 없음\r\n    if (check.data === \"ok\" && this.state.nick.length > 0 && this.state.nick.length <= 10) {\r\n      this.setState({\r\n        n_validity: 1,\r\n        n_placeholder: \"사용 가능한 닉네임입니다.\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        n_placeholder: \"중복 닉네임 혹은 닉네임의 길이가 10자 이상입니다.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  emailCheck = async () => {\r\n    const { email } = this.state;\r\n    const pattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\r\n\r\n    if (pattern.test(email)) {\r\n      const check = await axios.post(\"/auth/emailCheck\", { email });\r\n      check.data === \"ok\"\r\n        ? this.setState({\r\n            e_validity: 1,\r\n            e_placeholder: \"사용 가능한 email입니다.\"\r\n          })\r\n        : this.setState({ e_validity : 0, e_placeholder: \"이미 가입된 email입니다.\" });\r\n    } else {\r\n      this.setState({\r\n        e_placeholder: \"올바른 형식의 email이 아닙니다.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit =async (e) => {\r\n    e.preventDefault()\r\n    this.setState({isLoading:true})\r\n    const {email, nick, password, e_validity, n_validity, p_validity} = this.state\r\n    if(e_validity && n_validity && p_validity)  {\r\n      const register = await axios.post(\"/auth/join\", { email, nick, password})  \r\n      register.data === \"success\" ? this.props.history.push('/') : alert(\"가입을 환영합니다!\"); this.props.history.push('/')\r\n    }     \r\n    else alert(\"조건에 맞게 요소들을 작성해주세요.\")\r\n    \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      e_placeholder,\r\n      n_placeholder,\r\n      p_placeholder,\r\n      e_validity,\r\n      n_validity,\r\n      p_validity,\r\n      isLoading\r\n    } = this.state;\r\n\r\n    \r\n\r\n    if (e_validity && n_validity && p_validity) {\r\n      document.getElementById(\"submit\").disabled = false;\r\n      // this.setState({\r\n      //   style: { color: \"red\", background: \"blue\" }\r\n      // });\r\n    }\r\n    const spinnerSize = \r\n      window.innerWidth > 450\r\n        ? \"100px\"\r\n        : \"50px\";\r\n\r\n\r\n    if(isLoading) return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />;\r\n\r\n    return (\r\n\r\n\r\n      <form>\r\n        <center>\r\n          <div className=\"register-form\">\r\n            <div className=\"checkSyntax\" style={e_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n              {e_placeholder}\r\n            </div>\r\n            <input\r\n              name=\"email\"\r\n              placeholder=\"email\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              spellCheck={false}\r\n              value={this.state.email}\r\n            />\r\n            <input\r\n              className=\"checkButton\"\r\n              type=\"button\"\r\n              value=\"email 중복 검사\"\r\n              onClick={this.emailCheck}\r\n            />\r\n\r\n            <div className=\"checkSyntax\" style={n_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n              {n_placeholder}\r\n            </div>\r\n            <input\r\n              name=\"nick\"\r\n              spellCheck={false}\r\n              placeholder=\"nickname\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              value={this.state.nick}\r\n              id=\"nick-input\"\r\n            />\r\n            <input\r\n              className=\"checkButton\"\r\n              type=\"button\"\r\n              value=\"nickname 중복 검사\"\r\n              onClick={this.nickCheck}\r\n            />\r\n\r\n            <div className=\"checkSyntax\" style={p_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n              {p_placeholder}\r\n            </div>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              className=\"input\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input\r\n            \r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              className=\"submit-regi\"\r\n              id=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </div>\r\n        </center>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from 'components/register/RegisterForm'\r\n\r\nconst RrgisterPage = ({history}) => {\r\n  return (\r\n    <div>      \r\n      <RegisterForm history={history}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RrgisterPage;","import React, { Component } from \"react\";\r\nimport \"./EachFeedComment.scss\";\r\nimport axios from \"axios\";\r\n\r\nclass EachFeedComment extends Component {\r\n  state = {\r\n    content: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { handleCommentAction, id } = this.props;\r\n    const { content } = this.state;\r\n\r\n    let re =[]\r\n    try{\r\n      re  = content.match(/#[^\\s]*/g).filter(item => item.length >= 14)\r\n    }catch(e){}\r\n\r\n    if(!content){\r\n      alert(\"내용을 입력해주세요.\")\r\n      return \r\n    }\r\n\r\n    if (content.match(/#.*\\S#/g)) {\r\n      alert(\"해쉬태그는 연결해서 등록할수 없어요!\");\r\n      return;\r\n    }else if(re[0]){\r\n      alert(\"14자가 넘는 해쉬태그가 존재합니다.\")\r\n      return\r\n    }\r\n\r\n    \r\n\r\n    const isSuccess = await axios.post(\"/post/uploadComment\", {\r\n      content: this.state.content,\r\n      postid: id,\r\n      usernick: localStorage.getItem(\"nick\")\r\n    });\r\n    if (isSuccess.data === \"success\") handleCommentAction();\r\n    else alert(\"잠시 후 다시 시도해주세요.\");\r\n  };\r\n\r\n  handleEnter = e => {\r\n    if (e.key === \"Enter\") this.handleSubmit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"each-feed-comment\">\r\n        <input\r\n          placeholder=\"Add Comment\"\r\n          className=\"comment-content\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n          onKeyPress={this.handleEnter}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Submit\"\r\n          className=\"submit-button\"\r\n          onClick={this.handleSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachFeedComment;\r\n","import React, { Component } from \"react\";\r\nimport \"./EachFeed.scss\";\r\nimport axios from \"axios\";\r\nimport Hashtag from \"../../post/Hashtag/Hashtag\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\nimport EachFeedComment from \"../EachFeedComment\";\r\n\r\nconst unlikeImage =\r\n  \"https://cdn1.iconfinder.com/data/icons/valentine-s-day-simplicity/512/empty_heart-512.png\";\r\nconst likeImage =\r\n  \"https://cdn1.iconfinder.com/data/icons/love-icons/512/love-heart-512.png\";\r\nconst commentImage =\r\n  \"https://cdn4.iconfinder.com/data/icons/vectory-basic/40/comment_2-512.png\";\r\n\r\nclass EachFeed extends Component {\r\n  state = {\r\n    nick: \"\",\r\n    likeCounts: 0,\r\n    profilePic: \"\",\r\n    isLoading: false,\r\n    like: unlikeImage,\r\n    commentsCount: 0,\r\n    commentToggle: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  // 이니셜라이저, 요청하는 부분\r\n  initializer = async () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    const { id, userid } = this.props;\r\n    const nick = await axios.post(\"/post/getNick\", {\r\n      userid: this.props.userid\r\n    });\r\n\r\n    const likeCounts = await axios.post(\"/post/getLikeCount\", { postid: id });\r\n    const commentsCount = await axios.post(\"/post/getComments\", { postid: id });\r\n    const profilePic = await axios.post(\"/post/getUserPic\", {\r\n      userid\r\n    });\r\n\r\n    //console.log(nick.data)\r\n    this.setState({\r\n      nick: nick.data,\r\n      likeCounts: likeCounts.data.length,\r\n      profilePic: profilePic.data,\r\n      commentsCount: commentsCount.data.length\r\n    });\r\n\r\n    if (localStorage.getItem('id')) {\r\n      likeCounts.data.forEach(item => {\r\n        if (item.id === Number(localStorage.getItem('id'))) {\r\n          this.setState({\r\n            like: likeImage\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { history, id: postid, userid } = this.props;\r\n    history.push(`/user/${userid}/${postid}`);\r\n  };\r\n\r\n  handleLikeClick = () => {\r\n    const { id: postid } = this.props;\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"좋아요는 로그인 후에 가능합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.like === unlikeImage) {\r\n      this.setState({\r\n        like: likeImage,\r\n        likeCounts: this.state.likeCounts + 1\r\n      });\r\n      axios.post(\"/post/like\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    } else {\r\n      this.setState({\r\n        like: unlikeImage,\r\n        likeCounts: this.state.likeCounts - 1\r\n      });\r\n      axios.post(\"/post/unlike\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleComment = () => {\r\n    const { commentToggle } = this.state;\r\n\r\n    if (!localStorage.getItem(\"nick\")) {\r\n      alert(\"댓글 작성은 로그인 후에 가능합니다.\");\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      commentToggle: !commentToggle\r\n    });\r\n  };\r\n\r\n  handleCommentAction = () => {\r\n    const { commentsCount } = this.state;\r\n    this.setState({\r\n      commentsCount: commentsCount + 1,\r\n      commentToggle: 0\r\n    });\r\n  };\r\n\r\n  timeConversion = millisec => {\r\n    const seconds = (millisec / 1000).toFixed(0);\r\n    const minutes = (millisec / (1000 * 60)).toFixed(0);\r\n    const hours = (millisec / (1000 * 60 * 60)).toFixed(0);\r\n\r\n    if (seconds < 60) {\r\n      return seconds + \" sec ago\";\r\n    } else if (minutes < 60) {\r\n      return minutes + \" min ago\";\r\n    } else if (hours < 24) {\r\n      return hours + \" hrs ago\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { img, date, content, userid, history } = this.props;\r\n    const { nick, likeCounts, profilePic, like, commentsCount } = this.state;\r\n\r\n    \r\n    // 게시글 작성 시간과 현재 시간의 날짜를 구해옴\r\n    const writtenDate = date.substr(0, 10);\r\n    const nowDate = new Date().toISOString().substr(0, 10);\r\n\r\n    // n시간 전\r\n    let postTime = null;\r\n    if (writtenDate === nowDate) {\r\n      postTime = this.timeConversion(new Date() - Date.parse(date));\r\n    } else {\r\n      postTime = writtenDate;\r\n    }\r\n\r\n    let spinnerSize = \"100px\";\r\n    if (window.innerWidth < 500) {\r\n      spinnerSize = \"50px\";\r\n    }\r\n\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\r\n      );\r\n    }\r\n\r\n    let contentWithHashtag;\r\n    if (content) {\r\n      contentWithHashtag = content.split(/\\s+/); // space or newline으로 나눠줌\r\n      contentWithHashtag = contentWithHashtag.map(item => {\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />\r\n            </div>\r\n          );\r\n        }\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"each-feed\">\r\n        <div className=\"top\">\r\n          <div\r\n            className=\"left\"\r\n            onClick={() => {\r\n              history.push(`/user/${userid}`);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <div className=\"profile-pic\">\r\n              <img\r\n                src={\r\n                  profilePic\r\n                    ? profilePic\r\n                    : \"https://myspace.com/common/images/user.png\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            {nick}\r\n          </div>\r\n          <div className=\"right\">\r\n            {postTime}\r\n            {/* {date.substr(0, 10)} {time} */}\r\n          </div>\r\n        </div>\r\n        <div className=\"img-area\">\r\n          <div onClick={this.handleClick} className=\"onimg\">\r\n            <img src={img} alt=\"\" />\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <div className=\"comment-area\">\r\n              <img\r\n                src={like}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  marginTop: \"5px\",\r\n                  marginRight: \"5px\",\r\n                  marginLeft: \"-10px\"\r\n                }}\r\n                onClick={this.handleLikeClick}\r\n              />\r\n              <div style={{ width: \"100%\" }}>{likeCounts}</div>{\" \"}\r\n              <img\r\n                src={commentImage}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                style={{\r\n                  marginTop: \"5px\",\r\n                  marginLeft: \"10px\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n                onClick={this.toggleComment}\r\n              />\r\n              <div className=\"cCount\">{commentsCount}</div>\r\n            </div>\r\n            <div className=\"test\">{contentWithHashtag}</div>\r\n            {this.state.commentToggle ? (\r\n              <EachFeedComment\r\n                handleCommentAction={this.handleCommentAction}\r\n                id={this.props.id}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachFeed;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport EachFeed from \"../EachFeed/EachFeed\";\r\nimport \"./Feed.scss\";\r\nimport qs from \"query-string\";\r\n\r\nclass RecommendUser extends Component {\r\n  state = {\r\n    users: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const users = await axios.post(\"/post/getAlluser\");\r\n    this.setState({\r\n      users: users.data\r\n    });    \r\n  }\r\n\r\n  // 친구추천을 위한 배열 셔플(섞기)\r\n  shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    const { recommendedUsersNumber, isFirstLogin, query } = this.props;\r\n    \r\n    \r\n    // 본인 제외\r\n    let shuffled = [];\r\n    if(Number(localStorage.getItem('id'))) shuffled = users.filter(user => user.id !== Number(localStorage.getItem('id')))\r\n    shuffled = this.shuffle(shuffled);\r\n    shuffled = shuffled.slice(0, recommendedUsersNumber);\r\n    \r\n\r\n    const list = shuffled.map(user => {\r\n      \r\n      return (\r\n        <EachRecommend\r\n          user={user}\r\n          key={user.id}\r\n          history={this.props.history}\r\n          pic={user.pic}\r\n        />\r\n      );\r\n    });\r\n    \r\n    \r\n    return (\r\n      <div\r\n        style={{ textAlign: \"center\", paddingLeft: \"10%\", paddingRight: \"10%\" }}\r\n        className=\"rec-user\"\r\n      >\r\n        <div\r\n          style={{ fontSize: \"1.25rem\", fontWeight: \"700\", marginTop: \"30px\" }}\r\n        >\r\n          {isFirstLogin ? (\r\n            <div className=\"greeting\">Feed에 더 이상 소식이 없습니다.<br/> 아래 계정들도 둘러보세요!</div>\r\n          ) : (\r\n            <div className=\"greeting\">\r\n              { !query ? \"Koostagram 가입을 환영합니다!\" : \"검색결과 없음\" }\r\n              <br />              \r\n              Follow할 계정을 둘러보세요!              \r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"following-rec\">{list}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst EachRecommend = ({ user, history, pic }) => {\r\n  return (\r\n    <div\r\n      className=\"each-rec\"\r\n      onClick={() => {\r\n        history.push(`/user/${user.id}`);\r\n      }}\r\n    >\r\n      <div className=\"profile-pic\">\r\n        {pic ? (\r\n          <img src={pic} alt=\"\" />\r\n        ) : (\r\n          <img src=\"https://myspace.com/common/images/user.png\" alt=\"\" />\r\n        )}\r\n      </div>\r\n      <div className=\"nick\">{user.nick}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Feed extends Component {\r\n  state = {\r\n    list: null,\r\n    loadingState: false,\r\n    noPost: null,\r\n    tk: 0,\r\n    wrongAccess: null,\r\n    isLoading: false\r\n  };\r\n\r\n  // 인피니트 스크롤 관련 변수들\r\n  items = [];\r\n  it = 0;\r\n  endOfList = false;\r\n\r\n  componentDidMount() {\r\n    // console.log(\"Component did mount\");\r\n    setTimeout(() => {\r\n      this.initializer();\r\n    }, 100);\r\n  }\r\n\r\n  // feed에서 query가 바뀔때 바로 적용하기 위해서\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log(\"Component did UPDATA!!!!\");\r\n\r\n    const { user, ht } = this.props;\r\n    if (prevProps.user !== user || prevProps.ht !== ht) {\r\n      this.initializer();\r\n      try {\r\n        document.getElementById(\"list\").scrollTo(0, 0);\r\n      } catch (error) {\r\n        console.log(error);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  initializer = async () => {\r\n    const { location } = this.props;\r\n    const query = qs.parse(location.search);\r\n\r\n    // 로그인 안해도 검색한 해쉬태그는 볼 수 있게    \r\n    if (!localStorage.getItem(\"id\") && !query.hashtag) {      \r\n      return;\r\n    }\r\n  \r\n    const followingList = query.hashtag\r\n      ? await axios.post(\"/post/getHashTagPost\", { tag: query.hashtag })\r\n      : await axios.post(\"/post/getFollowingPosts\", { userid: Number(localStorage.getItem('id')) });\r\n\r\n\r\n    let listData = followingList.data;\r\n\r\n    if (listData === \"no data\") {\r\n      this.setState({\r\n        noPost: 1\r\n      });\r\n      return;\r\n    } else {\r\n      this.it = listData.length;\r\n      listData = listData.reverse();\r\n      this.items = listData.splice(0, 3);\r\n\r\n      // to rendering\r\n      this.setState({\r\n        tk: !this.state.tk\r\n      });\r\n\r\n      if (listData.length > 3) {\r\n        this.infiniteScroll(listData);\r\n      } else {\r\n        this.endOfList = true;\r\n        this.setState({\r\n          tk: !this.state.tk\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  infiniteScroll = listData => {\r\n    this.refs.iScroll.addEventListener(\"scroll\", () => {\r\n      if (\r\n        this.refs.iScroll.scrollTop + this.refs.iScroll.clientHeight >=\r\n        this.refs.iScroll.scrollHeight\r\n      ) {\r\n        this.loadMoreItems(listData);\r\n      }\r\n    });\r\n  };\r\n\r\n  loadMoreItems(listData) {\r\n    if (this.items.length >= this.it) {\r\n      this.endOfList = true;\r\n      this.setState({\r\n        tk: !this.state.tk\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { items } = this;\r\n    const temp = listData.splice(0, 3); // listData는 앞에 3개를 줄였음\r\n\r\n    this.setState({ loadingState: true });\r\n    this.items = items.concat(temp);\r\n\r\n    setTimeout(() => {\r\n      // console.log(this.items);\r\n      this.setState({ loadingState: false });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { items } = this;\r\n    const { history, location } = this.props;\r\n    const query = qs.parse(location.search);\r\n\r\n    // console.log(localStorage.getItem('id'), localStorage.getItem('nick'))\r\n\r\n    // 해쉬태그 검색결과가 없을 때 ( no post )\r\n    if (this.state.noPost && this.it === 0) {\r\n      return (\r\n        <div style={{ marginTop: \"100px\" }}>\r\n          <RecommendUser\r\n            loginuser={this.props.user}\r\n            history={this.props.history}\r\n            recommendedUsersNumber={100}\r\n            query={query}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const eachList = items.map(item => (\r\n      <EachFeed\r\n        id={item.id}\r\n        img={item.img}\r\n        nick={item.nick}\r\n        history={history}\r\n        key={item.id}\r\n        date={item.createdAt}\r\n        userid={item.userId}\r\n        content={item.content}\r\n        loggedInUser={this.props.user}\r\n      />\r\n    ));\r\n\r\n    // 첫 로그인 시(팔로우 하는 사람이 0 일 시) 추천친구를 100명 보여줌\r\n    let recommendUsers = 3;\r\n    if (this.it === 0) recommendUsers = 100;\r\n\r\n    return (\r\n      <div className=\"feed\">\r\n        <div ref=\"iScroll\" className=\"list\" id=\"list\">\r\n          {query.hashtag ? (\r\n            <center>\r\n              <div className=\"searched-hashtag\">\r\n                Searched Hashtag : {window.innerWidth < 450 ? <br/> : null}<span className=\"ht\">#{query.hashtag}</span>\r\n              </div>\r\n            </center>\r\n          ) : (\r\n            <div style={{ height: \"30px\" }} />\r\n          )}\r\n\r\n          <center>{eachList}</center>\r\n          {this.endOfList ? (\r\n            <RecommendUser\r\n              history={this.props.history}\r\n              recommendedUsersNumber={recommendUsers}\r\n              isFirstLogin={this.it}\r\n              loginuser={this.props.user}\r\n              location={this.props.user}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//}\r\n\r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\nimport Feed from \"components/feed/Feed\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass FeedContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Feed\r\n          user={this.props.user}\r\n          history={this.props.history}\r\n          location={this.props.location}\r\n          ht = {this.props.ht}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(withRouter(FeedContainer));\r\n","import React from 'react';\r\nimport FeedContainer from '../containers/feed/FeedContainer';\r\nimport qs from 'query-string'\r\n\r\nconst FeedPage = ({location}) => {\r\n  const query = qs.parse(location.search).hashtag  \r\n  return (\r\n    <div style={{overflow : \"hidden\"}}>\r\n      <FeedContainer ht={query}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;","import React, { Component } from \"react\";\r\nimport \"./Edit.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../lib/Spinner\";\r\n\r\nclass Edit extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    uploading: false\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { history } = this.props;\r\n    if (!Number(localStorage.getItem('id'))) {\r\n      alert(\"Please login first\");\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleFileChange = e => {\r\n    this.setState({\r\n      selectedFile: e.target.files[0]\r\n    });\r\n    console.log(e.target.files[0]);\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { history } = this.props;\r\n    const { selectedFile } = this.state;\r\n\r\n    if (!selectedFile) {\r\n      alert(\"프로필 사진을 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const fd = new FormData();\r\n    console.log(selectedFile);\r\n    fd.append(\"img\", selectedFile, selectedFile.name); // 파일의 원본 파일이름 그대로\r\n    fd.append(\"userid\", Number(localStorage.getItem('id')));\r\n\r\n    const contentType = {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    };\r\n\r\n    this.setState({\r\n      uploading: true\r\n    });\r\n    await axios.post(\"/post/profile\", fd, contentType);\r\n    history.push(`/user/${localStorage.getItem('id')}`);\r\n  };\r\n\r\n  render() {\r\n    const { selectedFile } = this.state;\r\n\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if(this.state.uploading) return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />;\r\n    \r\n    return (\r\n      <div className=\"edit\">\r\n        <center>\r\n          <div className=\"writing-form\">\r\n            <label className=\"file-wrapper\">\r\n              {selectedFile ? \"선택완료 :)\" : \"프로필 사진 선택하기\"}\r\n              <input\r\n                id=\"img\"\r\n                name=\"img\"\r\n                type=\"file\"\r\n                className=\"file-upload\"\r\n                onChange={this.handleFileChange}\r\n                accept=\".gif, .jpg, .png\"\r\n              />\r\n            </label>\r\n            {selectedFile ? selectedFile.name : \"\"}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              className=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(withRouter(Edit));\r\n","import React from 'react';\r\nimport Edit from \"components/edit/Edit\"\r\n\r\nconst EditPage = () => {\r\n  return (\r\n    <div>\r\n        <Edit />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPage;","import React, { Component } from \"react\";\r\nimport \"./NotifyModal.scss\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"lib/Spinner\";\r\n\r\nconst ModalPortal = ({ children }) => {\r\n  const el = document.getElementById(\"modal\");\r\n  return ReactDOM.createPortal(children, el);\r\n};\r\n\r\n\r\n\r\nclass EachNotification extends Component {\r\n  state = {\r\n    nickname: null,\r\n    pic: null,\r\n    postpic: null,\r\n    style: {\r\n      color: \"black\"\r\n    }\r\n  };\r\n \r\n  async componentDidMount() {\r\n    const { isChecked, userid, postid } = this.props;\r\n    const style = isChecked ? { color: \"gray\" } : { color: \"black\" };\r\n\r\n    const [nickname, pic, getPostInfo] = await Promise.all([\r\n      await axios.post(\"/post/getNick\", { userid }),\r\n      await axios.post(\"/post/getUserPic\", { userid }),\r\n      await axios.post(\"/post/getSinglePost\", { postid }),\r\n      await axios.post(\"/post/togglenotification\", {\r\n        userid: Number(localStorage.getItem(\"id\"))\r\n      })\r\n    ]);\r\n\r\n    \r\n\r\n\r\n\r\n    // 0131 이렇게 뺐음\r\n    const postpic = getPostInfo.data ? getPostInfo.data.img : null;\r\n    const postUserId = getPostInfo.data ? getPostInfo.data.userId : null;\r\n  \r\n    this.setState({\r\n      nickname: nickname.data,\r\n      pic: pic.data,\r\n      postpic: postpic,\r\n      postUserId: postUserId,\r\n      style\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { history, postid, handleCloseModal } = this.props;\r\n    const { postUserId } = this.state;\r\n\r\n    handleCloseModal();\r\n    history.push(`/user/${postUserId}/${postid}`);\r\n  };\r\n\r\n  render() {\r\n    const { nickname, pic, postpic } = this.state;\r\n    const { category } = this.props;\r\n    let content = ''\r\n    switch (category) {\r\n      case \"like\":\r\n        content = \"게시물을 좋아합니다.\"\r\n        break;\r\n      case \"comment\" :\r\n        content = \"게시물에 댓글을 남겼습니다.\"\r\n        break;\r\n      case \"follow\" :\r\n        content = \"당신을 팔로우 했습니다.\"\r\n        break;\r\n      case \"mention\" :\r\n        content = \"당신을 언급했습니다.\"\r\n        break;\r\n      default :\r\n        break;\r\n    }\r\n\r\n\r\n    if (nickname && typeof pic === 'string')\r\n      return (\r\n        <div className=\"each-noti\" onClick={this.handleClick}>\r\n          <img\r\n            src={pic ? pic : \"https://myspace.com/common/images/user.png\"}\r\n            alt=\"\"\r\n            className=\"img\"\r\n          />\r\n          <div className=\"word\" style={this.state.style}>\r\n            <div className=\"nickname\">{nickname}</div>님이{\" \"}\r\n              {content}\r\n          </div>\r\n          {       \r\n            postpic \r\n              ? <img src={postpic} alt=\"\" className=\"postpic\" />\r\n              : <div></div>\r\n          }\r\n\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div onClick={this.handleClick}>\r\n          <Spinner ph={45} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nclass NotifyModal extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.initializer()\r\n  }\r\n  \r\n\r\n  handleCloseModal = () => {\r\n    this.props.handleToggle();\r\n  };\r\n\r\n  render() {\r\n    const { notifications } = this.props;\r\n\r\n    const flist = notifications.map(item => (\r\n      <EachNotification\r\n        userid={item.notifying}\r\n        postid={item.post}\r\n        category={item.category}\r\n        history={this.props.history}\r\n        handleCloseModal={this.handleCloseModal}\r\n        isChecked={item.isChecked}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <ModalPortal>\r\n        <div className=\"notify-modal\">\r\n          <div className=\"content\">\r\n            <h3>Notifications</h3>\r\n\r\n            {notifications === \"loading\" && <Spinner ph={520} /> }\r\n            {notifications[0] ? (\r\n              <div className=\"notifications\">{flist}</div>\r\n            ) : (\r\n              <div className=\"notifications\" style={{fontSize : \"1.5rem\", fontWeight : \"500\"}}>알림이 없습니다.<br/>새 게시글을 올려보세요.</div>\r\n            )}\r\n            <div>\r\n              <button onClick={this.handleCloseModal} className=\"close\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ModalPortal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NotifyModal);\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport NotifyModal from \"../NotifyModal/NotifyModal\";\r\nimport axios from \"axios\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    toggle: false,\r\n    notifications: \"loading\",\r\n    hasNewNotification: false,\r\n  \r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userid = Number(localStorage.getItem(\"id\"));\r\n    if (userid) {\r\n      this.getNotifications()\r\n    } \r\n    this.initializer();\r\n  }\r\n\r\n  // 비로그인 상태에서 로그인 했을때 알림 가져올 수 있게\r\n  componentWillReceiveProps(nextProps){\r\n    if(this.props.id !== nextProps.id) this.getNotifications()\r\n  }\r\n\r\n  getNotifications = () =>{\r\n    setInterval(async () => {\r\n      const userid = Number(localStorage.getItem(\"id\"));\r\n      const myNotifications = await axios.post(\"/post/notification\", {\r\n        userid\r\n      });\r\n      for (const item of myNotifications.data) {\r\n        if (!item.isChecked) {\r\n          this.setState({ hasNewNotification: true });\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        notifications: myNotifications.data\r\n      });\r\n    }, 5 * 1000); // 5초\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   try {\r\n  //     if(prevProps.notifications[0].id === this.props.NotifyModal[0].id){\r\n  //       this.initializer()\r\n  //     }\r\n  //   }catch(e){\r\n\r\n  //   }\r\n  // }\r\n\r\n  initializer = async () => {\r\n    \r\n    const userid = Number(localStorage.getItem(\"id\"));\r\n    const myNotifications = await axios.post(\"/post/notification\", { userid });\r\n    for (const item of myNotifications.data) {\r\n      if (!item.isChecked) {\r\n        this.setState({ hasNewNotification: true });\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      notifications: myNotifications.data\r\n    });\r\n\r\n    // 그 이후에 setInterval로 일정 시간마다 받아오기,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      toggle: !this.state.toggle,\r\n      hasNewNotification: false\r\n    });\r\n  };\r\n\r\n  handleLink = link => {\r\n    if (localStorage.getItem(\"id\")) this.props.history.push(link);\r\n    else alert(\"로그인 후 가능합니다.\");\r\n  };\r\n\r\n  handleToggleNotify = () => {\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"로그인 후 가능합니다.\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAble, input, handleChange, handleBlur } = this.props;\r\n    const { toggle, hasNewNotification } = this.state;\r\n\r\n\r\n  \r\n\r\n\r\n    // isAble로 클릭 가능한지 정하기\r\n    let cursorStyle = isAble ? { cursor: \"pointer\" } : null;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {toggle ? (\r\n          <NotifyModal\r\n            handleToggle={this.handleToggle}\r\n            notifications={this.state.notifications}\r\n            initializer={this.initializer}\r\n          />\r\n        ) : null}\r\n        <div className=\"header\">\r\n          <Link className=\"logo\" to=\"/\">\r\n            Koostagram\r\n          </Link>\r\n\r\n          <div className=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              spellCheck={false}\r\n              placeholder=\"Search\"\r\n              onBlur={handleBlur}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"right-part\">\r\n            {/* write post */}\r\n            <div\r\n              className=\"button-icon\"\r\n              style={cursorStyle}\r\n              onClick={() => {\r\n                this.handleLink(\"/write\");\r\n              }}\r\n            >\r\n              <img\r\n                className=\"imgs\"\r\n                alt=\"\"\r\n                src=\"https://cdn3.iconfinder.com/data/icons/web-ui-3/128/Compose-2-512.png\"\r\n              />\r\n            </div>\r\n\r\n            {/* mypage */}\r\n            <div\r\n              className=\"button-icon\"\r\n              style={cursorStyle}\r\n              onClick={() => {\r\n                this.handleLink(\"/user/\" + localStorage.getItem(\"id\"));\r\n              }}\r\n            >\r\n              <img\r\n                className=\"imgs\"\r\n                alt=\"\"\r\n                src=\"https://trials.ai/wp-content/uploads/2018/09/user.png\"\r\n              />\r\n            </div>\r\n\r\n            {/* notify */}\r\n            <div\r\n              className=\"button-icon cont\"\r\n              style={cursorStyle}\r\n              onClick={this.handleToggleNotify}\r\n            >\r\n              <img\r\n                className=\"imgs\"\r\n                alt=\"\"\r\n                src=\"https://www.materialui.co/materialIcons/action/alarm_white_192x192.png\"\r\n              />\r\n              {hasNewNotification && <div className=\"dot\" />}\r\n            </div>\r\n\r\n            {/*             \r\n            <Button isAble={isAble} to=\"/write\">\r\n              Write Post\r\n            </Button>\r\n            <Button isAble={isAble} to={to}>\r\n              My Page\r\n            </Button> */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* {toggle ? \r\n        <div className=\"header\">\r\n              <input \r\n              style={{marginLeft : '5%'}}\r\n              type=\"text\"\r\n              className=\"search\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              spellCheck={false}\r\n              placeholder=\"Search\"\r\n              onBlur={handleBlur}\r\n            /> \r\n            </div>\r\n            : \r\n        null} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"./SearchList.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass UserResult extends Component {\r\n  handleClick = () => {\r\n    // console.log(\"User Clicked\");\r\n    const { history, user } = this.props;\r\n    history.push(`/user/${user.id}`);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div className=\"user-result\" onClick={this.handleClick}>\r\n        {user.nick}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HashTagResult extends Component {\r\n  handleClick = () => {\r\n    console.log(\"hashtag Clicked\");\r\n    const { history, hashtag } = this.props;\r\n    history.push(`/feed?hashtag=${hashtag.title}`);\r\n  };\r\n\r\n  render() {\r\n    const { hashtag } = this.props;\r\n    return (\r\n      <div className=\"ht-result\" onClick={this.handleClick}>\r\n        #{hashtag.title}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SearchList extends Component {\r\n  // token이 \"user\"이면 user 3개를, \"user\"가 아니면 user의 3래의 결과를 리턴해줌\r\n  // count에 따라 둘다 갯수만큼 리턴해줌(hashtag만 검색되거나 user만 검색된 경우에 6개를 받고, 둘다 검색된 경우에 3개씩 받기 위함)\r\n  mapItems = (arr, token, count) => {\r\n    return token === \"user\"\r\n      ? arr\r\n          .slice(0, count)\r\n          .map(user => (\r\n            <UserResult\r\n              user={user}\r\n              history={this.props.history}\r\n              key={user.id}\r\n            />\r\n          ))\r\n      : arr\r\n          .slice(0, 3)\r\n          .map(hashtag => (\r\n            <HashTagResult\r\n              hashtag={hashtag}\r\n              history={this.props.history}\r\n              key={hashtag.id}\r\n            />\r\n          ));\r\n  };\r\n\r\n  render() {\r\n    const { input, data } = this.props;\r\n    const { mapItems } = this;\r\n\r\n    if (input.length <= 1) {\r\n      return <div />;\r\n    }\r\n\r\n    if (data) {\r\n      // 입력을 해서 데이터가 있을 때\r\n      const { user, hashtag } = data;\r\n      // console.log(user, hashtag);\r\n      if (user[0] && hashtag[0]) {\r\n        // 유저와 해시태그 모두 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"user-list\">{mapItems(user, \"user\", 3)}</div>\r\n              <div className=\"hash-list\">{mapItems(hashtag, \"hash\", 3)}</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (user[0] && !hashtag[0]) {\r\n        // 유저만 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"user-list\" style={{ height: \"200px\" }}>\r\n                {mapItems(user, \"user\", 6)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (!user[0] && hashtag[0]) {\r\n        // 해시태그만 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"hash-list\" style={{ height: \"200px\" }}>\r\n                {mapItems(hashtag, \"hash\", 6)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        // 검색결과 없음\r\n\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"noresult\">No Result</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchList);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../components/common/Header/Header\";\r\nimport SearchList from \"../../components/common/SearchList\";\r\nimport { debounce } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nclass HeaderContainer extends Component {\r\n  state = {\r\n    input: \"\",\r\n    results : null,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState(\r\n      {input: e.target.value},\r\n      () => {  if(this.state.input.length >= 2) this.searchUser(this.state.input);}\r\n    );\r\n  };\r\n\r\n  handleBlur = () =>{\r\n    setTimeout( () => {\r\n      this.setState({\r\n        input : ''\r\n      })\r\n    },150)\r\n  }\r\n\r\n  searchUser = debounce(async input => {\r\n    const results = await axios.post(\"/post/search\", { input: input });\r\n    this.setState({\r\n      results : results.data\r\n    })\r\n  }, 500);\r\n\r\n\r\n  render() {\r\n    const { isAble, to } = this.props;\r\n    const { input } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Header\r\n          isAble={isAble}\r\n          to={to}\r\n          input={input}\r\n          handleChange={this.handleChange}\r\n          handleBlur={this.handleBlur}\r\n          id={Number(localStorage.getItem(\"id\"))}\r\n        />\r\n        <SearchList data={this.state.results} input={input}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderContainer;\r\n","import React, { Component } from 'react';\nimport {Switch, Route } from 'react-router-dom'\nimport {MainPage, EachPostPage, UserPage, WritingPage, NotFound, RegisterPage, FeedPage, EditPage} from 'pages'\nimport HeaderContainer from '../containers/HeaderContainer/HeaderContainer';\n\n\nclass App extends Component {\n  render() {\n    const id = localStorage.getItem('id')\n    return (\n      <div>\n        \n        { id !== null ? (<HeaderContainer isAble={true} to={`/user/${id}`} />) : (<HeaderContainer isAble={false} to=\"123\"/>)}             \n        <Switch>\n          <Route exact path='/' component={MainPage} />          \n          <Route path='/user/:userid/:postid' component={EachPostPage} />\n          <Route path='/user/:userid' component={UserPage} />\n          <Route path='/write' component={WritingPage} />          \n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/feed\" component={FeedPage} />\n          <Route path=\"/edit\" component={EditPage} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport App from \"../components/App\";\r\nimport * as loginActions from 'store/modules/login'\r\nimport {bindActionCreators} from 'redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass AppContainer extends Component {  \r\n  componentDidMount() {\r\n    const {LoginActions} = this.props\r\n    LoginActions.login();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    return (      \r\n        <App user={user} />              \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  state => ({\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(AppContainer))","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configure from \"store/configure\";\r\nimport AppContainer from \"./containers/AppContainer\";\r\n\r\n\r\n// Appcontianer로 바꿔서 헤더 하려 했는데 흠 잘안됨 여기서 부터 봐라\r\n\r\nconst Root = () => {\r\n  const store = configure();\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>        \r\n        <AppContainer />                \r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport Root from './Root';\nimport 'styles/base.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/puff.4597a1a0.svg\";"],"sourceRoot":""}