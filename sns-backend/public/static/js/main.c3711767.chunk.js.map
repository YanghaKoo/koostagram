{"version":3,"sources":["registerServiceWorker.js","store/modules/login.js","store/modules/post.js","store/configure.js","lib/Spinner/index.js","components/main/Login/Login.js","containers/main/LoginContainer.js","pages/MainPage.js","components/common/Modal/Modal.js","components/user/Profile/Profile.js","containers/user/ProfileContainer.js","components/user/Posts/Posts.js","pages/UserPage.js","components/post/Hashtag/Hashtag.js","components/post/Mention/Mention.js","components/post/EachComment/EachComment.js","components/post/Comment/Comment.js","containers/user/CommentContainer.js","components/post/PostTemplate/PostTemplate.js","containers/post/PostTemplateContainer.js","pages/EachPostPage.js","pages/NotFound.js","components/writing/WritingForm/WritingForm.js","containers/writing/WritingFormContainer.js","components/writing/WritingTemplate/index.js","components/writing/WritingTemplate/WritingTemplate.js","pages/WritingPage.js","components/register/RegisterForm/RegisterForm.js","pages/RegisterPage.js","components/feed/EachFeedComment/EachFeedComment.js","components/feed/EachFeed/EachFeed.js","components/feed/Feed/Feed.js","containers/feed/FeedContainer.js","pages/FeedPage.js","components/edit/Edit.js","pages/EditPage.js","components/common/NotifyModal/NotifyModal.js","components/common/Header/Header.js","components/common/SearchList/SearchList.js","containers/HeaderContainer/HeaderContainer.js","components/App.js","containers/AppContainer.js","Root.js","index.js","lib/Spinner/puff.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","checkLogin","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","get","abrupt","sent","stop","this","apply","arguments","login","createAction","handleActions","objectSpread","pender","type","onSuccess","action","data","payload","localStorage","setItem","user","id","nick","pic","submitPost","content","img","post","change","submit","defineProperty","input","postedId","reducers","combineReducers","modules","middleWares","penderMiddleware","composeEnhancer","compose","configure","createStore","applyMiddleware","Spinner","width","height","pw","ph","style","react_default","createElement","display","justifyContent","alignItems","src","spinner","alt","Login","email","password","isLoading","ref","handleChange","e","_this","setState","target","name","value","tryLogin","_this$state","result","setTimeout","focus","props","history","push","handleEnter","key","_this2","spinnerSize","innerWidth","lib_Spinner","className","placeholder","spellCheck","onChange","onKeyPress","textAlign","onClick","paddingBottom","paddingTop","Link","to","background","disabled","_callee2","_context2","Component","withRouter","LoginContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getItem","LoginActions","main_Login_Login","connect","dispatch","bindActionCreators","loginActions","MainPage","main_LoginContainer","ModalPortal","children","el","document","getElementById","ReactDOM","createPortal","Modal","handleOpenModal","handleModal","handleCloseModal","showProfile","concat","_this$props","check","list","open","flist","map","item","Modal_ModalPortal","Profile","buttonLabel","followers","following","profilePic","modal","select","renderModal","common_Modal_Modal","initializer","userid","uid","_ref2","_ref3","params","alert","Promise","all","slicedToArray","Number","cursor","filter","checkFollow","forEach","handleFollow","followid","showFollowerModal","showFollowingModal","bool","editProfile","_this$props2","prevProps","prevState","fontstyle","_this$state2","length","fontSize","fontWeight","PureComponent","ProfileContainer","user_Profile_Profile","Post","handleClick","userId","Posts","posts","reverse","_this3","index","Posts_Post","user_ProfileContainer","user_Posts_Posts","Hashtag","hashtag","slice","Mention","isExist","mention","exist","EachComment","tk","usernick","link","withHT","split","post_Hashtag_Hashtag","post_Mention_Mention","unlike","like","Comment","likeCount","comment","commentsBefore","likers","isloading","postid","likeUsers","updateComment","scrollTop","scrollHeight","handleLikeClick","handleCommentChange","handleSubmit","_callee3","re","_context3","handleKeyPress","showLikers","timeConversion","millisec","seconds","toFixed","minutes","hours","token1","token2","previewCount","createdAt","postTime","writtenDate","substr","Date","toISOString","parse","post_EachComment_EachComment","CommentContainer","post_Comment_Comment","PostTemplate","_this$props$match$par","handleDelete","_this$props$match$par2","confirm","contentWithHashtag","marginBottom","hashtags","user_CommentContainer","PostTemplateContainer","post_PostTemplate_PostTemplate","EachPostPage","post_PostTemplateContainer","NotFound","marginTop","WritingForm","selectedFile","uploading","imagePreviewUrl","isLinkedTagExist","exName","fd","contentType","toLowerCase","FormData","append","headers","Content-Type","handleFileChange","reader","FileReader","file","files","onloadend","readAsDataURL","color","imagePreview","imageButtonLabel","accept","WritingFormContainer","PostActions","writing_WritingForm_WritingForm","onSubmit","postActions","WritingTemplate","writing_WritingFormContainer","WritingPage","writing_WritingTemplate","debounceSearch","url","term","t0","_x","_x2","useInput","defaultValue","_useState","useState","_useState2","setValue","_useState3","_useState4","validity","setValidity","_validity","_validity2","test","_x3","RegisterForm","_ref4","nickname","assign","RrgisterPage","register_RegisterForm_RegisterForm","EachFeedComment","handleCommentAction","commentsCount","unlikeImage","likeImage","EachFeed","likeCounts","commentToggle","toggleComment","_this$props3","date","marginRight","marginLeft","feed_EachFeedComment_EachFeedComment","RecommendUser","users","shuffle","array","i","j","Math","floor","random","recommendedUsersNumber","isFirstLogin","query","shuffled","Feed_EachRecommend","paddingLeft","paddingRight","EachRecommend","Feed","loadingState","noPost","wrongAccess","items","it","endOfList","followingList","listData","qs","search","tag","splice","infiniteScroll","refs","iScroll","addEventListener","clientHeight","loadMoreItems","_this4","ht","scrollTo","_this5","temp","_this6","Feed_RecommendUser","loginuser","eachList","feed_EachFeed_EachFeed","loggedInUser","recommendUsers","FeedContainer","feed_Feed_Feed","FeedPage","overflow","feed_FeedContainer","Edit","EditPage","components_edit_Edit","EachNotification","postpic","postUserId","isChecked","getPostInfo","category","NotifyModal","handleToggle","notifications","NotifyModal_EachNotification","notifying","NotifyModal_ModalPortal","Header","toggle","hasNewNotification","getNotifications","setInterval","myNotifications","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","undefined","Symbol","iterator","done","return","finish","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","handleLink","handleToggleNotify","nextProps","isAble","handleBlur","cursorStyle","common_NotifyModal_NotifyModal","onBlur","UserResult","HashTagResult","_this2$props","title","SearchList","mapItems","arr","token","count","SearchList_UserResult","SearchList_HashTagResult","HeaderContainer","results","searchUser","debounce","common_Header_Header","common_SearchList_SearchList","App","containers_HeaderContainer_HeaderContainer","Switch","Route","exact","path","component","UserPage","RegisterPage","AppContainer","components_App","Root","store","es","BrowserRouter","containers_AppContainer","render","src_Root","URL","process","origin","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"qwBAUMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,oHC3E3DC,EAAU,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBC,IAAMC,IAAI,eAA5B,cAAAJ,EAAAK,OAAA,SAAAL,EAAAM,MAAA,wBAAAN,EAAAO,SAAAT,EAAAU,SAAH,yBAAAhB,EAAAiB,MAAAD,KAAAE,YAAA,GAIHC,EAAQC,YAFP,cAE0BrB,GAQzBsB,cAAcpB,OAAAqB,EAAA,EAAArB,CAAA,GACxBsB,iBAAO,CACRC,KAZU,cAaVC,UAAY,SAAChC,EAAMiC,GAAU,IACnBC,EAASD,EAAOE,QAAhBD,KAUR,OAPAE,aAAaC,QAAQ,KAAMH,EAAKI,KAAKC,IACrCH,aAAaC,QAAQ,OAAQH,EAAKI,KAAKE,MACvCJ,aAAaC,QAAQ,MAAOH,EAAKI,KAAKG,KAK/B,CAACH,KAAOJ,EAAKI,UApBL,CACnBA,KAAO,KACPC,GAAK,eCPMG,EAAa,SAACC,EAAQC,GAAT,OAAiB1B,IAAM2B,KAAK,QAAS,CAACF,UAASC,SAK5DE,EAASnB,YAHP,eAIFoB,EAASpB,YAHP,cAG2Be,GAQ3Bd,cAAcpB,OAAAqB,EAAA,EAAArB,QAAAwC,EAAA,EAAAxC,CAAA,GAZd,cAaF,SAACR,EAAMiC,GAEhB,MAAQ,CAACgB,MADiBhB,EAAnBE,WAGNL,iBAAO,CACRC,KAjBW,cAkBXC,UAAY,SAAChC,EAAMiC,GAEjB,MAAQ,CAACiB,SADIjB,EAAOE,QAAQD,KAArBK,QAdQ,CACnBU,MAAQ,GACRC,SAAW,KCXPC,EAAWC,YAAgBC,GAC3BC,EAAc,CAACC,OAIfC,EAA8BC,IAGrBC,EADG,kBAAMC,YAAYR,EAAUK,EAAgBI,IAAepC,WAAf,EAAmB8B,sGCUlEO,EAlBC,SAAAtD,GAA+B,IAA5BuD,EAA4BvD,EAA5BuD,MAAOC,EAAqBxD,EAArBwD,OAAQC,EAAazD,EAAbyD,GAAIC,EAAS1D,EAAT0D,GAC9BC,EAAQ,CAAEJ,MAAOA,EAAOC,OAAQA,GACtC,OACEI,EAAAxD,EAAAyD,cAAA,OACEF,MAAO,CACLG,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZT,MAAOE,EACPD,OAAQE,IAIVE,EAAAxD,EAAAyD,cAAA,OAAKI,IAAKC,IAASP,MAAOA,EAAOQ,IAAI,OCTrCC,6MACJ3E,MAAQ,CACN4E,MAAO,GACPC,SAAU,GACVC,WAAW,EACXzE,OAAO,KAGT0E,IAAM,OACNC,aAAe,SAAAC,GACbC,EAAKC,SAAL3E,OAAAwC,EAAA,EAAAxC,CAAA,GACGyE,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,WAI9BC,8BAAW,SAAA1E,IAAA,IAAA2E,EAAAZ,EAAAC,EAAAY,EAAA,OAAA/E,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTiE,EAAKC,SAAS,CAAEL,WAAW,IADlBU,EAGmBN,EAAKlF,MAAzB4E,EAHCY,EAGDZ,MAAOC,EAHNW,EAGMX,SAHN9D,EAAAE,KAAA,EAIYC,IAAM2B,KAAK,cAAe,CAAE+B,QAAOC,aAJ/C,OAMW,aAFdY,EAJG1E,EAAAM,MAMEa,KAETwD,WAAY,WACVR,EAAKC,SAAS,CACZP,MAAO,GACPC,SAAU,GACVC,WAAW,EACXzE,OAAO,IAET6E,EAAKH,IAAIY,SACR,MAEHvD,aAAaC,QAAQ,KAAMoD,EAAOvD,KAAKK,IACvCH,aAAaC,QAAQ,OAAQoD,EAAOvD,KAAKM,MACzCJ,aAAaC,QAAQ,MAAOoD,EAAOvD,KAAKO,KAExCyC,EAAKC,SAAS,CAAEL,WAAW,IAC3BI,EAAKU,MAAMC,QAAQC,KAAK,UAvBjB,wBAAA/E,EAAAO,SAAAT,EAAAU,WA2BXwE,YAAc,SAAAd,GACE,UAAVA,EAAEe,KAAiBd,EAAKK,oFAGrB,IAAAU,EAAA1E,KACD2E,EAAcjH,OAAOkH,WAAa,IAAM,QAAU,OACxD,OAAI5E,KAAKvB,MAAM8E,UAEXX,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAOoC,EAAanC,OAAQmC,EAAalC,GAAG,OAAOC,GAAG,SAIjEE,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SACblC,EAAAxD,EAAAyD,cAAA,wBAEAD,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,SACED,EAAAxD,EAAAyD,cAAA,SACEkC,YAAY,QACZjB,KAAK,QACLkB,YAAY,EACZF,UAAU,QACVf,MAAO/D,KAAKvB,MAAM4E,MAClB4B,SAAUjF,KAAKyD,aACfD,IAAK,SAAAA,GAAG,OAAKkB,EAAKlB,IAAMA,MAG5BZ,EAAAxD,EAAAyD,cAAA,SACED,EAAAxD,EAAAyD,cAAA,SACEkC,YAAY,WACZjB,KAAK,WACLtD,KAAK,WACLsE,UAAU,QACVf,MAAO/D,KAAKvB,MAAM6E,SAClB2B,SAAUjF,KAAKyD,aACfyB,WAAYlF,KAAKwE,eAIrB5B,EAAAxD,EAAAyD,cAAA,KAAGF,MAAO,CAACwC,UAAU,WACnBvC,EAAAxD,EAAAyD,cAAA,SACEiC,UAAU,SACVtE,KAAK,SACLuD,MAAM,QACNqB,QAASpF,KAAKgE,YAGjBhE,KAAKvB,MAAMK,MACV8D,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,iBAAf,qGAGE,KAEJlC,EAAAxD,EAAAyD,cAAA,OACEF,MAAO,CACLwC,UAAW,SACXE,cAAe,OACfC,WAAY,SAJhB,gCASA1C,EAAAxD,EAAAyD,cAAA,KAAGF,MAAO,CAACwC,UAAU,WACnBvC,EAAAxD,EAAAyD,cAAC0C,EAAA,EAAD,CAAMC,GAAG,aACP5C,EAAAxD,EAAAyD,cAAA,SAAOiC,UAAU,SAAStE,KAAK,SAASuD,MAAM,kBAIlDnB,EAAAxD,EAAAyD,cAAA,KAAGF,MAAO,CAACwC,UAAU,WACnBvC,EAAAxD,EAAAyD,cAAA,SACEiC,UAAU,SACVtE,KAAK,SAELuD,MAAM,aACNpB,MAAO,CAAE8C,WAAY,WACrBC,UAAQ,EACRN,QAAOnG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAsG,IAAA,OAAAxG,EAAAC,EAAAG,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,OACPC,IAAM2B,KAAK,eADJ,wBAAAsE,EAAA7F,SAAA4F,EAAA3F,cASjB4C,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YACblC,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,MACV7B,IAAI,8DACJE,IAAI,cApII0C,aA4ILC,cAAW1C,GC5IpB2C,cAEJ,SAAAA,EAAY1B,GAAM,IAAAV,EAEhB,OAFgB1E,OAAA+G,EAAA,EAAA/G,CAAAe,KAAA+F,GAChBpC,EAAA1E,OAAAgH,EAAA,EAAAhH,CAAAe,KAAAf,OAAAiH,EAAA,EAAAjH,CAAA8G,GAAAI,KAAAnG,KAAMqE,IACHxD,aAAauF,QAAQ,OAGtBzC,EAAKU,MAAMC,QAAQC,KAAK,SACjBtF,OAAAgH,EAAA,EAAAhH,CAAA0E,IANOA,mFAWO3D,KAAKqE,MAArBgC,aACMlG,yCAIb,OACIyC,EAAAxD,EAAAyD,cAACyD,EAAD,aAnBqBT,aAwBdU,cACb,SAAA9H,GAAK,MAAK,CACRsC,KAAOtC,EAAM0B,MAAMY,OAErB,SAAAyF,GAAQ,MAAK,CACXH,aAAeI,YAAmBC,EAAaF,KALpCD,CAObT,YAAWC,IC3BEY,EARE,WACf,OACE/D,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAC+D,EAAD,iBCDAC,gBAAc,SAAA7H,GAAkB,IAAf8H,EAAe9H,EAAf8H,SACfC,EAAKC,SAASC,eAAe,SACnC,OAAOC,IAASC,aAAaL,EAAUC,KAInCK,8MACJC,gBAAkB,WAChB1D,EAAKU,MAAMiD,aAAY,MAGzBC,iBAAmB,WACjB5D,EAAKU,MAAMiD,aAAY,MAGzBE,YAAc,SAAAxG,GACZ2C,EAAK4D,mBACL5D,EAAKU,MAAMC,QAAQC,KAAnB,SAAAkD,OAAiCzG,6EAG1B,IAAA0D,EAAA1E,KAAA0H,EAIuB1H,KAAKqE,MAA3BsD,EAJDD,EAICC,MAAOC,EAJRF,EAIQE,KAGf,IAAa,IAPNF,EAIcG,KAGF,CACjB,IAAMC,EAAQF,EAAKG,IAAI,SAAAC,GAErB,OACEpF,EAAAxD,EAAAyD,cAAA,OACE4B,IAAKuD,EAAKhH,GACV2B,MAAO,CAAEG,QAAS,OAAQC,eAAgB,iBAC1CqC,QAAS,WACPV,EAAK8C,YAAYQ,EAAKhH,KAExB8D,UAAU,aAEVlC,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,OAAKI,IAAK+E,EAAK9G,IAAM8G,EAAK9G,IAAM,6CAA8C4D,UAAU,MAAM3B,IAAI,MAEpGP,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QAAQkD,EAAK/G,SAMlC,OACE2B,EAAAxD,EAAAyD,cAACoF,GAAD,KACErF,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACblC,EAAAxD,EAAAyD,cAAA,cACED,EAAAxD,EAAAyD,cAAA,UAAK8E,IAEP/E,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SAASgD,GACxBlF,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,cACED,EAAAxD,EAAAyD,cAAA,UAAQuC,QAASpF,KAAKuH,iBAAkBzC,UAAU,SAAlD,aAOV,OAAO,YA3DOe,aAgELC,eAAWsB,ICsLXc,8MA1PbzJ,MAAQ,CACNwC,KAAM,GACNkH,YAAa,SACbC,UAAW,GACXC,UAAW,GACXC,WAAY,GACZC,OAAO,EACPC,OAAQ,EACR7F,MAAO,KACPY,WAAW,KAYbkF,YAAc,WACZ,OAAO7F,EAAAxD,EAAAyD,cAAC6F,GAAD,CAAOb,KAAMlE,EAAKlF,MAAM8J,WAIjCI,iCAAc,SAAArJ,IAAA,IAAAsJ,EAAAlB,EAAApD,EAAAuE,EAAA5H,EAAA6H,EAAAC,EAAAX,EAAAC,EAAAC,EAAA3F,EAAA,OAAAxD,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZiE,EAAKC,SAAS,CAAEL,WAAW,IACnBqF,EAAWjF,EAAKU,MAAMxG,MAAMmL,OAA5BJ,OAFIlB,EAGa/D,EAAKU,MAAtBC,EAHIoD,EAGJpD,QAASuE,EAHLnB,EAGKmB,IAGc,aAA3BlF,EAAKlF,MAAM0J,aACbxE,EAAKC,SAAS,CACZuE,YAAa,WARL3I,EAAAE,KAAA,EAYOC,IAAM2B,KAAK,gBAAiB,CAAEsH,WAAU/J,MAAM,SAAA6E,GAC/DuF,MAAM,qGACN3E,EAAQC,KAAK,OAdH,cAYNtD,EAZMzB,EAAAM,KAAAN,EAAAE,KAAA,EAiBqCwJ,QAAQC,IAAI,CAC3DxJ,IAAM2B,KAAK,qBAAsB,CAAEsH,WACnCjJ,IAAM2B,KAAK,qBAAsB,CAAEsH,WACnCjJ,IAAM2B,KAAK,mBAAoB,CAAEsH,aApBvB,OAAAE,EAAAtJ,EAAAM,KAAAiJ,EAAA9J,OAAAmK,GAAA,EAAAnK,CAAA6J,EAAA,GAiBLV,EAjBKW,EAAA,GAiBMV,EAjBNU,EAAA,GAiBiBT,EAjBjBS,EAAA,GA2BZpF,EAAKC,SAAS,CAAEL,WAAW,IAGvBZ,EAAQ,KACR0G,OAAOxI,aAAauF,QAAQ,SAC9BzD,EACE0G,OAAOR,KAASQ,OAAOxI,aAAauF,QAAQ,OACxC,CAAEkD,OAAQ,WACV,MAGR3F,EAAKC,SAAS,CACZ3C,KAAMA,EAAKN,KACXyH,UAAWA,EAAUzH,KAAK4I,OAAO,SAAAvB,GAAI,OAAIA,EAAKhH,KAAOqI,OAAOT,KAC5DP,UAAWA,EAAU1H,KAAK4I,OAAO,SAAAvB,GAAI,OAAIA,EAAKhH,KAAOqI,OAAOT,KAC5DN,WAAYA,EAAW3H,KACvBgC,MAAOA,IAETgB,EAAK6F,cA7CO,yBAAAhK,EAAAO,SAAAT,EAAAU,WAgDdwJ,YAAc,WAAM,IACVpB,EAAczE,EAAKlF,MAAnB2J,UAEJiB,OAAOxI,aAAauF,QAAQ,QAC9BgC,EAAUqB,QAAQ,SAAAzB,GACZA,EAAKhH,KAAOqI,OAAOxI,aAAauF,QAAQ,QAC1CzC,EAAKC,SAAS,CACZuE,YAAa,kBAQvBuB,aAAe,SAAAhG,GAAK,IACVkF,EAAWjF,EAAKU,MAAMxG,MAAMmL,OAA5BJ,OADU3E,EAEiBN,EAAKlF,MAAhC2J,EAFUnE,EAEVmE,UAEY,WAJFnE,EAECkE,aAGjBxI,IAAM2B,KAAK,eAAgB,CACzBqI,SAAUN,OAAOxI,aAAauF,QAAQ,OACtCwC,WAEFjF,EAAKC,SAAS,CACZuE,YAAa,WACbC,UAAWA,EAAUX,OAAO,CAC1BzG,GAAIqI,OAAOxI,aAAauF,QAAQ,OAChCnF,KAAMJ,aAAauF,QAAQ,QAC3BlF,IAAKL,aAAauF,QAAQ,aAI9BzG,IAAM2B,KAAK,iBAAkB,CAC3BqI,SAAUN,OAAOxI,aAAauF,QAAQ,OACtCwC,WAEFjF,EAAKC,SAAS,CACZuE,YAAa,SACbC,UAAWA,EAAUmB,OACnB,SAAAvB,GAAI,OAAIA,EAAKhH,KAAOqI,OAAOxI,aAAauF,QAAQ,eAOxDwD,kBAAoB,SAAAlG,GAClBC,EAAKC,SAAS,CACZ2E,OAAO,EACPC,OAAQ,OAKZqB,mBAAqB,SAAAnG,GACnBC,EAAKC,SAAS,CACZ2E,OAAO,EACPC,OAAQ,OAKZlB,YAAc,SAAAwC,GACZnG,EAAKC,SAAS,CACZ2E,MAAOuB,OAKXC,YAAc,WAAM,IAAAC,EACOrG,EAAKU,MAAtBwE,EADUmB,EACVnB,IAAKvE,EADK0F,EACL1F,QACT+E,OAAOR,KAASQ,OAAOxI,aAAauF,QAAQ,QAC9C9B,EAAQC,KAAK,6FAtIfvE,KAAK2I,yDAGYsB,EAAWC,GAAW,IAC/BrB,EAAQ7I,KAAKqE,MAAbwE,IACJoB,EAAUpB,MAAQA,GAAK7I,KAAK2I,+CAuIzB,IA2BHwB,EA1BIvB,EAAW5I,KAAKqE,MAAMxG,MAAMmL,OAA5BJ,OADDwB,EAaHpK,KAAKvB,MATP2J,EAJKgC,EAILhC,UACAC,EALK+B,EAKL/B,UACAF,EANKiC,EAMLjC,YACAlH,EAPKmJ,EAOLnJ,KACAsH,EARK6B,EAQL7B,MACAC,EATK4B,EASL5B,OACAF,EAVK8B,EAUL9B,WACA3F,EAXKyH,EAWLzH,MAKF,GAhBOyH,EAYL7G,UAIa,CACb,IAAIb,EACuBA,EAA3BhF,OAAOkH,WAAa,IAAY,QAAiB,QACjD,IAAMD,EAAcjH,OAAOkH,WAAa,IAAM,QAAU,OACxD,OACEhC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACblC,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAOoC,EAAanC,OAAQmC,EAAalC,GAAG,OAAOC,GAAIA,KAUtE,OAJIhF,OAAOkH,WAAa,KAAO3D,EAAKoJ,QAAU,IAC5CF,EAAY,CAAEG,SAAU,OAAQC,WAAY,QAI5C3H,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACZ0D,EACC5F,EAAAxD,EAAAyD,cAAC6F,GAAD,CACEb,KAAMU,EACNjB,YAAatH,KAAKsH,YAClBK,MAAM,YACNC,KAAMS,IAGRzF,EAAAxD,EAAAyD,cAAC6F,GAAD,CACEb,KAAMU,EACNjB,YAAatH,KAAKsH,YAClBK,MAAM,YACNC,KAAMQ,IAGVxF,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,cAAcM,QAASpF,KAAK+J,YAAapH,MAAOA,GAC7DC,EAAAxD,EAAAyD,cAAA,OACEI,IACEqF,GAEI,6CAENnF,IAAI,MAGRP,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eACblC,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEwC,UAAW,WACvBvC,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,OAAOnC,MAAOwH,GAC1BlJ,EAAO,GAAKA,EAAO,cACf,IACP2B,EAAAxD,EAAAyD,cAAA,WACEhC,aAAauF,QAAQ,OACvBwC,IAAW/H,aAAauF,QAAQ,MAC9BxD,EAAAxD,EAAAyD,cAAA,SACErC,KAAK,SACLuD,MAAOoE,EACP/C,QAASpF,KAAK0J,aACd5E,UAAU,kBAL0B,OAW5ClC,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEwC,UAAW,WACvBvC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,cAAcM,QAASpF,KAAK4J,mBACxCxB,EAAUiC,OADb,IACqBzH,EAAAxD,EAAAyD,cAAA,YAFvB,aAOAD,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEwC,UAAW,WACvBvC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,cAAcM,QAASpF,KAAK6J,oBACxCxB,EAAUgC,OADb,IACqBzH,EAAAxD,EAAAyD,cAAA,YAFvB,sBA/OY2H,iBCAhBC,oLAEF,OACE7H,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAC6H,GAAD,CACE3J,KAAMf,KAAKqE,MAAMtD,KACjB8H,IAAK7I,KAAKqE,MAAMwE,IAChBhL,MAAOmC,KAAKqE,MAAMxG,MAClByG,QAAStE,KAAKqE,MAAMC,kBARCuB,aAehBU,eACb,SAAA9H,GAAK,MAAK,CACRsC,KAAMtC,EAAM0B,MAAMY,OAEpB,SAAAyF,GAAQ,MAAK,CACXH,aAAeI,YAAmBC,EAAaF,KALpCD,CAObkE,ICtBIE,qNAEJC,YAAc,SAAClH,GAAM,IAAAgE,EACK/D,EAAKU,MAAtB2D,EADYN,EACZM,KADYN,EACNpD,QACLC,KAAR,SAAAkD,OAAsBO,EAAK6C,OAA3B,KAAApD,OAAqCO,EAAKhH,8EAGnC,IACAgH,EAAQhI,KAAKqE,MAAb2D,KACP,OACIpF,EAAAxD,EAAAyD,cAAA,OACEI,IAAK+E,EAAK3G,IACVsB,MAAO,CAAEJ,MAAO,OAAQC,OAAQ,QAChCW,IAAI,GACJiC,QAASpF,KAAK4K,qBAdL/E,cAoBbiF,8MACJrM,MAAQ,CACNsM,MAAO,CAAC,UACRxH,WAAY,KAOdoF,YAAc,WAAM,IACVC,EAAWlE,EAAKL,MAAMxG,MAAMmL,OAA5BJ,OACRlE,EAAKd,SAAS,CAACL,WAAY,IAC3B5D,IAAM2B,KAAK,iBAAkB,CAAEsH,WAAUzK,KAAK,SAAA4M,GAC5CrG,EAAKd,SAAS,CACZmH,MAAOA,EAAMpK,KAAKqK,UAClBzH,WAAY,0FAThBvD,KAAK2I,yDAcYsB,EAAWC,GACzBD,EAAUpB,MAAQ7I,KAAKqE,MAAMwE,KAAM7I,KAAK2I,+CAGpC,IAAAsC,EAAAjL,KAAAiE,EACsBjE,KAAKvB,MAA1BsM,EADD9G,EACC8G,MAAOxH,EADRU,EACQV,UACToB,EAAcjH,OAAOkH,WAAa,IAAM,QAAU,OACxD,GAAGrB,EACD,OAAOX,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAOoC,EAAanC,OAAQmC,EAAalC,GAAG,OAAOC,GAAG,SAKxE,GAAiB,WAAbqI,EAAM,GACR,OAAO,KACF,GAAqB,IAAjBA,EAAMV,OACf,OAAOzH,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WAAf,YAIT,IAAM8C,EAAOmD,EAAMhD,IAAI,SAACC,EAAMkD,GAAP,OACrBtI,EAAAxD,EAAAyD,cAACsI,GAAD,CAAMlI,IAAK+E,EAAK3G,IAAKoD,IAAKyG,EAAOlD,KAAMA,EAAM1D,QAAS2G,EAAK5G,MAAMC,YAGnE,OACE1B,EAAAxD,EAAAyD,cAAA,cACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SAAS8C,WA/CZ/B,aAqDLC,eAAWgF,IC/DXhF,sBAVE,SAAA9G,GAAsB,IAApBnB,EAAoBmB,EAApBnB,MAAOyG,EAAatF,EAAbsF,QACPuE,EAAQhL,EAAMmL,OAAvBJ,OACR,OACEhG,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,sBACblC,EAAAxD,EAAAyD,cAACuI,GAAD,CAAkBvC,IAAKA,EAAKhL,MAAOA,EAAOyG,QAASA,IACnD1B,EAAAxD,EAAAyD,cAACwI,GAAD,CAAOxC,IAAKA,QCOHyC,uMAfJ,IAAA5D,EACsB1H,KAAKqE,MAA1BC,EADDoD,EACCpD,QAASiH,EADV7D,EACU6D,QACjB,OACE3I,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,SACVM,QAAS,WACPd,EAAQC,KAAR,iBAAAkD,OAA8B8D,EAAQC,MAAM,OAG7CD,UAVa1F,cCyCP4F,sNArCbhN,MAAQ,CACNiN,SAAS,EACT1K,GAAI,QAkBN4J,YAAc,WAAM,IACVtG,EAAYX,EAAKU,MAAjBC,QACLX,EAAKlF,MAAMiN,SAAW/H,EAAKlF,MAAMuC,IAAIsD,EAAQC,KAAR,SAAAkD,OAAsB9D,EAAKlF,MAAMuC,gNAfnEC,EAAOjB,KAAKqE,MAAMsH,QAAQH,MAAM,YAClB7L,IAAM2B,KAAK,oBAAqB,CAAEL,iBAAhD2K,UACIjL,KAAKK,GACbhB,KAAK4D,SAAS,CACZ5C,GAAI4K,EAAMjL,KAAKK,KAGjBhB,KAAK4D,SAAS,CACZ8H,SAAU,uIAUP,IACCC,EAAY3L,KAAKqE,MAAjBsH,QACF7G,EAAY9E,KAAKvB,MAAMiN,QAAU,UAAY,KAEjD,OACE9I,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAWA,EAAWM,QAASpF,KAAK4K,aACtCe,UAhCW9F,cCEhBgG,8MACJpN,MAAQ,CACNuC,GAAI,KACJ8K,IAAI,KAYNlB,YAAc,WAAM,IACVtG,EAAYX,EAAKU,MAAjBC,QACAtD,EAAO2C,EAAKlF,MAAZuC,GACRA,GAAMsD,EAAQC,KAAR,SAAAkD,OAAsBzG,sNAXTrB,IAAM2B,KAAK,oBAAqB,CACjDL,KAAMjB,KAAKqE,MAAM0H,kBADbC,SAGNhM,KAAK4D,SAAS,CACZ5C,GAAIgL,EAAKrL,KAAKK,wIAUT,IAEHiL,EAFGvH,EAAA1E,KAAA0H,EACuB1H,KAAKqE,MAA3BjD,EADDsG,EACCtG,QAAS2K,EADVrE,EACUqE,SAwBjB,OAtBI3K,IAEF6K,GADAA,EAAS7K,EAAQ8K,MAAM,QACPnE,IAAI,SAAAC,GAElB,MAAgB,MAAZA,EAAK,IAAcA,EAAKqC,OAAS,EAEjCzH,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACsJ,GAAD,CAASZ,QAASvD,EAAM1D,QAASI,EAAKL,MAAMC,WAG3B,MAAZ0D,EAAK,IAAcA,EAAKqC,OAAS,EAExCzH,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACuJ,GAAD,CAAST,QAAS3D,EAAM1D,QAASI,EAAKL,MAAMC,QAASzG,MAAO6G,EAAKL,MAAMxG,SAKtE+E,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QAAQkD,MAKhCpF,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,gBACblC,EAAAxD,EAAAyD,cAAA,OAAKuC,QAASpF,KAAK4K,YAAa9F,UAAU,aACvCiH,EADH,QACoB,KAEpBnJ,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SAAf,IAAyBmH,WAnDPpG,aAyDXC,eAAW+F,ICxDpBQ,GACJ,4FACIC,GACJ,2EAGIC,8MACJ9N,MAAQ,CACN6N,KAAMD,GACNG,UAAW,EACXC,QAAS,GACTC,eAAgB,KAChBnE,OAAO,EACPoE,OAAQ,GACRC,WAAW,KAgBbjE,iCAAc,SAAArJ,IAAA,IAAAuN,EAAAC,EAAAJ,EAAA,OAAAvN,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZiE,EAAKC,SAAS,CAAEgJ,WAAW,IACnBC,EAAWlJ,EAAKU,MAAMxG,MAAMmL,OAA5B6D,OAFIrN,EAAAE,KAAA,EAIYC,IAAM2B,KAAK,qBAAsB,CAAEuL,WAJ/C,cAINC,EAJMtN,EAAAM,KAAAN,EAAAE,KAAA,EAKiBC,IAAM2B,KAAK,oBAAqB,CAAEuL,WALnD,OAKNH,EALMlN,EAAAM,KAOZ6D,EAAKC,SAAS,CACZ4I,UAAWM,EAAUnM,KAAK0J,OAC1BqC,eAAgBA,EAAe/L,KAC/BgM,OAAQG,EAAUnM,OAGhBE,aAAauF,QAAQ,OACvB0G,EAAUnM,KAAK8I,QAAQ,SAAAzB,GACjBA,EAAKhH,KAAOqI,OAAOxI,aAAauF,QAAQ,QAC1CzC,EAAKC,SAAS,CACZ0I,KAAMA,OAKd3I,EAAKC,SAAS,CAAEgJ,WAAW,IAtBf,yBAAApN,EAAAO,SAAAT,EAAAU,WA0Bd+M,mCAAgB,SAAApH,IAAA,IAAAkH,EAAAH,EAAA,OAAAvN,EAAAC,EAAAG,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cACNmN,EAAWlJ,EAAKU,MAAMxG,MAAMmL,OAA5B6D,OADMjH,EAAAlG,KAAA,EAEeC,IAAM2B,KAAK,oBAAqB,CAAEuL,WAFjD,OAERH,EAFQ9G,EAAA9F,KAGd6D,EAAKC,SACH,CACE8I,eAAgBA,EAAe/L,MAEjC,WACEqG,SAASC,eAAe,MAAM+F,UAAYhG,SAASC,eACjD,MACAgG,eAVQ,wBAAArH,EAAA7F,SAAA4F,EAAA3F,WAgBhBkN,gBAAkB,WAAM,IACdL,EAAWlJ,EAAKU,MAAMxG,MAAMmL,OAA5B6D,OAEHhM,aAAauF,QAAQ,MAKtBzC,EAAKlF,MAAM6N,OAASD,IACtB1I,EAAKC,SAAS,CACZ0I,KAAMA,GACNE,UAAW7I,EAAKlF,MAAM+N,UAAY,IAEpC7M,IAAM2B,KAAK,aAAc,CACvBsH,OAAQS,OAAOxI,aAAauF,QAAQ,OACpCyG,aAGFlJ,EAAKC,SAAS,CACZ0I,KAAMD,GACNG,UAAW7I,EAAKlF,MAAM+N,UAAY,IAEpC7M,IAAM2B,KAAK,eAAgB,CACzBsH,OAAQS,OAAOxI,aAAauF,QAAQ,OACpCyG,YApBF5D,MAAM,gEAyBVkE,oBAAsB,SAAAzJ,GACpBC,EAAKC,SAAS,CACZ6I,QAAS/I,EAAEG,OAAOE,WAItBqJ,mDAAe,SAAAC,EAAM3J,GAAN,IAAAmJ,EAAAJ,EAAAa,EAAA,OAAAnO,EAAAC,EAAAG,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,OACLmN,EAAWlJ,EAAKU,MAAMxG,MAAMmL,OAA5B6D,OACAJ,EAAY9I,EAAKlF,MAAjBgO,QAEJa,EAAK,GACT,IACEA,EAAKb,EAAQ5O,MAAM,YAAY0L,OAAO,SAAAvB,GAAI,OAAIA,EAAKqC,QAAU,KAC7D,MAAO3G,GAEP4J,EAAK,GATM,GAYRzM,aAAauF,QAAQ,MAZb,CAAAmH,EAAA7N,KAAA,eAaXuJ,MAAM,6DAbKsE,EAAA1N,OAAA,sBAgBT4M,EAAQpC,QAAU,IAhBT,CAAAkD,EAAA7N,KAAA,gBAiBXuJ,MAAM,yFAjBKsE,EAAA1N,OAAA,sBAoBT4M,EAAQ5O,MAAM,WApBL,CAAA0P,EAAA7N,KAAA,gBAqBXuJ,MAAM,wGArBKsE,EAAA1N,OAAA,sBAuBFyN,EAAG,GAvBD,CAAAC,EAAA7N,KAAA,gBAwBXuJ,MAAM,8FAxBKsE,EAAA1N,OAAA,qBA4BR4M,EA5BQ,CAAAc,EAAA7N,KAAA,gBA6BXuJ,MAAM,4DA7BKsE,EAAA1N,OAAA,yBAAA0N,EAAA7N,KAAA,GAiCPC,IAAM2B,KAAK,sBAAuB,CACtCF,QAASqL,EACTI,SACAd,SAAUlL,aAAauF,QAAQ,UApCpB,QAuCbzC,EAAKC,SAAS,CACZ6I,QAAS,KAEX9I,EAAKoJ,gBA1CQ,yBAAAQ,EAAAxN,SAAAsN,EAAArN,iEA6CfwN,eAAiB,SAAA9J,GACD,UAAVA,EAAEe,KAAiBd,EAAKyJ,kBAG9BK,WAAa,WACX9J,EAAKC,SAAS,CACZ2E,OAAO,OAKXjB,YAAc,SAAAwC,GACZnG,EAAKC,SAAS,CACZ2E,MAAOuB,OAIX4D,eAAiB,SAAAC,GACf,IAAMC,GAAWD,EAAW,KAAME,QAAQ,GACpCC,GAAWH,EAAQ,KAAgBE,QAAQ,GAC3CE,GAASJ,EAAQ,MAAqBE,QAAQ,GAEpD,OAAID,EAAU,GACJA,EAAUA,EAAU,WAAY,sBAC/BE,EAAU,GACZA,EAAU,WACRC,EAAQ,GACVA,EAAQ,gBADV,sFA/JP/N,KAAK2I,yDAGYsB,EAAWC,GAE1BD,EAAU+D,SAAWhO,KAAKqE,MAAM2J,QAChC/D,EAAUgE,SAAWjO,KAAKqE,MAAM4J,QAEhCjO,KAAK2I,+CA4JA,IAAAjE,EAAA1E,KAAA0H,EAC6B1H,KAAKqE,MAAjC6J,EADDxG,EACCwG,aAAcC,EADfzG,EACeyG,UADflK,EAEsCjE,KAAKvB,MAA1CiO,EAFDzI,EAECyI,eAAgBnE,EAFjBtE,EAEiBsE,MAExB,GAJOtE,EAEwB2I,UAG7B,OAAOhK,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAM,OAAOC,OAAO,OAAOC,GAAG,OAAOC,GAAG,SAG1D,IAAI0L,EAAW,KACf,GAAID,EAAW,CACb,IAAME,EAAcF,EAAUG,OAAO,EAAG,IAKtCF,EADEC,KAHY,IAAIE,MAAOC,cAAcF,OAAO,EAAG,IAItCtO,KAAK0N,eAAe,IAAIa,KAASA,KAAKE,MAAMN,IAE5CE,EAIf,IAAIzG,EACF8E,GACAA,EAAe3E,IAAI,SAAAC,GACjB,OACEpF,EAAAxD,EAAAyD,cAAC6L,GAAD,CACEtN,QAAS4G,EAAK5G,QACd2K,SAAU/D,EAAK+D,SACftH,IAAKuD,EAAKhH,GACVnD,MAAO6G,EAAKL,MAAMxG,UAO1B,OAFa,OAAT+J,GAAiC,IAAhBA,EAAKyC,SAAczC,EAAO,yEAG7ChF,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACblC,EAAAxD,EAAAyD,cAAC6F,GAAD,CACEb,KAAMU,EACNjB,YAAatH,KAAKsH,YAClBK,MAAM,SACNC,KAAM5H,KAAKvB,MAAMkO,SAEnB/J,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,aACblC,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,OACEF,MAAO,CAAE2G,OAAQ,WACjBrG,IAAKjD,KAAKvB,MAAM6N,KAChB/J,MAAO,GACPC,OAAQ,GACRW,IAAI,GACJiC,QAASpF,KAAKkN,kBAEhBtK,EAAAxD,EAAAyD,cAAA,QAAMiC,UAAU,cAAcM,QAASpF,KAAKyN,YAA5C,OACSzN,KAAKvB,MAAM+N,UADpB,WAIF5J,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,kBACblC,EAAAxD,EAAAyD,cAAA,OACEI,IAAI,uEACJV,MAAO,GACPC,OAAQ,GACRW,IAAI,KAENP,EAAAxD,EAAAyD,cAAA,YAAOuL,MAIbxL,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,gBAAgB9D,GAAG,MAC/B4G,GAGFsG,GAAgB,EACftL,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,iBACblC,EAAAxD,EAAAyD,cAAA,SACEkB,MAAO/D,KAAKvB,MAAMgO,QAClBxH,SAAUjF,KAAKmN,oBACfjI,WAAYlF,KAAKwN,eACjB1I,UAAU,gBACVC,YAAY,eACZC,YAAY,IAEdpC,EAAAxD,EAAAyD,cAAA,SACErC,KAAK,SACLuD,MAAM,SACNqB,QAASpF,KAAKoN,aACdtI,UAAU,qBAId,aA9QUe,aAoRPC,eAAWyG,IC9RpBoC,oLACK,IAAAjH,EACmC1H,KAAKqE,MAAvCtD,EADD2G,EACC3G,KAAMmN,EADPxG,EACOwG,aAAcC,EADrBzG,EACqByG,UAE5B,OACEvL,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEH,OAAQ,QACpBI,EAAAxD,EAAAyD,cAAC+L,GAAD,CAAU7N,KAAMA,EAAMmN,aAAcA,EAAcF,OAAQhO,KAAKqE,MAAM2J,OAAQC,OAAQjO,KAAKqE,MAAM4J,OAAQE,UAAWA,YAN5FtI,aAYhBU,eAAQ,SAAA9H,GAAK,MAAK,CAC/BsC,KAAMtC,EAAM0B,MAAMY,OADLwF,CAEXoI,ICREE,8MACJpQ,MAAQ,CACN4C,IAAK,KACLD,QAAS,KACTH,KAAM,KACNkN,UAAY,QAadxF,iCAAc,SAAArJ,IAAA,IAAAwP,EAAAlG,EAAAiE,EAAAvL,EAAAP,EAAA,OAAA5B,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAoP,EACenL,EAAKU,MAAMxG,MAAMmL,OAApCJ,EADIkG,EACJlG,OAAQiE,EADJiC,EACIjC,OADJrN,EAAAE,KAAA,EAIOC,IAAM2B,KAAK,sBAAuB,CAAEuL,WAJ3C,WAINvL,EAJM9B,EAAAM,MAKFa,KALE,CAAAnB,EAAAE,KAAA,eAMVuJ,MAAM,4FACNtF,EAAKU,MAAMC,QAAQC,KAAK,KAPd/E,EAAAK,OAAA,wBAAAL,EAAAE,KAAA,GAYOC,IAAM2B,KAAK,gBAAiB,CAAEsH,WAAU/J,MAAM,SAAA6E,GAC/DuF,MAAM,sFACNtF,EAAKU,MAAMC,QAAQC,KAAK,OAdd,QAYNxD,EAZMvB,EAAAM,KAmBZ6D,EAAKC,SAAS,CACZvC,IAAKC,EAAKX,KAAKU,IACfD,QAASE,EAAKX,KAAKS,QACnBH,KAAMF,EAAKJ,KACXwN,UAAY7M,EAAKX,KAAKwN,YAvBZ,yBAAA3O,EAAAO,SAAAT,EAAAU,WA2Bd+O,kCAAe,SAAApJ,IAAA,IAAAqJ,EAAAnC,EAAAjE,EAAAtE,EAAA,OAAAnF,EAAAC,EAAAG,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,UAAAsP,EACcrL,EAAKU,MAAMxG,MAAMmL,OAApC6D,EADKmC,EACLnC,OAAQjE,EADHoG,EACGpG,OACRtE,EAAYX,EAAKU,MAAjBC,SAEJ5G,OAAOuR,QAAQ,qDAJN,CAAArJ,EAAAlG,KAAA,eAAAkG,EAAAlG,KAAA,EAKLC,IAAM2B,KAAK,mBAAoB,CAAEuL,WAL5B,OAMXvI,EAAQC,KAAR,SAAAkD,OAAsBmB,IANXhD,EAAAlG,KAAA,sBAAAkG,EAAA/F,OAAA,kCAAA+F,EAAA7F,SAAA4F,EAAA3F,oMAnCbA,KAAK2I,2JAGYsB,EAAWC,GACvBD,EAAU+D,SAAWhO,KAAKqE,MAAM2J,QAAa/D,EAAUgE,SAAWjO,KAAKqE,MAAM4J,QAAUjO,KAAK2I,+CA+C1F,IASHuG,EATGxK,EAAA1E,KAAAiE,EAC6BjE,KAAKvB,MAAjC4C,EADD4C,EACC5C,IAAKD,EADN6C,EACM7C,QAAS+M,EADflK,EACekK,UACdvF,EAAW5I,KAAKqE,MAAMxG,MAAMmL,OAA5BJ,OACAtE,EAAYtE,KAAKqE,MAAjBC,QA4BR,OArBIlD,IAEF8N,GADAA,EAAqB9N,EAAQ8K,MAAM,QACKnE,IAAI,SAACC,GAE3C,MAAgB,MAAZA,EAAK,IAAcA,EAAKqC,OAAS,EAEjCzH,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACsJ,GAAD,CAASZ,QAASvD,EAAM1D,QAASI,EAAKL,MAAMC,WAG5B,MAAZ0D,EAAK,IAAcA,EAAKqC,OAAS,EAEvCzH,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACuJ,GAAD,CAAST,QAAS3D,EAAM1D,QAASI,EAAKL,MAAMC,QAASzG,MAAO6G,EAAKL,MAAMxG,SAItE+E,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QAAQkD,MAI7B3G,EASHuB,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,iBACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,OACblC,EAAAxD,EAAAyD,cAAA,OAAKI,IAAK5B,EAAK8B,IAAI,MAErBP,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,2BACblC,EAAAxD,EAAAyD,cAAA,KACEiC,UAAU,OACVnC,MAAO,CAAE2G,OAAQ,WACjBlE,QAAS,WACPd,EAAQC,KAAR,SAAAkD,OAAsBmB,MAGxBhG,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEwM,aAAc,SAA5B,IAAwCnP,KAAKvB,MAAMwC,QAEnDJ,aAAauF,QAAQ,MAAQiD,OAAOxI,aAAauF,QAAQ,OAAS,QAAUiD,OAAOT,GACnFhG,EAAAxD,EAAAyD,cAAA,SACEiC,UAAU,gBACVtE,KAAK,SACLuD,MAAM,SACNqB,QAASpF,KAAK+O,eAEd,MAENnM,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SAASoK,GACxBtM,EAAAxD,EAAAyD,cAAA,WAAM7C,KAAKoP,WAEbxM,EAAAxD,EAAAyD,cAACwM,GAAD,CAAkBnB,aAAc,EAAGF,OAAQhO,KAAKqE,MAAM2J,OAAQC,OAAQjO,KAAKqE,MAAM4J,OAAQE,UAAWA,MAnCtGvL,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACblC,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAM,QAAQC,OAAO,QAAQC,GAAG,MAAMC,GAAG,iBA/FjCmD,aAwIZC,eAAW+I,IC7IpBS,oLACK,IAAAR,EACmB9O,KAAKqE,MAAMxG,MAAMmL,OAAnCJ,EADDkG,EACClG,OAAQiE,EADTiC,EACSjC,OAEhB,OACEjK,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAC0M,GAAD,CAAcxO,KAAMf,KAAKqE,MAAMtD,KAAMiN,OAAQpF,EAAQqF,OAAQpB,YANjChH,aAYrBU,eACb,SAAA9H,GAAK,MAAK,CACRsC,KAAOtC,EAAM0B,MAAMY,OAFRwF,CAIb+I,ICTaE,GARM,SAAAxQ,GAAa,IAAXnB,EAAWmB,EAAXnB,MACrB,OACE+E,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAC4M,GAAD,CAAuB5R,MAAOA,MCGrB6R,GARE,WACf,OACE9M,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,UAAUnC,MAAO,CAAC2H,SAAW,OAAQqF,UAAY,SAAhE,mBCEEC,sNACJnR,MAAQ,CACNoR,aAAc,KACdC,WAAW,EACXC,gBAAiB,QAInB3C,mDAAe,SAAA9N,EAAMqB,GAAN,IAAA+G,EAAApD,EAAA5C,EAAAuD,EAAA4K,EAAAvC,EAAA0C,EAAAC,EAAAC,EAAAC,EAAA3O,EAAA,OAAArC,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAgI,EACwB/D,EAAKU,MAAlCC,EADKoD,EACLpD,QAAS5C,EADJgG,EACIhG,MAAOuD,EADXyC,EACWzC,SAChB4K,EAAiBlM,EAAKlF,MAAtBoR,aAGJvC,EAAK5L,EAAM7D,MAAM,YACjBmS,EAAmBtO,EAAM7D,MAAM,WAQ9BgS,EAdQ,CAAArQ,EAAAE,KAAA,eAeXuJ,MAAM,+EAfKzJ,EAAAK,OAAA,sBAiBF6B,EAAM2I,QAAU,KAjBd,CAAA7K,EAAAE,KAAA,gBAkBXuJ,MAAM,0FAlBKzJ,EAAAK,OAAA,sBAoBFyN,EApBE,CAAA9N,EAAAE,KAAA,cAqBX4N,EAAKA,EAAG/D,OAAO,SAAAvB,GAAI,OAAIA,EAAKqC,QAAU,MAC/B,GAtBI,CAAA7K,EAAAE,KAAA,gBAuBTuJ,MAAM,8FAvBGzJ,EAAAK,OAAA,sBA6BTmQ,EA7BS,CAAAxQ,EAAAE,KAAA,gBA8BXuJ,MAAM,yGA9BKzJ,EAAAK,OAAA,qBAoCI,SADXoQ,EAASJ,EAAa/L,KAAKoI,MAAM,KAAK2D,EAAa/L,KAAKoI,MAAM,KAAK7B,OAAO,GAAG+F,gBAC9C,SAAXH,GAA+B,QAAVA,GAA8B,QAAXA,EApCrD,CAAAzQ,EAAAE,KAAA,gBAqCXuJ,MAAM,wKArCKzJ,EAAAK,OAAA,yBAyCPqQ,EAAK,IAAIG,UACZC,OAAO,MAAOT,EAAcA,EAAa/L,MAC5CoM,EAAGI,OAAO,OAAQ5O,GAClBwO,EAAGI,OAAO,KAAMjH,OAAOxI,aAAauF,QAAQ,QAEtC+J,EAAc,CAClBI,QAAS,CAAEC,eAAgB,wBAG7B7M,EAAKC,SAAS,CAAEkM,WAAW,IAlDdtQ,EAAAE,KAAA,GAmDQC,IAAM2B,KAAK,QAAS4O,EAAIC,GAnDhC,QAsDO,aAHd3O,EAnDOhC,EAAAM,MAsDFa,MACTgD,EAAKC,SAAS,CAAEkM,WAAW,IAC3B7G,MAAM,uIACN3E,EAAQC,KAAK,YAEbU,EAAS,IACTX,EAAQC,KAAR,SAAAkD,OAAsBjG,EAAOb,KAAKkK,OAAlC,KAAApD,OAA4CjG,EAAOb,KAAKK,MA5D7C,yBAAAxB,EAAAO,SAAAT,EAAAU,iEAgEfyD,aAAe,SAAAC,IAEbuB,EADqBtB,EAAKU,MAAlBY,UACCvB,EAAEG,OAAOE,UAIpB0M,iBAAmB,SAAA/M,GACjB,IAAMgN,EAAS,IAAIC,WACbC,EAAOlN,EAAEG,OAAOgN,MAAM,GAE5BH,EAAOI,UAAY,WACjBnN,EAAKC,SAAS,CACZiM,aAAce,EACdb,gBAAiBW,EAAOxM,UAG5B,IACEwM,EAAOK,cAAcH,GACrB,MAAO9R,8EAGF,IAAA4F,EAAA1E,KACC0B,EAAU1B,KAAKqE,MAAf3C,MACAqO,EAAoB/P,KAAKvB,MAAzBsR,gBAGFpN,EAAQjB,EAAM2I,OAAS,IAAM,KAAO,CAAE2G,MAAO,OAC7CjM,EACJrH,OAAOkH,WAAa,IAChB,2EACA,4EAEAqM,EAAelB,EACnBnN,EAAAxD,EAAAyD,cAAA,OAAKI,IAAK8M,EAAiB5M,IAAI,KAE/B,KAGIwB,EAAcjH,OAAOkH,WAAa,IAAM,QAAU,OAClDsM,EAAmBlR,KAAKvB,MAAMoR,aAChC,kCACA,2DAGJ,OAAI7P,KAAKvB,MAAMqR,UAEXlN,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAOoC,EAAanC,OAAQmC,EAAalC,GAAG,OAAOC,GAAG,SAIjEE,EAAAxD,EAAAyD,cAAA,cACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,gBACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SAAf,sBACAlC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WAAWmM,GAC1BrO,EAAAxD,EAAAyD,cAAA,SAAOiC,UAAU,gBACdoM,EACDtO,EAAAxD,EAAAyD,cAAA,SACE7B,GAAG,MACH8C,KAAK,MACLtD,KAAK,OACLsE,UAAU,cACVG,SAAUjF,KAAKyQ,iBACfU,OAAO,sBAGXvO,EAAAxD,EAAAyD,cAAA,YACEmC,YAAY,EACZlB,KAAK,UACLiB,YAAaA,EACbD,UAAU,OACVf,MAAOrC,EACPuD,SAAUjF,KAAKyD,eAEjBb,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,aAAanC,MAAOA,GAChCjB,EAAM2I,OAAS,IAAM3I,EAAM2I,OAAS,SAAW,mCAGlDzH,EAAAxD,EAAAyD,cAAA,SACErC,KAAK,SACLuD,MAAM,UACNe,UAAU,SACVM,QAAS,WACPV,EAAK0I,aAAa1L,eA1JNmE,cAmKXC,eAAW8J,IClKpBwB,+LAEIvQ,aAAauF,QAAQ,QAAS6C,MAAM,uBAAwBjJ,KAAKqE,MAAMC,QAAQC,KAAK,uCAGnF,IAAAmD,EACwB1H,KAAKqE,MAA5BgN,EADD3J,EACC2J,YAAa3P,EADdgG,EACchG,MACrB,OACEkB,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACyO,GAAD,CACE5P,MAAOA,EACP6P,SAAUF,EAAY7P,OACtByD,SAAU,SAACvB,GAAK2N,EAAY9P,OAAOmC,cAZVmC,aAmBpBU,eACb,SAAA9H,GAAK,MAAK,CACRiD,MAAOjD,EAAM6C,KAAKI,MAClBX,KAAOtC,EAAM0B,MAAMY,OAErB,SAAAyF,GAAQ,MAAK,CACX6K,YAAa5K,YAAmB+K,EAAahL,KANlCD,CAQbT,YAAWsL,KChCEK,GCCS,kBACtB7O,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAC6O,GAAD,QCMWC,GARK,WAClB,OACE/O,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAC+O,GAAD,0BCCAC,GAAc,eAAA7S,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOwS,EAAKC,GAAZ,IAAAjJ,EAAAnI,EAAA,OAAAxB,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEIC,IAAM2B,KAAKwQ,EAAK,CAAEpQ,MAAOqQ,IAF7B,cAAAjJ,EAAAtJ,EAAAM,KAEXa,EAFWmI,EAEXnI,KACRhC,QAAQC,IAAI+B,GAHOnB,EAAAK,OAAA,SAIZc,GAJY,OAAAnB,EAAAC,KAAA,EAAAD,EAAAwS,GAAAxS,EAAA,SAMnBb,QAAQC,IAARY,EAAAwS,IANmB,yBAAAxS,EAAAO,SAAAT,EAAAU,KAAA,YAAH,gBAAAiS,EAAAC,GAAA,OAAAlT,EAAAiB,MAAAD,KAAAE,YAAA,GAWdiS,GAAW,SAACC,EAAcN,GAAQ,IAAAO,EACZC,mBAASF,GADGG,EAAAtT,OAAAmK,GAAA,EAAAnK,CAAAoT,EAAA,GAC/BtO,EAD+BwO,EAAA,GACxBC,EADwBD,EAAA,GAAAE,EAENH,oBAAS,GAFHI,EAAAzT,OAAAmK,GAAA,EAAAnK,CAAAwT,EAAA,GAE/BE,EAF+BD,EAAA,GAErBE,EAFqBF,EAAA,GAIhCzN,EAAQ,eAAA8D,EAAA9J,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAsG,EAAMjC,GAAN,IAAAK,EAAA8O,EAAAC,EAAA,OAAA3T,EAAAC,EAAAG,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,UAEHqE,EACRL,EADFG,OAAUE,MAEZyO,EAASzO,GAGG,oBAAR+N,EAPW,CAAAlM,EAAAlG,KAAA,gBAAAkG,EAAAlG,KAAA,EAQUmS,GAAeC,EAAK/N,GAR9B,OAQP4O,EARO/M,EAAA9F,KASbnB,QAAQC,IAAI+T,GACR5O,EAAMsG,QAAU,IAAMtG,EAAMsG,OAAS,GAAkB,OAAbsI,EAC5CC,GAAY,GAEZA,GAAY,GAbDhN,EAAAlG,KAAA,oBAiBI,qBAARoS,EAjBI,CAAAlM,EAAAlG,KAAA,aAkBG,mCACJqT,KAAKhP,GAnBJ,CAAA6B,EAAAlG,KAAA,gBAAAkG,EAAAlG,KAAA,GAoBYmS,GAAeC,EAAK/N,GApBhC,QAoBL4O,EApBK/M,EAAA9F,KAqBXnB,QAAQC,IAAI+T,GACQC,EAAP,OAAbD,GAtBW/M,EAAAlG,KAAA,iBAuBNkT,GAAY,GAvBN,QAAAhN,EAAAlG,KAAA,iBA0BbqE,EAAMsG,QAAU,EAAIuI,GAAY,GAAQA,GAAY,GA1BvC,yBAAAhN,EAAA7F,SAAA4F,EAAA3F,SAAH,gBAAAgT,GAAA,OAAAjK,EAAA9I,MAAAD,KAAAE,YAAA,GA8Bd,MAAO,CAAE6D,QAAOkB,WAAU0N,aA+EbM,GA5EM,SAAAC,GAAiB,IAAd5O,EAAc4O,EAAd5O,QAChBjB,EAAQ8O,GAAS,GAAI,oBACrBgB,EAAWhB,GAAS,GAAI,mBACxB1P,EAAK0P,GAAS,IAGpB,OADAxT,QAAQC,IAAIuU,EAASpP,MAAOoP,EAASR,UAEnC/P,EAAAxD,EAAAyD,cAAA,cACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,iBACblC,EAAAxD,EAAAyD,cAAA,mCACAD,EAAAxD,EAAAyD,cAAA,QAAA5D,OAAAmU,OAAA,CACEtO,UAAU,QACV9D,GAAG,KACCqC,EAHN,CAIE0B,YAAY,oDACZC,YAAY,KAEb3B,EAAMsP,SACL/P,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEqO,MAAO,SAArB,wEAEApO,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEqO,MAAO,QAArB,8GAIFpO,EAAAxD,EAAAyD,cAAA,sCACAD,EAAAxD,EAAAyD,cAAA,QAAA5D,OAAAmU,OAAA,CACEtO,UAAU,SACNqO,EAFN,CAGEpO,YAAY,iEACZC,YAAY,KAEbmO,EAASR,SACR/P,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEqO,MAAO,SAArB,wEAEApO,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEqO,MAAO,QAArB,sFAEFpO,EAAAxD,EAAAyD,cAAA,sCACAD,EAAAxD,EAAAyD,cAAA,QAAA5D,OAAAmU,OAAA,CACEtO,UAAU,QACVtE,KAAK,YACDiC,EAHN,CAIEsC,YAAY,uEACZC,YAAY,KAEbvC,EAAGkQ,SACF/P,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEqO,MAAO,SAArB,8EAEApO,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEqO,MAAO,QAArB,yEAGFpO,EAAAxD,EAAAyD,cAAA,SACErC,KAAK,SACLsE,UAAU,cACVf,MAAM,SACNqB,QAAOnG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAgO,IAAA,IAAAnP,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,YACH2D,EAAMsP,UAAYQ,EAASR,UAAYlQ,EAAGkQ,UADvC,CAAApF,EAAA7N,KAAA,eAAA6N,EAAA7N,KAAA,EAEkBC,IAAM2B,KAAK,aAAc,CAC9C+B,MAAOA,EAAMU,MACb9C,KAAMkS,EAASpP,MACfT,SAAUb,EAAGsB,QALV,OAEC7F,EAFDqP,EAAAzN,KAOLnB,QAAQC,IAAIV,EAASyC,MACH,YAAlBzC,EAASyC,KACL2D,EAAQC,KAAK,KACb0E,MAAM,sDACV3E,EAAQC,KAAK,KAXRgJ,EAAA7N,KAAA,gBAaLuJ,MAAM,kGAbD,yBAAAsE,EAAAxN,SAAAsN,EAAArN,cClGJqT,GARM,SAAArU,GAAe,IAAbsF,EAAatF,EAAbsF,QACrB,OACE1B,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACyQ,GAAD,CAAchP,QAASA,MC6GdiP,6NA7Gb9U,MAAQ,CACN2C,QAAS,GACTsL,eAAgB,gBA0BlBjJ,aAAe,SAAAC,GACbC,EAAKC,SAAS,CACZxC,QAASsC,EAAEG,OAAOE,WAItBqJ,kCAAe,SAAA9N,IAAA,IAAAoI,EAAA8L,EAAAxS,EAAAI,EAAAkM,EAAA,OAAAnO,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAgI,EACuB/D,EAAKU,MAAjCmP,EADK9L,EACL8L,oBAAqBxS,EADhB0G,EACgB1G,GACrBI,EAAYuC,EAAKlF,MAAjB2C,QAEJkM,EAAK,GACT,IACEA,EAAKlM,EAAQvD,MAAM,YAAY0L,OAAO,SAAAvB,GAAI,OAAIA,EAAKqC,QAAU,KAC7D,MAAO3G,IAPI,GAUR7C,aAAauF,QAAQ,MAVb,CAAA5G,EAAAE,KAAA,eAWXuJ,MAAM,6DAXKzJ,EAAAK,OAAA,sBAcTuB,EAAQiJ,QAAU,IAdT,CAAA7K,EAAAE,KAAA,gBAeXuJ,MAAM,yFAfKzJ,EAAAK,OAAA,sBAkBTuB,EAAQvD,MAAM,WAlBL,CAAA2B,EAAAE,KAAA,gBAmBXuJ,MAAM,wGAnBKzJ,EAAAK,OAAA,sBAqBFyN,EAAG,GArBD,CAAA9N,EAAAE,KAAA,gBAsBXuJ,MAAM,8FAtBKzJ,EAAAK,OAAA,qBA0BRuB,EA1BQ,CAAA5B,EAAAE,KAAA,gBA2BXuJ,MAAM,4DA3BKzJ,EAAAK,OAAA,sBAgCTuB,EAAQvD,MAAM,WAhCL,CAAA2B,EAAAE,KAAA,gBAiCXuJ,MAAM,wGAjCKzJ,EAAAK,OAAA,sBAmCFyN,EAAG,GAnCD,CAAA9N,EAAAE,KAAA,gBAoCXuJ,MAAM,8FApCKzJ,EAAAK,OAAA,yBAAAL,EAAAE,KAAA,GAwCWC,IAAM2B,KAAK,sBAAuB,CACxDF,QAASuC,EAAKlF,MAAM2C,QACpByL,OAAQ7L,EACR+K,SAAUlL,aAAauF,QAAQ,UA3CpB,QA6CU,YA7CV5G,EAAAM,KA6CCa,KAAoB6S,IAC7BvK,MAAM,0EA9CE,yBAAAzJ,EAAAO,SAAAT,EAAAU,WAiDfwE,YAAc,SAAAd,GACE,UAAVA,EAAEe,KAAiBd,EAAKyJ,+NA9EM,eAA9BpN,KAAKvB,MAAMiO,gBAAgE,IAA7B1M,KAAKqE,MAAMoP,8CACpC9T,IAAM2B,KAAK,oBAAqB,CACrDuL,OAAQ7M,KAAKqE,MAAMrD,qBADbL,SAIJ+L,EAAiB/L,EAAOA,EAAKoH,IAAI,SAAAC,GACnC,OACEpF,EAAAxD,EAAAyD,cAAC6L,GAAD,CACEtN,QAAS4G,EAAK5G,QACd2K,SAAU/D,EAAK+D,SACftH,IAAKuD,EAAKhH,GACVnD,MAAO6G,EAAKL,MAAMxG,UAGnB,YAELmC,KAAK4D,SAAS,CAAE8I,sJAkElB,OACE9J,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,qBACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eAA4C,IAA7B9E,KAAKqE,MAAMoP,cAAsB,GAAMzT,KAAKvB,MAAMiO,gBAChF9J,EAAAxD,EAAAyD,cAAA,SACEkC,YAAY,cACZD,UAAU,kBACVf,MAAO/D,KAAKvB,MAAM2C,QAClB6D,SAAUjF,KAAKyD,aACfyB,WAAYlF,KAAKwE,cAEnB5B,EAAAxD,EAAAyD,cAAA,SACErC,KAAK,SACLuD,MAAM,SACNe,UAAU,gBACVM,QAASpF,KAAKoN,uBAvGMvH,cCKxB6N,GACJ,4FACIC,GACJ,2EAuQaC,8MAlQbnV,MAAQ,CACNwC,KAAM,GACN4S,WAAY,EACZvL,WAAY,GACZ/E,WAAW,EACX+I,KAAMoH,GACND,cAAe,EACfK,cAAe,KAQjBnL,iCAAc,SAAArJ,IAAA,IAAAoI,EAAA1G,EAAA4H,EAAA3H,EAAA6H,EAAAC,EAAA8K,EAAAJ,EAAAnL,EAAA,OAAAnJ,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZiE,EAAKC,SAAS,CAAEL,WAAW,IADfmE,EAGW/D,EAAKU,MAApBrD,EAHI0G,EAGJ1G,GAAI4H,EAHAlB,EAGAkB,OAHApJ,EAAAE,KAAA,EAIOC,IAAM2B,KAAK,gBAAiB,CAC7CsH,OAAQjF,EAAKU,MAAMuE,SALT,cAIN3H,EAJMzB,EAAAM,KAAAN,EAAAE,KAAA,EAS0CwJ,QAAQC,IAAI,CAChExJ,IAAM2B,KAAK,qBAAsB,CAAEuL,OAAQ7L,IAC3CrB,IAAM2B,KAAK,oBAAqB,CAAEuL,OAAQ7L,IAC1CrB,IAAM2B,KAAK,mBAAoB,CAAEsH,aAZvB,OAAAE,EAAAtJ,EAAAM,KAAAiJ,EAAA9J,OAAAmK,GAAA,EAAAnK,CAAA6J,EAAA,GASL+K,EATK9K,EAAA,GASO0K,EATP1K,EAAA,GASsBT,EATtBS,EAAA,GAeZpF,EAAKC,SAAS,CACZ3C,KAAMA,EAAKN,KACXkT,WAAYA,EAAWlT,KAAK0J,OAC5B/B,WAAYA,EAAW3H,KACvB8S,cAAeA,EAAc9S,KAAK0J,SAGhCxJ,aAAauF,QAAQ,OACvByN,EAAWlT,KAAK8I,QAAQ,SAAAzB,GAClBA,EAAKhH,KAAOqI,OAAOxI,aAAauF,QAAQ,QAC1CzC,EAAKC,SAAS,CACZ0I,KAAMqH,OAMdhQ,EAAKC,SAAS,CAAEL,WAAW,IAhCf,yBAAA/D,EAAAO,SAAAT,EAAAU,WAoCd4K,YAAc,WAAM,IAAAZ,EACsBrG,EAAKU,MAArCC,EADU0F,EACV1F,QAAauI,EADH7C,EACDhJ,GAAY4H,EADXoB,EACWpB,OAC7BtE,EAAQC,KAAR,SAAAkD,OAAsBmB,EAAtB,KAAAnB,OAAgCoF,OAIlCK,gBAAkB,WAAM,IACVL,EAAWlJ,EAAKU,MAApBrD,GAEHH,aAAauF,QAAQ,MAKtBzC,EAAKlF,MAAM6N,OAASoH,IACtB/P,EAAKC,SAAS,CACZ0I,KAAMqH,GACNE,WAAYlQ,EAAKlF,MAAMoV,WAAa,IAEtClU,IAAM2B,KAAK,aAAc,CACvBsH,OAAQS,OAAOxI,aAAauF,QAAQ,OACpCyG,aAGFlJ,EAAKC,SAAS,CACZ0I,KAAMoH,GACNG,WAAYlQ,EAAKlF,MAAMoV,WAAa,IAEtClU,IAAM2B,KAAK,eAAgB,CACzBsH,OAAQS,OAAOxI,aAAauF,QAAQ,OACpCyG,YApBF5D,MAAM,+FAyBV8K,cAAgB,WAAM,IACZD,EAAkBnQ,EAAKlF,MAAvBqV,cACHjT,aAAauF,QAAQ,QAI1BzC,EAAKC,SAAS,CACZkQ,eAAgBA,IAJhB7K,MAAM,sGASVuK,oBAAsB,WAAM,IAClBC,EAAkB9P,EAAKlF,MAAvBgV,cACR9P,EAAKC,SAAS,CACZ6P,cAAeA,EAAgB,EAC/BK,cAAe,OAInBpG,eAAiB,SAAAC,GACf,IAAMC,GAAWD,EAAW,KAAME,QAAQ,GACpCC,GAAWH,EAAQ,KAAgBE,QAAQ,GAC3CE,GAASJ,EAAQ,MAAqBE,QAAQ,GAEpD,OAAID,EAAU,GACJA,EAAUA,EAAU,WAAY,sBAC/BE,EAAU,GACZA,EAAU,WACRC,EAAQ,GACVA,EAAQ,gBADV,sFAxGP/N,KAAK2I,+CA6GE,IAAAjE,EAAA1E,KAAAgU,EACyChU,KAAKqE,MAA7ChD,EADD2S,EACC3S,IAAK4S,EADND,EACMC,KAAM7S,EADZ4S,EACY5S,QAASwH,EADrBoL,EACqBpL,OAAQtE,EAD7B0P,EAC6B1P,QAD7BL,EAEuDjE,KAAKvB,MAA3DwC,EAFDgD,EAEChD,KAAM4S,EAFP5P,EAEO4P,WAAYvL,EAFnBrE,EAEmBqE,WAAYgE,EAF/BrI,EAE+BqI,KAAMmH,EAFrCxP,EAEqCwP,cAGtCpF,EAAc4F,EAAK3F,OAAO,EAAG,IAI/BF,EAAW,KAEbA,EADEC,KAJY,IAAIE,MAAOC,cAAcF,OAAO,EAAG,IAKtCtO,KAAK0N,eAAe,IAAIa,KAASA,KAAKE,MAAMwF,IAE5C5F,EAGb,IAWIa,EAXAvK,EAAc,QAKlB,OAJIjH,OAAOkH,WAAa,MACtBD,EAAc,QAGZ3E,KAAKvB,MAAM8E,UAEXX,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAOoC,EAAanC,OAAQmC,EAAalC,GAAG,OAAOC,GAAG,UAK/DtB,IAEF8N,GADAA,EAAqB9N,EAAQ8K,MAAM,QACKnE,IAAI,SAAAC,GAC1C,MAAgB,MAAZA,EAAK,IAAcA,EAAKqC,OAAS,EAEjCzH,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACsJ,GAAD,CAASZ,QAASvD,EAAM1D,QAASI,EAAKL,MAAMC,WAG3B,MAAZ0D,EAAK,IAAcA,EAAKqC,OAAS,EAExCzH,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACuJ,GAAD,CACET,QAAS3D,EACT1D,QAASI,EAAKL,MAAMC,QACpBzG,MAAO6G,EAAKL,MAAMxG,SAKnB+E,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QAAQkD,MAKhCpF,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,aACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,OACblC,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,OACVM,QAAS,WACPd,EAAQC,KAAR,SAAAkD,OAAsBmB,KAExBjG,MAAO,CAAE2G,OAAQ,YAEjB1G,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eACblC,EAAAxD,EAAAyD,cAAA,OACEI,IACEqF,GAEI,6CAENnF,IAAI,MAGPlC,GAEH2B,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,SACblC,EAAAxD,EAAAyD,cAAA,OACEI,IAAI,uEACJV,MAAO,GACPC,OAAQ,GACRW,IAAI,KAGNP,EAAAxD,EAAAyD,cAAA,QAAMiC,UAAU,QAAQsJ,KAI5BxL,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YACblC,EAAAxD,EAAAyD,cAAA,OAAKuC,QAASpF,KAAK4K,YAAa9F,UAAU,SACxClC,EAAAxD,EAAAyD,cAAA,OAAKI,IAAK5B,EAAK8B,IAAI,MAErBP,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,UACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,gBACblC,EAAAxD,EAAAyD,cAAA,OACEI,IAAKqJ,EACL/J,MAAO,GACPC,OAAQ,GACRW,IAAI,GACJR,MAAO,CACL2G,OAAQ,UACRqG,UAAW,MACXuE,YAAa,MACbC,WAAY,SAEd/O,QAASpF,KAAKkN,kBAEhBtK,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEJ,MAAO,SAAWsR,GAAkB,IAClDjR,EAAAxD,EAAAyD,cAAA,OACEI,IAtOd,4EAuOcV,MAAO,GACPC,OAAQ,GACRW,IAAI,GACJR,MAAO,CACLgN,UAAW,MACXwE,WAAY,OACZ7K,OAAQ,WAEVlE,QAASpF,KAAK+T,gBAEhBnR,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,UAAU2O,IAE3B7Q,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QAAQoK,GACtBlP,KAAKvB,MAAMqV,cACVlR,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAACuR,GAAD,CACEZ,oBAAqBxT,KAAKwT,oBAC1BxS,GAAIhB,KAAKqE,MAAMrD,GACfyS,cAAeA,KAIf,gBA3PO5N,0CCXjBwO,8MACJ5V,MAAQ,CACN6V,MAAO,MAWTC,QAAU,SAAAC,GACR,IAAK,IAAIC,EAAID,EAAMnK,OAAS,EAAGoK,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADDzV,EAElB,CAACwV,EAAME,GAAIF,EAAMC,IAAvCD,EAAMC,GAFkCzV,EAAA,GAE9BwV,EAAME,GAFwB1V,EAAA,GAI3C,OAAOwV,oNAZa7U,IAAM2B,KAAK,2BAAzBgT,SACNtU,KAAK4D,SAAS,CACZ0Q,MAAOA,EAAM3T,0IAaR,IAAA+D,EAAA1E,KACCsU,EAAUtU,KAAKvB,MAAf6V,MADD5M,EAEiD1H,KAAKqE,MAArDyQ,EAFDpN,EAECoN,uBAAwBC,EAFzBrN,EAEyBqN,aAAcC,EAFvCtN,EAEuCsN,MAI1CC,EAAW,GACZ5L,OAAOxI,aAAauF,QAAQ,SAAQ6O,EAAWX,EAAM/K,OAAO,SAAAxI,GAAI,OAAIA,EAAKC,KAAOqI,OAAOxI,aAAauF,QAAQ,UAK/G,IAAMwB,GAHNqN,GADAA,EAAWjV,KAAKuU,QAAQU,IACJzJ,MAAM,EAAGsJ,IAGP/M,IAAI,SAAAhH,GAExB,OACE6B,EAAAxD,EAAAyD,cAACqS,GAAD,CACEnU,KAAMA,EACN0D,IAAK1D,EAAKC,GACVsD,QAASI,EAAKL,MAAMC,QACpBpD,IAAKH,EAAKG,QAMhB,OACE0B,EAAAxD,EAAAyD,cAAA,OACEF,MAAO,CAAEwC,UAAW,SAAUgQ,YAAa,MAAOC,aAAc,OAChEtQ,UAAU,YAEVlC,EAAAxD,EAAAyD,cAAA,OACEF,MAAO,CAAE2H,SAAU,UAAWC,WAAY,MAAOoF,UAAW,SAE3DoF,EACCnS,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YAAf,8EAA8ClC,EAAAxD,EAAAyD,cAAA,WAA9C,0EAEAD,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YACVkQ,EAAkC,wCAA1B,gEACXpS,EAAAxD,EAAAyD,cAAA,WAFF,oEAOJD,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,iBAAiB8C,WAhEZ/B,aAsEtBwP,GAAgB,SAAAvM,GAA4B,IAAzB/H,EAAyB+H,EAAzB/H,KAAMuD,EAAmBwE,EAAnBxE,QAASpD,EAAU4H,EAAV5H,IACtC,OACE0B,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,WACVM,QAAS,WACPd,EAAQC,KAAR,SAAAkD,OAAsB1G,EAAKC,OAG7B4B,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eACZ5D,EACC0B,EAAAxD,EAAAyD,cAAA,OAAKI,IAAK/B,EAAKiC,IAAI,KAEnBP,EAAAxD,EAAAyD,cAAA,OAAKI,IAAI,6CAA6CE,IAAI,MAG9DP,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QAAQ/D,EAAKE,QAmMnBqU,8MAvLb7W,MAAQ,CACNmJ,KAAM,KACN2N,cAAc,EACdC,OAAQ,KACR1J,GAAI,EACJ2J,YAAa,KACblS,WAAW,KAIbmS,MAAQ,KACRC,GAAK,IACLC,WAAY,IAyBZjN,iCAAc,SAAAhD,IAAA,IAAAhI,EAAAqX,EAAAa,EAAAC,EAAA,OAAA3W,EAAAC,EAAAG,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,UACJ/B,EAAasN,EAAK5G,MAAlB1G,SACFqX,EAAQe,KAAGtH,MAAM9Q,EAASqY,QAG3BnV,aAAauF,QAAQ,OAAU4O,EAAMzJ,QAL9B,CAAA3F,EAAAlG,KAAA,eAAAkG,EAAA/F,OAAA,qBASUmV,EAAMzJ,QAThB,CAAA3F,EAAAlG,KAAA,gBAAAkG,EAAAlG,KAAA,EAUFC,IAAM2B,KAAK,uBAAwB,CAAE2U,IAAKjB,EAAMzJ,UAV9C,OAAA3F,EAAAoM,GAAApM,EAAA9F,KAAA8F,EAAAlG,KAAA,wBAAAkG,EAAAlG,KAAA,GAWFC,IAAM2B,KAAK,0BAA2B,CAAEsH,OAAQS,OAAOxI,aAAauF,QAAQ,SAX1E,QAAAR,EAAAoM,GAAApM,EAAA9F,KAAA,WASN+V,EATMjQ,EAAAoM,GAgBK,aAFb8D,EAAWD,EAAclV,MAdjB,CAAAiF,EAAAlG,KAAA,gBAiBVuL,EAAKrH,SAAS,CACZ4R,OAAQ,IAlBA5P,EAAA/F,OAAA,kBAsBVoL,EAAK0K,GAAKG,EAASzL,OACnByL,EAAWA,EAAS9K,UACpBC,EAAKyK,MAAQI,EAASI,OAAO,EAAG,GAGhCjL,EAAKrH,SAAS,CACZkI,IAAKb,EAAKxM,MAAMqN,KAGdgK,EAASzL,OAAS,EACpBY,EAAKkL,eAAeL,IAEpB7K,EAAK2K,WAAY,EACjB3K,EAAKrH,SAAS,CACZkI,IAAKb,EAAKxM,MAAMqN,MApCV,yBAAAlG,EAAA7F,SAAA4F,EAAA3F,WA0CdmW,eAAiB,SAAAL,GAEf7K,EAAKmL,KAAKC,QAAQC,iBAAiB,SAAU,WAEzCrL,EAAKmL,KAAKC,QAAQrJ,UAAY/B,EAAKmL,KAAKC,QAAQE,aAAe,IAC/DtL,EAAKmL,KAAKC,QAAQpJ,cAElBhC,EAAKuL,cAAcV,yFAxEL,IAAAW,EAAAzW,KAElBmE,WAAW,WACTsS,EAAK9N,eACJ,gDAIcsB,EAAWC,GAAW,IAAAF,EAGlBhK,KAAKqE,MAAlBtD,EAH+BiJ,EAG/BjJ,KAAM2V,EAHyB1M,EAGzB0M,GACd,GAAIzM,EAAUlJ,OAASA,GAAQkJ,EAAUyM,KAAOA,EAAI,CAClD1W,KAAK2I,cACL,IACE3B,SAASC,eAAe,QAAQ0P,SAAS,EAAG,GAC5C,MAAO7X,GAEP,YADAH,QAAQC,IAAIE,2CA4DJgX,GAAU,IAAAc,EAAA5W,KACtB,GAAIA,KAAK0V,MAAMrL,QAAUrK,KAAK2V,GAK5B,OAJA3V,KAAK4V,WAAY,OACjB5V,KAAK4D,SAAS,CACZkI,IAAK9L,KAAKvB,MAAMqN,KAJE,IASd4J,EAAU1V,KAAV0V,MACFmB,EAAOf,EAASI,OAAO,EAAG,GAEhClW,KAAK4D,SAAS,CAAE2R,cAAc,IAC9BvV,KAAK0V,MAAQA,EAAMjO,OAAOoP,GAE1B1S,WAAW,WAETyS,EAAKhT,SAAS,CAAE2R,cAAc,KAC7B,sCAGI,IAAAuB,EAAA9W,KACC0V,EAAU1V,KAAV0V,MADD1B,EAEuBhU,KAAKqE,MAA3BC,EAFD0P,EAEC1P,QAAS3G,EAFVqW,EAEUrW,SACXqX,EAAQe,KAAGtH,MAAM9Q,EAASqY,QAKhC,GAAIhW,KAAKvB,MAAM+W,QAAsB,IAAZxV,KAAK2V,GAC5B,OACE/S,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEgN,UAAW,UACvB/M,EAAAxD,EAAAyD,cAACkU,GAAD,CACEC,UAAWhX,KAAKqE,MAAMtD,KACtBuD,QAAStE,KAAKqE,MAAMC,QACpBwQ,uBAAwB,IACxBE,MAAOA,KAMf,IAAMiC,EAAWvB,EAAM3N,IAAI,SAAAC,GAAI,OAC7BpF,EAAAxD,EAAAyD,cAACqU,GAAD,CACElW,GAAIgH,EAAKhH,GACTK,IAAK2G,EAAK3G,IACVJ,KAAM+G,EAAK/G,KACXqD,QAASA,EACTG,IAAKuD,EAAKhH,GACViT,KAAMjM,EAAKmG,UACXvF,OAAQZ,EAAK6C,OACbzJ,QAAS4G,EAAK5G,QACd+V,aAAcL,EAAKzS,MAAMtD,SAKzBqW,EAAiB,EAGrB,OAFgB,IAAZpX,KAAK2V,KAAUyB,EAAiB,KAGlCxU,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QACblC,EAAAxD,EAAAyD,cAAA,OAAKW,IAAI,UAAUsB,UAAU,OAAO9D,GAAG,QACpCgU,EAAMzJ,QACL3I,EAAAxD,EAAAyD,cAAA,cACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,oBAAf,sBACsBpH,OAAOkH,WAAa,IAAMhC,EAAAxD,EAAAyD,cAAA,WAAQ,KAAKD,EAAAxD,EAAAyD,cAAA,QAAMiC,UAAU,MAAhB,IAAuBkQ,EAAMzJ,WAI5F3I,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAEH,OAAQ,UAGxBI,EAAAxD,EAAAyD,cAAA,cAASoU,GACRjX,KAAK4V,UACJhT,EAAAxD,EAAAyD,cAACkU,GAAD,CACEzS,QAAStE,KAAKqE,MAAMC,QACpBwQ,uBAAwBsC,EACxBrC,aAAc/U,KAAK2V,GACnBqB,UAAWhX,KAAKqE,MAAMtD,KACtBpD,SAAUqC,KAAKqE,MAAMtD,OAGvB,YA/KO8E,aCjGbwR,oLAGF,OACEzU,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACyU,GAAD,CACEvW,KAAMf,KAAKqE,MAAMtD,KACjBuD,QAAStE,KAAKqE,MAAMC,QACpB3G,SAAUqC,KAAKqE,MAAM1G,SACrB+Y,GAAM1W,KAAKqE,MAAMqS,aATC7Q,aAgBbU,eAAQ,SAAA9H,GAAK,MAAK,CAC/BsC,KAAMtC,EAAM0B,MAAMY,OADLwF,CAEXT,YAAWuR,KCVAE,GATE,SAAAvY,GAAgB,IAAdrB,EAAcqB,EAAdrB,SACXqX,EAAQe,KAAGtH,MAAM9Q,EAASqY,QAAQzK,QACxC,OACE3I,EAAAxD,EAAAyD,cAAA,OAAKF,MAAO,CAAC6U,SAAW,WACtB5U,EAAAxD,EAAAyD,cAAC4U,GAAD,CAAef,GAAI1B,MCDnB0C,sNACJjZ,MAAQ,CACNoR,aAAc,KACdC,WAAW,KAYbW,iBAAmB,SAAA/M,GACjBC,EAAKC,SAAS,CACZiM,aAAcnM,EAAEG,OAAOgN,MAAM,KAE/BlS,QAAQC,IAAI8E,EAAEG,OAAOgN,MAAM,OAG7BzD,kCAAe,SAAA9N,IAAA,IAAAgF,EAAAuL,EAAAK,EAAAC,EAAA,OAAAhR,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACL4E,EAAYX,EAAKU,MAAjBC,QACAuL,EAAiBlM,EAAKlF,MAAtBoR,aAFK,CAAArQ,EAAAE,KAAA,eAKXuJ,MAAM,+EALKzJ,EAAAK,OAAA,wBASPqQ,EAAK,IAAIG,SACf1R,QAAQC,IAAIiR,GACZK,EAAGI,OAAO,MAAOT,EAAcA,EAAa/L,MAC5CoM,EAAGI,OAAO,SAAUjH,OAAOxI,aAAauF,QAAQ,QAE1C+J,EAAc,CAClBI,QAAS,CAAEC,eAAgB,wBAG7B7M,EAAKC,SAAS,CACZkM,WAAW,IAnBAtQ,EAAAE,KAAA,GAqBPC,IAAM2B,KAAK,gBAAiB4O,EAAIC,GArBzB,QAsBb7L,EAAQC,KAAR,SAAAkD,OAAsB5G,aAAauF,QAAQ,QAtB9B,yBAAA5G,EAAAO,SAAAT,EAAAU,2FAhBIiK,EAAWC,GAAW,IAC/B5F,EAAYtE,KAAKqE,MAAjBC,QACR,IAAK+E,OAAOxI,aAAauF,QAAQ,OAG/B,OAFA6C,MAAM,2BACN3E,EAAQC,KAAK,sCAqCR,IACCsL,EAAiB7P,KAAKvB,MAAtBoR,aAEFlL,EAAcjH,OAAOkH,WAAa,IAAM,QAAU,OACxD,OAAG5E,KAAKvB,MAAMqR,UAAkBlN,EAAAxD,EAAAyD,cAACgC,EAAD,CAAStC,MAAOoC,EAAanC,OAAQmC,EAAalC,GAAG,OAAOC,GAAG,SAG7FE,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QACblC,EAAAxD,EAAAyD,cAAA,cACED,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,gBACblC,EAAAxD,EAAAyD,cAAA,SAAOiC,UAAU,gBACd+K,EAAe,8BAAY,2DAC5BjN,EAAAxD,EAAAyD,cAAA,SACE7B,GAAG,MACH8C,KAAK,MACLtD,KAAK,OACLsE,UAAU,cACVG,SAAUjF,KAAKyQ,iBACfU,OAAO,sBAGVtB,EAAeA,EAAa/L,KAAO,GACpClB,EAAAxD,EAAAyD,cAAA,SACErC,KAAK,SACLuD,MAAM,SACNe,UAAU,SACVM,QAASpF,KAAKoN,yBAzETvH,cAkFJU,eAAQ,SAAA9H,GAAK,MAAK,CAC/BsC,KAAMtC,EAAM0B,MAAMY,OADLwF,CAEXT,YAAW4R,KChFAC,GARE,WACf,OACE/U,EAAAxD,EAAAyD,cAAA,WACID,EAAAxD,EAAAyD,cAAC+U,GAAD,QCCF/Q,kBAAc,SAAA7H,GAAkB,IAAf8H,EAAe9H,EAAf8H,SACfC,EAAKC,SAASC,eAAe,SACnC,OAAOC,IAASC,aAAaL,EAAUC,KAKnC8Q,8MACJpZ,MAAQ,CACN0U,SAAU,KACVjS,IAAK,KACL4W,QAAS,KACTnV,MAAO,CACLqO,MAAO,YAkCXpG,YAAc,WAAM,IAAAlD,EAC4B/D,EAAKU,MAA3CC,EADUoD,EACVpD,QAASuI,EADCnF,EACDmF,OAAQtF,EADPG,EACOH,iBACjBwQ,EAAepU,EAAKlF,MAApBsZ,WAERxQ,IACAjD,EAAQC,KAAR,SAAAkD,OAAsBsQ,EAAtB,KAAAtQ,OAAoCoF,qOAlCE7M,KAAKqE,MAAnC2T,cAAWpP,WAAQiE,WACrBlK,EAAQqV,EAAY,CAAEhH,MAAO,QAAW,CAAEA,MAAO,cAEZ9H,iBACnCvJ,IAAM2B,KAAK,gBAAiB,CAAEsH,8CAC9BjJ,IAAM2B,KAAK,mBAAoB,CAAEsH,+CACjCjJ,IAAM2B,KAAK,sBAAuB,CAAEuL,gDACpClN,IAAM2B,KAAK,2BAA4B,CAC3CsH,OAAQS,OAAOxI,aAAauF,QAAQ,8EALW+C,yDAA5CgK,OAAUjS,OAAK+W,OAchBH,EAAUG,EAAYtX,KAAOsX,EAAYtX,KAAKU,IAAM,KACpD0W,EAAaE,EAAYtX,KAAOsX,EAAYtX,KAAKkK,OAAS,KAEhE7K,KAAK4D,SAAS,CACZuP,SAAUA,EAASxS,KACnBO,IAAKA,EAAIP,KACTmX,QAASA,EACTC,WAAYA,EACZpV,8IAYK,IAAAsB,EAC4BjE,KAAKvB,MAAhC0U,EADDlP,EACCkP,SAAUjS,EADX+C,EACW/C,IAAK4W,EADhB7T,EACgB6T,QAEnB1W,EAAU,GACd,OAFqBpB,KAAKqE,MAAlB6T,UAGN,IAAK,OACH9W,EAAU,2DACV,MACF,IAAK,UACHA,EAAU,8EACV,MACF,IAAK,SACHA,EAAU,kEACV,MACF,IAAK,UACHA,EAAU,2DAOd,OAAI+R,GAA2B,kBAARjS,EAEnB0B,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YAAYM,QAASpF,KAAK4K,aACvChI,EAAAxD,EAAAyD,cAAA,OACEI,IAAK/B,GAAY,6CACjBiC,IAAI,GACJ2B,UAAU,QAEZlC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,OAAOnC,MAAO3C,KAAKvB,MAAMkE,OACtCC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YAAYqO,GAD7B,eAC+C,IAC1C/R,GAGH0W,EACIlV,EAAAxD,EAAAyD,cAAA,OAAKI,IAAK6U,EAAS3U,IAAI,GAAG2B,UAAU,YACpClC,EAAAxD,EAAAyD,cAAA,aAORD,EAAAxD,EAAAyD,cAAA,OAAKuC,QAASpF,KAAK4K,aACjBhI,EAAAxD,EAAAyD,cAACgC,EAAD,CAASnC,GAAI,aA7FQmD,aAmGzBsS,8MAOJ5Q,iBAAmB,WACjB7C,EAAKL,MAAM+T,mGALXpY,KAAKqE,MAAMsE,+CAQJ,IAAAsC,EAAAjL,KACCqY,EAAkBrY,KAAKqE,MAAvBgU,cAEFvQ,EAAQuQ,EAActQ,IAAI,SAAAC,GAAI,OAClCpF,EAAAxD,EAAAyD,cAACyV,GAAD,CACE1P,OAAQZ,EAAKuQ,UACb1L,OAAQ7E,EAAK1G,KACb4W,SAAUlQ,EAAKkQ,SACf5T,QAAS2G,EAAK5G,MAAMC,QACpBiD,iBAAkB0D,EAAK1D,iBACvByQ,UAAWhQ,EAAKgQ,cAIpB,OACEpV,EAAAxD,EAAAyD,cAAC2V,GAAD,KACE5V,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,gBACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACblC,EAAAxD,EAAAyD,cAAA,2BAEmB,YAAlBwV,GAA+BzV,EAAAxD,EAAAyD,cAACgC,EAAD,CAASnC,GAAI,MAC5C2V,EAAc,GACbzV,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,iBAAiBgD,GAEhClF,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,gBAAgBnC,MAAO,CAAC2H,SAAW,SAAUC,WAAa,QAAzE,+CAA0F3H,EAAAxD,EAAAyD,cAAA,WAA1F,mEAEFD,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,UAAQuC,QAASpF,KAAKuH,iBAAkBzC,UAAU,SAAlD,oBAtCYe,aAiDXC,eAAWqS,IC3JpBM,8MACJha,MAAQ,CACNia,QAAQ,EACRL,cAAe,UACfM,oBAAoB,KAiBtBC,iBAAmB,WACjBC,YAAW5Z,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAsJ,EAAAkQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAha,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJkJ,EAASS,OAAOxI,aAAauF,QAAQ,OADjC5G,EAAAE,KAAA,EAEoBC,IAAM2B,KAAK,qBAAsB,CAC7DsH,WAHQ,OAEJkQ,EAFItZ,EAAAM,KAAAiZ,GAAA,EAAAC,GAAA,EAAAC,OAAAG,EAAA5Z,EAAAC,KAAA,EAAAyZ,EAKSJ,EAAgBnY,KALzB0Y,OAAAC,YAAA,UAAAP,GAAAI,EAAAD,EAAAxZ,QAAA6Z,KAAA,CAAA/Z,EAAAE,KAAA,YAAAyZ,EAAApV,MAMEiU,UANF,CAAAxY,EAAAE,KAAA,gBAONiE,EAAKC,SAAS,CAAE+U,oBAAoB,IAP9BnZ,EAAAK,OAAA,oBAAAkZ,GAAA,EAAAvZ,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAwS,GAAAxS,EAAA,SAAAwZ,GAAA,EAAAC,EAAAzZ,EAAAwS,GAAA,QAAAxS,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAsZ,GAAA,MAAAG,EAAAM,QAAAN,EAAAM,SAAA,WAAAha,EAAAC,KAAA,IAAAuZ,EAAA,CAAAxZ,EAAAE,KAAA,eAAAuZ,EAAA,eAAAzZ,EAAAia,OAAA,mBAAAja,EAAAia,OAAA,YAYV9V,EAAKC,SAAS,CACZyU,cAAeS,EAAgBnY,OAbvB,yBAAAnB,EAAAO,SAAAT,EAAAU,KAAA,+BAeT,QAGL2I,iCAAc,SAAAhD,IAAA,IAAAiD,EAAAkQ,EAAAY,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3a,EAAAC,EAAAG,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cACNkJ,EAASS,OAAOxI,aAAauF,QAAQ,OAD/BR,EAAAlG,KAAA,EAEkBC,IAAM2B,KAAK,qBAAsB,CAAEsH,WAFrD,OAENkQ,EAFMlT,EAAA9F,KAAA4Z,GAAA,EAAAC,GAAA,EAAAC,OAAAR,EAAAxT,EAAAnG,KAAA,EAAAoa,EAGOf,EAAgBnY,KAHvB0Y,OAAAC,YAAA,UAAAI,GAAAI,EAAAD,EAAAna,QAAA6Z,KAAA,CAAA3T,EAAAlG,KAAA,YAAAoa,EAAA/V,MAIAiU,UAJA,CAAApS,EAAAlG,KAAA,gBAKRiE,EAAKC,SAAS,CAAE+U,oBAAoB,IAL5B/S,EAAA/F,OAAA,oBAAA6Z,GAAA,EAAA9T,EAAAlG,KAAA,gBAAAkG,EAAAlG,KAAA,iBAAAkG,EAAAnG,KAAA,GAAAmG,EAAAoM,GAAApM,EAAA,SAAA+T,GAAA,EAAAC,EAAAhU,EAAAoM,GAAA,QAAApM,EAAAnG,KAAA,GAAAmG,EAAAnG,KAAA,GAAAia,GAAA,MAAAG,EAAAL,QAAAK,EAAAL,SAAA,WAAA5T,EAAAnG,KAAA,IAAAka,EAAA,CAAA/T,EAAAlG,KAAA,eAAAka,EAAA,eAAAhU,EAAA6T,OAAA,mBAAA7T,EAAA6T,OAAA,YAUZ9V,EAAKC,SAAS,CACZyU,cAAeS,EAAgBnY,OAXrB,yBAAAiF,EAAA7F,SAAA4F,EAAA3F,KAAA,iCAedoY,aAAe,WACbzU,EAAKC,SAAS,CACZ8U,QAAS/U,EAAKlF,MAAMia,OACpBC,oBAAoB,OAKxBoB,WAAa,SAAA/N,GACPnL,aAAauF,QAAQ,MAAOzC,EAAKU,MAAMC,QAAQC,KAAKyH,GACnD/C,MAAM,gEAIb+Q,mBAAqB,WACdnZ,aAAauF,QAAQ,MAI1BzC,EAAKC,SAAS,CACZ8U,QAAS/U,EAAKlF,MAAMia,SAJpBzP,MAAM,yPA/DOI,OAAOxI,aAAauF,QAAQ,QAEzCpG,KAAK4Y,mBAEP5Y,KAAK2I,kKAImBsR,GACpBja,KAAKqE,MAAMrD,KAAOiZ,EAAUjZ,IAAIhB,KAAK4Y,oDA8DlC,IAAAlU,EAAA1E,KAAA0H,EAC6C1H,KAAKqE,MAAjD6V,EADDxS,EACCwS,OAAQxY,EADTgG,EACShG,MAAO+B,EADhBiE,EACgBjE,aAAc0W,EAD9BzS,EAC8ByS,WAD9BlW,EAEgCjE,KAAKvB,MAApCia,EAFDzU,EAECyU,OAAQC,EAFT1U,EAES0U,mBAGZyB,EAAcF,EAAS,CAAE5Q,OAAQ,WAAc,KAEnD,OACE1G,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,WACZ4T,EACC9V,EAAAxD,EAAAyD,cAACwX,GAAD,CACEjC,aAAcpY,KAAKoY,aACnBC,cAAerY,KAAKvB,MAAM4Z,cAC1B1P,YAAa3I,KAAK2I,cAElB,KACJ/F,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,UACblC,EAAAxD,EAAAyD,cAAC0C,EAAA,EAAD,CAAMT,UAAU,OAAOU,GAAG,KAA1B,cAIA5C,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,oBACblC,EAAAxD,EAAAyD,cAAA,SACErC,KAAK,OACLsE,UAAU,SACVf,MAAOrC,EACPuD,SAAUxB,EACVuB,YAAY,EACZD,YAAY,SACZuV,OAAQH,KAIZvX,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,cAEblC,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,cACVnC,MAAOyX,EACPhV,QAAS,WACPV,EAAKqV,WAAW,YAGlBnX,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,OACV3B,IAAI,GACJF,IAAI,2EAKRL,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,cACVnC,MAAOyX,EACPhV,QAAS,WACPV,EAAKqV,WAAW,SAAWlZ,aAAauF,QAAQ,SAGlDxD,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,OACV3B,IAAI,GACJF,IAAI,yDAKRL,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,mBACVnC,MAAOyX,EACPhV,QAASpF,KAAKga,oBAEdpX,EAAAxD,EAAAyD,cAAA,OACEiC,UAAU,OACV3B,IAAI,GACJF,IAAI,wDAEL0V,GAAsB/V,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,mBA1J/Be,aAmKNC,eAAW2S,ICtKpB8B,sNACJ3P,YAAc,WAAM,IAAAlD,EAEQ/D,EAAKU,MAAvBC,EAFUoD,EAEVpD,QAASvD,EAFC2G,EAED3G,KACjBuD,EAAQC,KAAR,SAAAkD,OAAsB1G,EAAKC,8EAGpB,IACCD,EAASf,KAAKqE,MAAdtD,KACR,OACE6B,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,cAAcM,QAASpF,KAAK4K,aACxC7J,EAAKE,aAXW4E,cAiBnB2U,8MACJ5P,YAAc,WACZjM,QAAQC,IAAI,mBADM,IAAA6b,EAEW/V,EAAKL,MAA1BC,EAFUmW,EAEVnW,QAASiH,EAFCkP,EAEDlP,QACjBjH,EAAQC,KAAR,iBAAAkD,OAA8B8D,EAAQmP,iFAG/B,IACCnP,EAAYvL,KAAKqE,MAAjBkH,QACR,OACE3I,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YAAYM,QAASpF,KAAK4K,aAAzC,IACIW,EAAQmP,cAXU7U,aAiBtB8U,8MAGJC,SAAW,SAACC,EAAKC,EAAOC,GACtB,MAAiB,SAAVD,EACHD,EACGrP,MAAM,EAAGuP,GACThT,IAAI,SAAAhH,GAAI,OACP6B,EAAAxD,EAAAyD,cAACmY,GAAD,CACEja,KAAMA,EACNuD,QAAS2G,EAAK5G,MAAMC,QACpBG,IAAK1D,EAAKC,OAGhB6Z,EACGrP,MAAM,EAAG,GACTzD,IAAI,SAAAwD,GAAO,OACV3I,EAAAxD,EAAAyD,cAACoY,GAAD,CACE1P,QAASA,EACTjH,QAAS2G,EAAK5G,MAAMC,QACpBG,IAAK8G,EAAQvK,gFAKhB,IAAAgJ,EACiBhK,KAAKqE,MAArB3C,EADDsI,EACCtI,MAAOf,EADRqJ,EACQrJ,KACPia,EAAa5a,KAAb4a,SAER,GAAIlZ,EAAM2I,QAAU,EAClB,OAAOzH,EAAAxD,EAAAyD,cAAA,YAGT,GAAIlC,EAAM,KAEAI,EAAkBJ,EAAlBI,KAAMwK,EAAY5K,EAAZ4K,QAEd,OAAIxK,EAAK,IAAMwK,EAAQ,GAGnB3I,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,aAAa8V,EAAS7Z,EAAM,OAAQ,IACnD6B,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,aAAa8V,EAASrP,EAAS,OAAQ,MAInDxK,EAAK,KAAOwK,EAAQ,GAG3B3I,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YAAYnC,MAAO,CAAEH,OAAQ,UACzCoY,EAAS7Z,EAAM,OAAQ,OAKtBA,EAAK,IAAMwK,EAAQ,GAG3B3I,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YAAYnC,MAAO,CAAEH,OAAQ,UACzCoY,EAASrP,EAAS,OAAQ,MASjC3I,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,eACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,QACblC,EAAAxD,EAAAyD,cAAA,OAAKiC,UAAU,YAAf,eAMR,OAAOlC,EAAAxD,EAAAyD,cAAA,mBAjFYgD,aAsFVC,eAAW6U,ICrEXO,8MAhDbzc,MAAQ,CACNiD,MAAO,GACPyZ,QAAU,QAGZ1X,aAAe,SAAAC,GACbC,EAAKC,SACH,CAAClC,MAAOgC,EAAEG,OAAOE,OACjB,WAAYJ,EAAKlF,MAAMiD,MAAM2I,QAAU,GAAG1G,EAAKyX,WAAWzX,EAAKlF,MAAMiD,YAIzEyY,WAAa,WACXhW,WAAY,WACVR,EAAKC,SAAS,CACZlC,MAAQ,MAEV,QAGJ0Z,WAAaC,oBAAQ,eAAArc,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAC,EAAMoC,GAAN,IAAAyZ,EAAA,OAAAhc,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEC,IAAM2B,KAAK,eAAgB,CAAEI,MAAOA,IADtC,OACdyZ,EADc3b,EAAAM,KAEpB6D,EAAKC,SAAS,CACZuX,QAAUA,EAAQxa,OAHA,wBAAAnB,EAAAO,SAAAT,EAAAU,SAAD,gBAAAiS,GAAA,OAAAjT,EAAAiB,MAAAD,KAAAE,YAAA,GAKlB,6EAGM,IAAAwH,EACgB1H,KAAKqE,MAApB6V,EADDxS,EACCwS,OAAQ1U,EADTkC,EACSlC,GACR9D,EAAU1B,KAAKvB,MAAfiD,MAER,OACEkB,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACyY,GAAD,CACEpB,OAAQA,EACR1U,GAAIA,EACJ9D,MAAOA,EACP+B,aAAczD,KAAKyD,aACnB0W,WAAYna,KAAKma,WACjBnZ,GAAIqI,OAAOxI,aAAauF,QAAQ,SAElCxD,EAAAxD,EAAAyD,cAAC0Y,GAAD,CAAY5a,KAAMX,KAAKvB,MAAM0c,QAASzZ,MAAOA,YA3CvBmE,aCsBf2V,oLApBX,IAAMxa,EAAKH,aAAauF,QAAQ,MAChC,OACExD,EAAAxD,EAAAyD,cAAA,WAEW,OAAP7B,EAAe4B,EAAAxD,EAAAyD,cAAC4Y,GAAD,CAAiBvB,QAAQ,EAAM1U,GAAE,SAAAiC,OAAWzG,KAAa4B,EAAAxD,EAAAyD,cAAC4Y,GAAD,CAAiBvB,QAAQ,EAAO1U,GAAG,QAC7G5C,EAAAxD,EAAAyD,cAAC6Y,EAAA,EAAD,KACE9Y,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnV,IACjC/D,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOE,KAAK,wBAAwBC,UAAWtM,KAC/C5M,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOE,KAAK,gBAAgBC,UAAWC,KACvCnZ,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWnK,KAChC/O,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWE,KACnCpZ,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWvE,KAC/B3U,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWnE,KAC/B/U,EAAAxD,EAAAyD,cAAC8Y,EAAA,EAAD,CAAOG,UAAWpM,cAfV7J,aCEZoW,+LAEqBjc,KAAKqE,MAArBgC,aACMlG,yCAGN,IACCY,EAASf,KAAKqE,MAAdtD,KACR,OACI6B,EAAAxD,EAAAyD,cAACqZ,GAAD,CAAKnb,KAAMA,WATQ8E,aAcZC,eAAWS,YACxB,SAAA9H,GAAK,MAAK,CACRsC,KAAOtC,EAAM0B,MAAMY,OAErB,SAAAyF,GAAQ,MAAK,CACXH,aAAeI,YAAmBC,EAAaF,KALzBD,CAOxB0V,KCTaE,GAXF,WACX,IAAMC,EAAQja,IACd,OACES,EAAAxD,EAAAyD,cAACwZ,EAAA,EAAD,CAAUD,MAAOA,GACfxZ,EAAAxD,EAAAyD,cAACyZ,EAAA,EAAD,KACE1Z,EAAAxD,EAAAyD,cAAC0Z,GAAD,gBCRRrV,IAASsV,OAAO5Z,EAAAxD,EAAAyD,cAAC4Z,GAAD,MAAUzV,SAASC,eAAe,S3CcnC,WACb,GAA6C,kBAAmBjJ,UAAW,CAGzE,GADkB,IAAI0e,IAAIC,GAAwBjf,OAAOC,UAC3Cif,SAAWlf,OAAOC,SAASif,OAIvC,OAGFlf,OAAO4Y,iBAAiB,OAAQ,WAC9B,IAAMvY,EAAK,GAAA0J,OAAMkV,GAAN,sBAEPnf,GAiDV,SAAiCO,GAE/B8e,MAAM9e,GACHI,KAAK,SAAA2e,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASvM,QAAQ3Q,IAAI,gBAAgBod,QAAQ,cAG7Chf,UAAUC,cAAcgf,MAAM9e,KAAK,SAAAC,GACjCA,EAAa8e,aAAa/e,KAAK,WAC7BT,OAAOC,SAASwf,aAKpBrf,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEArEAwe,CAAwBrf,GAIxBC,UAAUC,cAAcgf,MAAM9e,KAAK,WACjCQ,QAAQC,IACN,+GAMJd,EAAgBC,M2CzCxBsf,uBCPAC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.c3711767.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createAction, handleActions} from 'redux-actions'\r\nimport {pender} from 'redux-pender'\r\nimport axios from 'axios'\r\n\r\nconst checkLogin = async () => await axios.get('/auth/login')\r\n\r\nconst LOGIN = 'login/LOGIN'\r\n\r\nexport const login = createAction(LOGIN,checkLogin)\r\n\r\nconst initialState = {\r\n  user : null,\r\n  id : null\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n  ...pender({\r\n    type : LOGIN,\r\n    onSuccess : (state,action) =>{\r\n      const { data } = action.payload\r\n      \r\n      \r\n      localStorage.setItem('id', data.user.id)\r\n      localStorage.setItem('nick', data.user.nick)\r\n      localStorage.setItem(\"pic\", data.user.pic)\r\n\r\n      // localStorage.id = data.user.id\r\n      // localStorage.nick = data.user.nick\r\n      \r\n      return {user : data.user}\r\n      // return {user : 'asdasd'}\r\n    }\r\n  })\r\n},initialState)","import {createAction, handleActions} from 'redux-actions'\r\nimport {pender} from 'redux-pender'\r\nimport axios from 'axios'\r\n\r\n// 뒤에 img 흠..\r\nexport const submitPost = (content,img) => axios.post('/post', {content, img})\r\n\r\nconst CHANGE = 'post/CHANGE'\r\nconst SUBMIT = 'post/SUBMIT'\r\n\r\nexport const change = createAction(CHANGE)\r\nexport const submit = createAction(SUBMIT,submitPost)\r\n\r\nconst initialState = {\r\n  input : '',\r\n  postedId : ''\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n  [CHANGE] : (state,action) => {\r\n    const {payload : input} = action\r\n    return ({input})\r\n  },\r\n  ...pender({\r\n    type : SUBMIT,    \r\n    onSuccess : (state,action) =>{\r\n      const {id} = action.payload.data\r\n      return ({postedId : id})\r\n    }\r\n  })\r\n},initialState)","import { createStore, applyMiddleware, compose, combineReducers} from 'redux'\r\nimport penderMiddleware from 'redux-pender'\r\nimport * as modules from './modules'\r\n\r\nconst reducers = combineReducers(modules)\r\nconst middleWares = [penderMiddleware()]\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancer = devtools || compose\r\n\r\nconst configure = () => createStore(reducers, composeEnhancer(applyMiddleware(...middleWares)))\r\nexport default configure","import React from \"react\";\r\nimport spinner from \"./puff.svg\";\r\n\r\nconst Spinner = ({ width, height, pw, ph }) => {\r\n  const style = { width: width, height: height};\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: pw,\r\n        height: ph,\r\n        \r\n      }}\r\n    >\r\n      <img src={spinner} style={style} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"lib/Spinner\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoading: false,\r\n    error: false\r\n  };\r\n\r\n  ref = null;\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  tryLogin = async () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    const { email, password } = this.state;\r\n    const result = await axios.post(\"/auth/login\", { email, password });\r\n    \r\n    if (result.data === \"failure\") {\r\n      // 시각적 효과를 위함\r\n      setTimeout( () => {\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\",\r\n          isLoading: false,\r\n          error: true\r\n        });\r\n        this.ref.focus();\r\n      }, 200)            \r\n    } else {            \r\n      localStorage.setItem(\"id\", result.data.id)\r\n      localStorage.setItem(\"nick\", result.data.nick)\r\n      localStorage.setItem(\"pic\", result.data.pic)\r\n\r\n      this.setState({ isLoading: false });\r\n      this.props.history.push(\"/feed\");\r\n    }\r\n  };\r\n\r\n  handleEnter = e => {\r\n    if (e.key === \"Enter\") this.tryLogin();\r\n  };\r\n\r\n  render() {\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if (this.state.isLoading)\r\n      return (\r\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\r\n      );\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"inner\">\r\n          <h2>Koostagram</h2>\r\n          \r\n          <div>\r\n            <p>\r\n              <input\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                spellCheck={false}\r\n                className=\"input\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                ref={ref => (this.ref = ref)}\r\n              />\r\n            </p>\r\n            <p>\r\n              <input\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"input\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                onKeyPress={this.handleEnter}\r\n              />\r\n            </p>\r\n\r\n            <p style={{textAlign:\"center\"}}>              \r\n              <input\r\n                className=\"submit\"\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                onClick={this.tryLogin}\r\n              />\r\n            </p>\r\n            {this.state.error ? (\r\n              <div className=\"error-message\">\r\n                id 혹은 비밀번호가 일치하지 않습니다.\r\n              </div>\r\n            ) : null}\r\n\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                paddingBottom: \"20px\",\r\n                paddingTop: \"20px\"\r\n              }}\r\n            >\r\n              If you don't have account...\r\n            </div>\r\n            <p style={{textAlign:\"center\"}}>   \r\n              <Link to=\"/register\">\r\n                <input className=\"submit\" type=\"button\" value=\"New Account\" />\r\n              </Link>\r\n            </p>\r\n\r\n            <p style={{textAlign:\"center\"}}>   \r\n              <input\r\n                className=\"submit\"\r\n                type=\"submit\"\r\n                // value=\"KaKao Login\"\r\n                value=\"Now Beta..\"\r\n                style={{ background: \"#fcd411\" }}\r\n                disabled\r\n                onClick={async () => {\r\n                  axios.post(\"/auth/kakao\");\r\n                  // await axios.post('/post/sk')\r\n                  // console.log(1)\r\n                }}\r\n              />\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"left-box\">\r\n          <img\r\n            className=\"img\"\r\n            src=\"https://www.parisapartment7eme.com/eiffelcam/etandmoonb.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\nimport * as loginActions from 'store/modules/login'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport Login from 'components/main/Login'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass LoginContainer extends Component {\r\n  \r\n  constructor(props){\r\n    super(props)            \r\n    if(localStorage.getItem(\"id\")){      \r\n      \r\n      // this.props.history.push(`/user/${user.id}`)    \r\n      this.props.history.push('/feed')\r\n      return  \r\n    }    \r\n  }  \r\n  \r\n  componentDidMount() {\r\n    const {LoginActions} = this.props\r\n    LoginActions.login();    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Login />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(withRouter(LoginContainer))","import React from 'react';\r\nimport LoginContainer from 'containers/main/LoginContainer';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div>\r\n      <LoginContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ModalPortal = ({ children }) => {\r\n  const el = document.getElementById(\"modal\");\r\n  return ReactDOM.createPortal(children, el);\r\n};\r\n\r\n\r\nclass Modal extends Component {\r\n  handleOpenModal = () => {\r\n    this.props.handleModal(true);\r\n  };\r\n  \r\n  handleCloseModal = () => {\r\n    this.props.handleModal(false);\r\n  };\r\n\r\n  showProfile = id => {\r\n    this.handleCloseModal();\r\n    this.props.history.push(`/user/${id}`);\r\n  };\r\n\r\n  render() {\r\n    // check : modal의 제목(Follower인지 Following 인지 구분)\r\n    // list : Following(Follower) 목록\r\n    // open : true일 때 모달을 열어줌\r\n    const { check, list, open } = this.props;\r\n\r\n    // first : 넘어온 list로 목록을 구성해 줌\r\n    if (open === true) {\r\n      const flist = list.map(item => {\r\n        \r\n        return (\r\n          <div\r\n            key={item.id}\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            onClick={() => {\r\n              this.showProfile(item.id);\r\n            }}\r\n            className=\"each-user\"\r\n          >\r\n            <div>\r\n              <img src={item.pic ? item.pic : \"https://myspace.com/common/images/user.png\"} className=\"img\" alt=\"\"/>\r\n            </div> \r\n            <div className=\"nick\">{item.nick}</div>            \r\n          </div>\r\n        );\r\n      });\r\n\r\n\r\n      return (\r\n        <ModalPortal>\r\n          <div className=\"modal\">\r\n            <div className=\"content\">\r\n              <center>\r\n                <h3>{check}</h3>\r\n              </center>\r\n              <div className=\"flist\">{flist}</div>\r\n              <br />\r\n              <center>\r\n                <button onClick={this.handleCloseModal} className=\"close\">Close</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </ModalPortal>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Modal);\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./Profile.scss\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../../common/Modal/Modal\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nclass Profile extends PureComponent {\r\n  state = {\r\n    nick: \"\",\r\n    buttonLabel: \"follow\",\r\n    followers: [],\r\n    following: [],\r\n    profilePic: \"\",\r\n    modal: false,\r\n    select: 0,\r\n    style: null,\r\n    isLoading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { uid } = this.props;\r\n    if (prevProps.uid !== uid) this.initializer();\r\n  }\r\n\r\n  renderModal = () => {\r\n    return <Modal open={this.state.modal} />;\r\n  };\r\n\r\n  // 초기화 함수\r\n  initializer = async () => {\r\n    this.setState({ isLoading: true }); // 읽어오기 시작!\r\n    const { userid } = this.props.match.params;\r\n    const { history, uid } = this.props;\r\n\r\n    // 버튼라벨 초기화\r\n    if (this.state.buttonLabel === \"unfollow\") {\r\n      this.setState({\r\n        buttonLabel: \"follow\"\r\n      });\r\n    }\r\n\r\n    const nick = await axios.post(\"/post/getNick\", { userid }).catch(e => {\r\n      alert(\"Wrong Request(해당 유저가 존재하지 않습니다.)\");\r\n      history.push(\"/\");\r\n    });\r\n\r\n    const [followers, following, profilePic] = await Promise.all([\r\n      axios.post(\"/post/getFollowers\", { userid }),\r\n      axios.post(\"/post/getFollowing\", { userid }),\r\n      axios.post(\"/post/getUserPic\", { userid })\r\n    ])\r\n\r\n    // const followers = await axios.post(\"/post/getFollowers\", { userid });\r\n    // const following = await axios.post(\"/post/getFollowing\", { userid });\r\n    // const profilePic = await axios.post(\"/post/getUserPic\", { userid });\r\n\r\n    this.setState({ isLoading: false }); // 읽어오기 완료!\r\n\r\n    // 자기 프로필 일 때만 커서를 pointer로 해서 edit 하기 위함\r\n    let style = null;\r\n    if (Number(localStorage.getItem(\"id\"))) {\r\n      style =\r\n        Number(uid) === Number(localStorage.getItem(\"id\"))\r\n          ? { cursor: \"pointer\" }\r\n          : null;\r\n    }\r\n\r\n    this.setState({\r\n      nick: nick.data,\r\n      followers: followers.data.filter(item => item.id !== Number(userid)),\r\n      following: following.data.filter(item => item.id !== Number(userid)),\r\n      profilePic: profilePic.data,\r\n      style: style\r\n    });\r\n    this.checkFollow();\r\n  };\r\n\r\n  checkFollow = () => {    \r\n    const { followers } = this.state;\r\n\r\n    if (Number(localStorage.getItem('id'))) {\r\n      followers.forEach(item => {\r\n        if (item.id === Number(localStorage.getItem(\"id\"))) {\r\n          this.setState({\r\n            buttonLabel: \"unfollow\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // 프로필의 follow(unfollow)버튼 클릭했을 때의 액션\r\n  handleFollow = e => {\r\n    const { userid } = this.props.match.params;\r\n    const { followers, buttonLabel } = this.state;\r\n\r\n    if (buttonLabel === \"follow\") {\r\n      axios.post(\"/post/follow\", {\r\n        followid: Number(localStorage.getItem(\"id\")),\r\n        userid\r\n      });\r\n      this.setState({\r\n        buttonLabel: \"unfollow\",\r\n        followers: followers.concat({\r\n          id: Number(localStorage.getItem(\"id\")),\r\n          nick: localStorage.getItem(\"nick\"),\r\n          pic: localStorage.getItem(\"pic\")\r\n        })\r\n      });\r\n    } else {\r\n      axios.post(\"/post/unfollow\", {\r\n        followid: Number(localStorage.getItem(\"id\")),\r\n        userid\r\n      });\r\n      this.setState({\r\n        buttonLabel: \"follow\",\r\n        followers: followers.filter(\r\n          item => item.id !== Number(localStorage.getItem(\"id\"))\r\n        )\r\n      });\r\n    }\r\n  };\r\n\r\n    // Follower와 관련된 modal을 열어줌\r\n  showFollowerModal = e => {\r\n    this.setState({\r\n      modal: true,\r\n      select: 0\r\n    });\r\n  };\r\n\r\n  // Following과 관련된 modal을 열어줌\r\n  showFollowingModal = e => {\r\n    this.setState({\r\n      modal: true,\r\n      select: 1\r\n    });\r\n  };\r\n\r\n  // modal 열기/닫기\r\n  handleModal = bool => {\r\n    this.setState({\r\n      modal: bool\r\n    });\r\n  };\r\n\r\n  // 본인의 page일 때만 프로필사진 편집이 가능하게 구현, 남의 page에선 동작 X\r\n  editProfile = () => {\r\n    const { uid, history } = this.props;\r\n    if (Number(uid) === Number(localStorage.getItem(\"id\"))) {\r\n      history.push(\"/edit\");\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { userid } = this.props.match.params;\r\n\r\n    const {\r\n      followers,\r\n      following,\r\n      buttonLabel,\r\n      nick,\r\n      modal,\r\n      select,\r\n      profilePic,\r\n      style,\r\n      isLoading\r\n    } = this.state;\r\n\r\n    // 로딩시 puff 보여주기\r\n    if (isLoading) {\r\n      let ph;\r\n      window.innerWidth > 676 ? (ph = \"240px\") : (ph = \"310px\");\r\n      const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n      return (\r\n        <div className=\"profile\">\r\n          <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph={ph} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let fontstyle;\r\n    if (window.innerWidth < 450 && nick.length >= 8) {\r\n      fontstyle = { fontSize: \"1rem\", fontWeight: \"800\" };\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        {select ? (\r\n          <Modal\r\n            open={modal}\r\n            handleModal={this.handleModal}\r\n            check=\"Following\"\r\n            list={following}\r\n          />\r\n        ) : (\r\n          <Modal\r\n            open={modal}\r\n            handleModal={this.handleModal}\r\n            check=\"Followers\"\r\n            list={followers}\r\n          />\r\n        )}\r\n        <div className=\"profile-pic\" onClick={this.editProfile} style={style}>\r\n          <img\r\n            src={\r\n              profilePic\r\n                ? profilePic\r\n                : \"https://myspace.com/common/images/user.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"user-detail\">\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div>\r\n              <div className=\"nick\" style={fontstyle}>\r\n                {nick ? \"\" + nick : \"loading...\"}\r\n              </div>{\" \"}\r\n              <br />\r\n              {!localStorage.getItem(\"id\") ||\r\n              userid === localStorage.getItem(\"id\") ? null : (\r\n                <input\r\n                  type=\"button\"\r\n                  value={buttonLabel}\r\n                  onClick={this.handleFollow}\r\n                  className=\"follow-button\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"show-follow\" onClick={this.showFollowerModal}>\r\n              {followers.length} <br />\r\n            </div>\r\n            Followers\r\n          </div>\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"show-follow\" onClick={this.showFollowingModal}>\r\n              {following.length} <br />\r\n            </div>\r\n            Following\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"../../components/user/Profile/Profile\";\r\nimport * as loginActions from 'store/modules/login'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\n\r\nclass ProfileContainer extends Component {\r\n  render() {        \r\n    return (\r\n      <div>\r\n        <Profile\r\n          user={this.props.user}\r\n          uid={this.props.uid}\r\n          match={this.props.match}   \r\n          history={this.props.history}       \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user: state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(ProfileContainer);\r\n","import React, { Component } from \"react\";\r\nimport \"./Posts.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nclass Post extends Component {\r\n  \r\n  handleClick = (e) => {\r\n    const {item, history} = this.props\r\n    history.push(`/user/${item.userId}/${item.id}`)\r\n  };\r\n\r\n  render() {\r\n    const {item} = this.props\r\n    return (\r\n        <img\r\n          src={item.img}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          alt=\"\"\r\n          onClick={this.handleClick}        \r\n        />      \r\n    );\r\n  }\r\n}\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    posts: [\"noPost\"],    \r\n    isLoading : false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer()\r\n  }\r\n\r\n  initializer = () => {\r\n    const { userid } = this.props.match.params;\r\n    this.setState({isLoading : true})\r\n    axios.post(\"/post/getPosts\", { userid }).then(posts => {\r\n      this.setState({\r\n        posts: posts.data.reverse(),\r\n        isLoading : false\r\n      })\r\n    });\r\n  } \r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.uid !== this.props.uid)  this.initializer();\r\n  }\r\n  \r\n  render() {\r\n    const { posts, isLoading } = this.state;\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if(isLoading) {\r\n      return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"60vh\"/>\r\n    }\r\n  \r\n\r\n    // loading , check no post\r\n    if (posts[0] === \"noPost\") {\r\n      return null\r\n    } else if (posts.length === 0) {\r\n      return <div className=\"no-post\">No post </div>;\r\n    }\r\n\r\n    // TODO : delete index(key) when deploy(선택사항)\r\n    const list = posts.map((item, index) => (\r\n      <Post src={item.img} key={index} item={item} history={this.props.history} />\r\n    ));\r\n    //console.log(posts)\r\n    return (\r\n      <center>\r\n        <div className=\"posts\">{list}</div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Posts);","import React from 'react';\r\nimport ProfileContainer from 'containers/user/ProfileContainer';\r\nimport Posts from 'components/user/Posts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport './UserPage.scss'\r\n\r\nconst UserPage = ({match, history}) => {\r\n  const { userid : uid } = match.params;\r\n  return (\r\n    <div className=\"userpage-container\">\r\n      <ProfileContainer uid={uid} match={match} history={history}/>\r\n      <Posts uid={uid}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserPage)","import React, { Component } from 'react';\r\n\r\nclass Hashtag extends Component {\r\n  render() {\r\n    const { history, hashtag } = this.props;\r\n    return (\r\n      <div\r\n        className=\"hashed\"\r\n        onClick={() => {\r\n          history.push(`/feed?hashtag=${hashtag.slice(1)}`);\r\n        }}\r\n      >\r\n        {hashtag}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hashtag;\r\n","import React, { Component } from \"react\";\r\nimport \"./Mention.scss\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Mention extends Component {\r\n  state = {\r\n    isExist: true,\r\n    id: null,\r\n    \r\n  };\r\n\r\n  async componentDidMount() {\r\n    const nick = this.props.mention.slice(1);\r\n    const exist = await axios.post(\"/post/getIdByNick\", { nick });\r\n    if (exist.data.id) {      \r\n      this.setState({        \r\n        id: exist.data.id,        \r\n      })\r\n    }else{\r\n      this.setState({\r\n        isExist : false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { history } = this.props;\r\n    if(this.state.isExist && this.state.id) history.push(`/user/${this.state.id}`);\r\n  };\r\n\r\n  render() {\r\n    const { mention } = this.props;\r\n    const className = this.state.isExist ? \"mention\" : null;\r\n\r\n      return (\r\n        <div className={className} onClick={this.handleClick}>\r\n          {mention}\r\n        </div>\r\n      );      \r\n  }\r\n}\r\n\r\nexport default Mention;\r\n","import React, { Component } from \"react\";\r\nimport \"./EachComment.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport Mention from \"../Mention/Mention\";\r\n\r\nclass EachComment extends Component {\r\n  state = {\r\n    id: null,\r\n    tk: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const link = await axios.post(\"/post/getIdByNick\", {\r\n      nick: this.props.usernick\r\n    });\r\n    this.setState({\r\n      id: link.data.id\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { history } = this.props;\r\n    const { id } = this.state;\r\n    id && history.push(`/user/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { content, usernick } = this.props;\r\n    let withHT;\r\n    if (content) {\r\n      withHT = content.split(/\\s+/); // space or newline으로 나눠줌\r\n      withHT = withHT.map(item => {\r\n        // console.log(item)\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />\r\n            </div>\r\n          );\r\n        } else if (item[0] === \"@\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Mention mention={item} history={this.props.history} match={this.props.match}/>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"each-comment\">\r\n        <div onClick={this.handleClick} className=\"nick-area\">\r\n          {usernick} &nbsp;{\" \"}\r\n        </div>\r\n        <div className=\"test2\"> {withHT}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EachComment);\r\n","import React, { Component } from \"react\";\r\nimport \"./Comment.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EachComment from \"../EachComment/EachComment\";\r\nimport Modal from \"../../common/Modal/Modal\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\n\r\nconst unlike =\r\n  \"https://cdn1.iconfinder.com/data/icons/valentine-s-day-simplicity/512/empty_heart-512.png\";\r\nconst like =\r\n  \"https://cdn1.iconfinder.com/data/icons/love-icons/512/love-heart-512.png\";\r\n\r\n// TODO : this.props.nick은 댓글 작성할 때 쓸 것\r\nclass Comment extends Component {\r\n  state = {\r\n    like: unlike,\r\n    likeCount: 0,\r\n    comment: \"\",\r\n    commentsBefore: null,\r\n    modal: false,\r\n    likers: [],\r\n    isloading: false\r\n  };\r\n\r\n  // likeUsers에 좋아요 누른 애들 정보 들어있음\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.token1 !== this.props.token1 ||\r\n      prevProps.token2 !== this.props.token2\r\n    )\r\n      this.initializer();\r\n  }\r\n\r\n  initializer = async () => {\r\n    this.setState({ isloading: true });\r\n    const { postid } = this.props.match.params;\r\n\r\n    const likeUsers = await axios.post(\"/post/getLikeCount\", { postid });\r\n    const commentsBefore = await axios.post(\"/post/getComments\", { postid });\r\n\r\n    this.setState({\r\n      likeCount: likeUsers.data.length,\r\n      commentsBefore: commentsBefore.data,\r\n      likers: likeUsers.data\r\n    });\r\n\r\n    if (localStorage.getItem(\"id\")) {\r\n      likeUsers.data.forEach(item => {\r\n        if (item.id === Number(localStorage.getItem(\"id\"))) {\r\n          this.setState({\r\n            like: like\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this.setState({ isloading: false });\r\n  };\r\n\r\n  // 댓글 등록 후 실시간으로 업데이트 시키기, 댓글 등록후 스크롤 맨 아래로 내려서 본인이 등록한 댓글 확인\r\n  updateComment = async () => {\r\n    const { postid } = this.props.match.params;\r\n    const commentsBefore = await axios.post(\"/post/getComments\", { postid });\r\n    this.setState(\r\n      {\r\n        commentsBefore: commentsBefore.data\r\n      },\r\n      () => {\r\n        document.getElementById(\"cl\").scrollTop = document.getElementById(\r\n          \"cl\"\r\n        ).scrollHeight;\r\n      }\r\n    );\r\n  };\r\n\r\n  // 좋아요 버튼이 눌릴 때 좋아요 및 좋아요 취소\r\n  handleLikeClick = () => {\r\n    const { postid } = this.props.match.params;\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"Login 후에 시도해 주세요.\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.like === unlike) {\r\n      this.setState({\r\n        like: like,\r\n        likeCount: this.state.likeCount + 1\r\n      });\r\n      axios.post(\"/post/like\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    } else {\r\n      this.setState({\r\n        like: unlike,\r\n        likeCount: this.state.likeCount - 1\r\n      });\r\n      axios.post(\"/post/unlike\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCommentChange = e => {\r\n    this.setState({\r\n      comment: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    const { postid } = this.props.match.params;\r\n    const { comment } = this.state;\r\n\r\n    let re = [];\r\n    try {\r\n      re = comment.match(/#[^\\s]*/g).filter(item => item.length >= 14);\r\n    } catch (e) {\r\n      // console.log(e)\r\n      re = [];\r\n    }\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"먼저 로그인해 주세요.\");\r\n      return;\r\n    }\r\n    if (comment.length >= 50) {\r\n      alert(\"댓글은 50자 이내로 입력해 주세요.\");\r\n      return;\r\n    }\r\n    if (comment.match(/#.*\\S#/g)) {\r\n      alert(\"해쉬태그는 연결해서 등록할수 없어요!\");\r\n      return;\r\n    } else if (re[0]) {\r\n      alert(\"14자가 넘는 해쉬태그가 존재합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (!comment) {\r\n      alert(\"내용을 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    await axios.post(\"/post/uploadComment\", {\r\n      content: comment,\r\n      postid,\r\n      usernick: localStorage.getItem(\"nick\")\r\n    });\r\n\r\n    this.setState({\r\n      comment: \"\"\r\n    });\r\n    this.updateComment();\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") this.handleSubmit();\r\n  };\r\n\r\n  showLikers = () => {\r\n    this.setState({\r\n      modal: true\r\n    });\r\n  };\r\n\r\n  // modal 열기/닫기\r\n  handleModal = bool => {\r\n    this.setState({\r\n      modal: bool\r\n    });\r\n  };\r\n\r\n  timeConversion = millisec => {\r\n    const seconds = (millisec / 1000).toFixed(0);\r\n    const minutes = (millisec / (1000 * 60)).toFixed(0);\r\n    const hours = (millisec / (1000 * 60 * 60)).toFixed(0);\r\n\r\n    if (seconds < 60) {\r\n      return (seconds ? seconds + \" sec ago\": \"방금 전\") \r\n    } else if (minutes < 60) {\r\n      return minutes + \" min ago\";\r\n    } else if (hours < 24) {\r\n      return hours + \" hrs ago\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { previewCount, createdAt } = this.props;\r\n    const { commentsBefore, modal, isloading } = this.state;\r\n\r\n    if (isloading) {\r\n      return <Spinner width=\"50px\" height=\"50px\" pw=\"100%\" ph=\"150%\" />;\r\n    }\r\n\r\n    let postTime = null;\r\n    if (createdAt) {\r\n      const writtenDate = createdAt.substr(0, 10);\r\n      const nowDate = new Date().toISOString().substr(0, 10);\r\n\r\n      // n시간 전\r\n      if (writtenDate === nowDate) {\r\n        postTime = this.timeConversion(new Date() - Date.parse(createdAt));\r\n      } else {\r\n        postTime = writtenDate;\r\n      }\r\n    }\r\n\r\n    let list =\r\n      commentsBefore &&\r\n      commentsBefore.map(item => {\r\n        return (\r\n          <EachComment\r\n            content={item.content}\r\n            usernick={item.usernick}\r\n            key={item.id}\r\n            match={this.props.match}\r\n          />\r\n        );\r\n      });\r\n\r\n    if (list !== null && list.length === 0) list = \"첫 코멘트를 입력해주세요!\";\r\n\r\n    return (\r\n      <div className=\"comment\">\r\n        <Modal\r\n          open={modal}\r\n          handleModal={this.handleModal}\r\n          check=\"Likers\"\r\n          list={this.state.likers}\r\n        />\r\n        <div>\r\n          <div className=\"like-wrap\">\r\n            <div>\r\n              <img\r\n                style={{ cursor: \"pointer\" }}\r\n                src={this.state.like}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                onClick={this.handleLikeClick}\r\n              />\r\n              <span className=\"show-likers\" onClick={this.showLikers}>\r\n                &nbsp;{this.state.likeCount} likes\r\n              </span>\r\n            </div>\r\n            <div className=\"sk-requirement\">\r\n              <img\r\n                src=\"https://cdn3.iconfinder.com/data/icons/glyph/141/Alarm-Clock-512.png\"\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n              />\r\n              <span>{postTime}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"comments-list\" id=\"cl\">\r\n          {list}\r\n        </div>\r\n\r\n        {previewCount >= 5 ? (\r\n          <div>\r\n            <div className=\"comment-write\">\r\n              <input\r\n                value={this.state.comment}\r\n                onChange={this.handleCommentChange}\r\n                onKeyPress={this.handleKeyPress}\r\n                className=\"comment-input\"\r\n                placeholder=\"Your Comment\"\r\n                spellCheck={false}\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                value=\"Submit\"\r\n                onClick={this.handleSubmit}\r\n                className=\"comment-submit\"\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Comment);\r\n","import React, { Component } from \"react\";\r\nimport Comment from \"../../components/post/Comment/Comment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CommentContainer extends Component {\r\n  render() {\r\n    const { user, previewCount, createdAt } = this.props;\r\n    // console.log(user);\r\n    return (\r\n      <div style={{ height: \"36%\" }}>\r\n        <Comment  user={user} previewCount={previewCount} token1={this.props.token1} token2={this.props.token2} createdAt={createdAt}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(CommentContainer);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PostTemplate.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CommentContainer from \"../../../containers/user/CommentContainer\";\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\nimport Mention from \"../Mention/Mention\";\r\n\r\n\r\nclass PostTemplate extends Component {\r\n  state = {\r\n    img: null,\r\n    content: null,\r\n    nick: null,\r\n    createdAt : null\r\n  };\r\n\r\n\r\n  async componentDidMount() {\r\n    this.initializer()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if( (prevProps.token1 !== this.props.token1)  || (prevProps.token2 !== this.props.token2) ) this.initializer()\r\n  }\r\n  \r\n\r\n  initializer = async () => {\r\n    const { userid, postid } = this.props.match.params;\r\n\r\n    // 게시글 가져오기 실패는 빈 배열이라도 리턴해 주니까 catch가 아닌 이런 방식으로 해야함\r\n    const post = await axios.post(\"/post/getSinglePost\", { postid });\r\n    if (!post.data) {\r\n      alert(\"해당 게시글이 존재하지 않습니다.\");\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n\r\n    // nick은 가져오기 실패시 catch로 디버깅\r\n    const user = await axios.post(\"/post/getNick\", { userid }).catch(e => {\r\n      alert(\"해당 유저가 존재하지 않습니다.\");\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    });\r\n\r\n    \r\n    this.setState({\r\n      img: post.data.img,\r\n      content: post.data.content,\r\n      nick: user.data,\r\n      createdAt : post.data.createdAt\r\n    });\r\n  }\r\n\r\n  handleDelete = async () => {\r\n    const { postid, userid } = this.props.match.params;\r\n    const { history } = this.props;\r\n\r\n    if (window.confirm(\"삭제하시겠습니까?\")) {\r\n      await axios.post(\"/post/deletePost\", { postid });      \r\n      history.push(`/user/${userid}`);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    const { img, content, createdAt } = this.state;\r\n    const { userid } = this.props.match.params;\r\n    const { history } = this.props;\r\n\r\n\r\n\r\n\r\n    // 본문의 hashtag부분을 해당 해쉬태그 검색과 연결시키는 부분, string형태의 본문을 재구성하여 해쉬태그부분을 차별화\r\n    let contentWithHashtag;\r\n    if (content) {\r\n      contentWithHashtag = content.split(/\\s+/);      // space or newline으로 나눠줌\r\n      contentWithHashtag = contentWithHashtag.map((item) => {\r\n        // console.log(item)\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />              \r\n            </div>\r\n          );\r\n        }else if (item[0] === \"@\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Mention mention={item} history={this.props.history} match={this.props.match}/>              \r\n            </div>\r\n          );\r\n        }\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    if (!img) {\r\n      return (\r\n        <div className=\"loading\">\r\n          <Spinner width=\"100px\" height=\"100px\" pw=\"10%\" ph=\"10vh\"/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"post-template\">\r\n        <div className=\"pic\">\r\n          <img src={img} alt=\"\" />\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"content\">\r\n            <div className=\"nick-with-delete-button\">\r\n              <b\r\n                className=\"nick\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  history.push(`/user/${userid}`);\r\n                }}\r\n              >\r\n                <div style={{ marginBottom: \"20px\" }}>@{this.state.nick}</div>\r\n              </b>\r\n              {(localStorage.getItem(\"id\") ? Number(localStorage.getItem('id')) : null) === Number(userid) ? (\r\n                <input\r\n                  className=\"delete-button\"\r\n                  type=\"button\"\r\n                  value=\"Delete\"\r\n                  onClick={this.handleDelete}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className=\"test2\">{contentWithHashtag}</div>\r\n            <div>{this.hashtags}</div>\r\n          </div>\r\n          <CommentContainer previewCount={5} token1={this.props.token1} token2={this.props.token2} createdAt={createdAt}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PostTemplate);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport PostTemplate from '../../components/post/PostTemplate/PostTemplate';\r\n\r\n\r\nclass PostTemplateContainer extends Component {\r\n  render() {\r\n    const { userid, postid} = this.props.match.params\r\n\r\n    return (\r\n      <div>\r\n        <PostTemplate user={this.props.user} token1={userid} token2={postid}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    user : state.login.user\r\n  })\r\n)(PostTemplateContainer)","import React from 'react';\r\n\r\nimport PostTemplateContainer from '../containers/post/PostTemplateContainer';\r\n\r\nconst EachPostPage = ({match}) => {\r\n  return (\r\n    <div>      \r\n      <PostTemplateContainer match={match}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EachPostPage;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"no-post\" style={{fontSize : \"3rem\", marginTop : \"15vh\"}}>\r\n      Page Not Found\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./WritingForm.scss\";\nimport Spinner from \"../../../lib/Spinner\";\n\nclass WritingForm extends Component {\n  state = {\n    selectedFile: null,\n    uploading: false,\n    imagePreviewUrl: null\n  };\n\n  // 제출 버튼을 누를 때, 여러가지 조건들이 만족 안되면 서버쪽으로 제출이 되지 않게 방어코드를 짜 둠.\n  handleSubmit = async data => {\n    const { history, input, onChange } = this.props;\n    const { selectedFile } = this.state;\n\n    // 정규표현식 사용\n    let re = input.match(/#[^\\s]*/g);\n    let isLinkedTagExist = input.match(/#.*\\S#/g);\n\n    /*\n      여러가지 방어코드의 경우\n        1) 파일이 선택되지 않았을 때\n        2) 본문 내용이 140자 이상\n        3) 해쉬태그의 길이가 12 이상 \n     */\n    if (!selectedFile) {\n      alert(\"사진은 필수로 첨부해주세요.\");\n      return;\n    } else if (input.length >= 140) {\n      alert(\"본문 내용은 140자 이내로 해주세요.\");\n      return;\n    } else if (re) {\n      re = re.filter(item => item.length >= 14);\n      if (re[0]) {\n        alert(\"12자가 넘는 해쉬태그가 존재합니다.\");\n        return;\n      }\n    }\n\n    // 해쉬태그가 붙어있는 경우 ex) #일상#ootd\n    if (isLinkedTagExist) {\n      alert(\"해쉬태그 간에는 공백을 넣어주세요.(space)\");\n      return;\n    }\n\n    // 확장자 검사, jpg, jpeg, png, gif만 올릴 수 있음\n    const exName = selectedFile.name.split(\".\")[selectedFile.name.split(\".\").length-1].toLowerCase()\n    if( !(exName === \"jpg\" || exName === \"jpeg\" || exName ===\"png\" || exName === \"gif\")){\n      alert(\"파일의 형식이 잘못되었습니다. jpg, png, gif파일만 업로드 가능합니다.\")\n      return\n    }\n\n    const fd = new FormData();\n    fd.append(\"img\", selectedFile, selectedFile.name); // 파일의 원본 파일이름 그대로 유지\n    fd.append(\"text\", input);\n    fd.append(\"id\", Number(localStorage.getItem(\"id\")));\n\n    const contentType = {\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    };\n\n    this.setState({ uploading: true });\n    const submit = await axios.post(\"/post\", fd, contentType);\n\n    // 제출 성공 여부 확인\n    if (submit.data === \"failure\") {\n      this.setState({ uploading: false });\n      alert(\"업로드에 실패하였습니다. 관리자에게 연락주세요.\");\n      history.push(\"/write\");\n    } else {\n      onChange(\"\");\n      history.push(`/user/${submit.data.userId}/${submit.data.id}`);\n    }\n  };\n\n  handleChange = e => {\n    const { onChange } = this.props;\n    onChange(e.target.value);\n  };\n\n  // file 선택이 바뀔 때 파일 미리보기를 제공하기 위해 만든 함수\n  handleFileChange = e => {\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        selectedFile: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n    try {\n      reader.readAsDataURL(file);\n    } catch (error) {}\n  };\n\n  render() {\n    const { input } = this.props;\n    const { imagePreviewUrl } = this.state;\n\n    // 글자수 제한 넘으면 붉은색으로 표시\n    const style = input.length < 140 ? null : { color: \"red\" };\n    const placeholder =\n      window.innerWidth > 450\n        ? \"오늘의 하루는 어떠셨나요? :)\"\n        : \"오늘의 하루는\\n어떠셨나요? :)\";\n\n    const imagePreview = imagePreviewUrl ? (\n      <img src={imagePreviewUrl} alt=\"\" />\n    ) : (\n      null\n    );\n\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\n    const imageButtonLabel = this.state.selectedFile\n      ? \"다시 고르기\"\n      : \"업로드할 사진 고르기\";\n\n    // 업로드 버튼 눌러서 업로딩으로 들어가면 스피너 띄우게\n    if (this.state.uploading)\n      return (\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\n      );\n\n    return (\n      <center>\n        <div className=\"writing-form\">\n          <div className=\"title\">Post Your Content!</div>\n          <div className=\"preview\">{imagePreview}</div>\n          <label className=\"file-wrapper\">\n            {imageButtonLabel}\n            <input\n              id=\"img\"\n              name=\"img\"\n              type=\"file\"\n              className=\"file-upload\"\n              onChange={this.handleFileChange}\n              accept=\".gif, .jpg, .png\"\n            />\n          </label>\n          <textarea\n            spellCheck={false}\n            name=\"content\"\n            placeholder={placeholder}\n            className=\"text\"\n            value={input}\n            onChange={this.handleChange}\n          />\n          <div className=\"word-count\" style={style}>\n            {input.length < 140 ? input.length + \" / 140\" : \"글자수 초과\"}\n          </div>\n\n          <input\n            type=\"button\"\n            value=\"Submit!\"\n            className=\"submit\"\n            onClick={() => {\n              this.handleSubmit(input);\n            }}\n          />\n        </div>\n      </center>\n    );\n  }\n}\n\nexport default withRouter(WritingForm);\n","import React, { Component } from \"react\";\r\nimport * as postActions from \"store/modules/post\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport WritingForm from \"../../components/writing/WritingForm/WritingForm\";\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass WritingFormContainer extends Component {\r\n  componentDidMount() {    \r\n      if(!localStorage.getItem(\"id\")) { alert(\"Please login first.\"); this.props.history.push('/');}        \r\n  }\r\n  \r\n  render() {\r\n    const { PostActions, input } = this.props;\r\n    return (\r\n      <div>\r\n        <WritingForm\r\n          input={input}          \r\n          onSubmit={PostActions.submit}          \r\n          onChange={(e)=>{PostActions.change(e)}}          \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    input: state.post.input,\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    PostActions: bindActionCreators(postActions, dispatch)\r\n  })\r\n)(withRouter(WritingFormContainer));\r\n","import WritingTemplate from './WritingTemplate';\n\nexport default WritingTemplate;\n","import React from 'react';\nimport WritingFormContainer from '../../../containers/writing/WritingFormContainer';\n\nconst WritingTemplate = () => (\n  <div>\n    <WritingFormContainer />\n  </div>\n);\n\n\nexport default WritingTemplate\n","import React from 'react';\r\nimport WritingTemplate from 'components/writing/WritingTemplate'\r\n\r\nconst WritingPage = () => {\r\n  return (\r\n    <div>\r\n      <WritingTemplate />      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingPage;","import React, { useEffect, useState } from \"react\";\r\nimport \"./RegisterForm.scss\";\r\nimport axios from \"axios\";\r\nimport { debounce } from \"lodash\";\r\n\r\n// rest url이랑, 검색어 돌릴 것\r\n// TODO : 이 함수에 debounce를 적용하면 한타이밍 늦어지는 문제 해결하기\r\nconst debounceSearch = async (url, term) => {\r\n  try {\r\n    const { data } = await axios.post(url, { input: term });\r\n    console.log(data);\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n// input 조절하기\r\nconst useInput = (defaultValue, url) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const [validity, setValidity] = useState(false); // 이메일이던, 닉네임이던, 비밀번호던 유효성\r\n\r\n  const onChange = async e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setValue(value);\r\n\r\n    // nickname의 경우 길이제한 + 중복검사\r\n    if (url === \"/auth/nickCheck\") {\r\n      const validity = await debounceSearch(url, value);\r\n      console.log(validity);\r\n      if (value.length <= 10 && value.length > 0 && validity === \"ok\") {\r\n        setValidity(true);\r\n      } else {\r\n        setValidity(false);\r\n      }\r\n\r\n      // email의 경우 정규표현식으로 형식검사 + 중복검사\r\n    } else if (url === \"/auth/emailCheck\") {\r\n      const pattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\r\n      if (pattern.test(value)) {\r\n        const validity = await debounceSearch(url, value);\r\n        console.log(validity);\r\n        validity === \"ok\" ? setValidity(true) : setValidity(false);\r\n      } else setValidity(false);\r\n    } else {\r\n      // 비밀번호의 경우 8자 이상이면 유효성검사 통과\r\n      value.length >= 8 ? setValidity(true) : setValidity(false);\r\n    }\r\n  };\r\n\r\n  return { value, onChange, validity };\r\n};\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const email = useInput(\"\", \"/auth/emailCheck\"); // email.value\r\n  const nickname = useInput(\"\", \"/auth/nickCheck\"); // nickname.value\r\n  const pw = useInput(\"\"); // password.value\r\n\r\n  console.log(nickname.value, nickname.validity);\r\n  return (\r\n    <center>\r\n      <div className=\"register-form\">\r\n        <label>Email 입력</label>\r\n        <input\r\n          className=\"input\"\r\n          id=\"1\"\r\n          {...email}\r\n          placeholder=\"email을 입력해주세요.\"\r\n          spellCheck={false}\r\n        />\r\n        {email.validity ? (\r\n          <div style={{ color: \"blue\" }}>사용가능한 이메일입니다.</div>\r\n        ) : (\r\n          <div style={{ color: \"red\" }}>\r\n            형식이 잘못되었거나 중복 이메일입니다.\r\n          </div>\r\n        )}\r\n        <label>Nickname 입력</label>\r\n        <input\r\n          className=\"input\"\r\n          {...nickname}\r\n          placeholder=\"닉네임을 입력해주세요.\"\r\n          spellCheck={false}\r\n        />\r\n        {nickname.validity ? (\r\n          <div style={{ color: \"blue\" }}>사용가능한 닉네임입니다.</div>\r\n        ) : (\r\n          <div style={{ color: \"red\" }}>사용이 불가능한 닉네임 입니다.</div>\r\n        )}\r\n        <label>Password 입력</label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"password\"\r\n          {...pw}\r\n          placeholder=\"비밀번호를 입력해주세요.\"\r\n          spellCheck={false}\r\n        />\r\n        {pw.validity ? (\r\n          <div style={{ color: \"blue\" }}>사용가능한 비밀번호입니다.</div>\r\n        ) : (\r\n          <div style={{ color: \"red\" }}>비밀번호가 너무 짧습니다.</div>\r\n        )}\r\n\r\n        <input\r\n          type=\"button\"\r\n          className=\"submit-regi\"\r\n          value=\"Submit\"\r\n          onClick={async () => {\r\n            if (email.validity && nickname.validity && pw.validity) {\r\n              const register = await axios.post(\"/auth/join\", {\r\n                email: email.value,\r\n                nick: nickname.value,\r\n                password: pw.value\r\n              });\r\n              console.log(register.data);\r\n              register.data === \"success\"\r\n                ? history.push(\"/\")\r\n                : alert(\"가입을 환영합니다!\");\r\n              history.push(\"/\");\r\n            } else {\r\n              alert(\"조건에 맞게 요소들을 작성해주세요!\");\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </center>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n\r\n// class RegisterForm extends Component {\r\n//   state = {\r\n//     email: \"\",\r\n//     nick: \"\",\r\n//     password: \"\",\r\n\r\n//     e_placeholder: \"Email을 입력해주세요\",\r\n//     n_placeholder: \"nickname 입력 및 중복검사를 해주세요.\",\r\n//     p_placeholder: \"8자이상의 비밀번호를 입력해주세요\",\r\n\r\n//     e_validity: 0,\r\n//     n_validity: 0,\r\n//     p_validity: 0,\r\n\r\n//     isLoading : false\r\n\r\n//   };\r\n\r\n//   handleChange = e => {\r\n//     if (e.target.name === \"nick\") {\r\n//       this.setState({\r\n//         [e.target.name]: e.target.value,\r\n//         n_validity: 0,\r\n//         n_placeholder: \"nickname 중복 검사를 해주세요.\"\r\n//       });\r\n//     } else if (e.target.name === \"email\") {\r\n//       this.setState({\r\n//         [e.target.name]: e.target.value,\r\n//         e_validity: 0,\r\n//         e_placeholder: \"email 검사를 해주세요.\"\r\n//       });\r\n//     } else {\r\n//       this.setState(\r\n//         {\r\n//           [e.target.name]: e.target.value\r\n//         },\r\n//         () => {\r\n//           if (this.state.password.length >= 8)\r\n//             this.setState({\r\n//               p_validity: 1,\r\n//               p_placeholder: \"사용 가능한 비밀번호 입니다.\"\r\n//             });\r\n//           else this.setState({\r\n//             p_validity: 0,\r\n//             p_placeholder : \"비밀번호가 너무 짧습니다.\"\r\n//           })\r\n//         }\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   nickCheck = async () => {\r\n//     if (this.state.nick.length <= 0) return;\r\n\r\n//     const check = await axios.post(\"/auth/nickCheck\", {\r\n//       nick: this.state.nick\r\n//     });\r\n//     console.log(check.data);\r\n//     // 중복 닉 없음\r\n//     if (check.data === \"ok\" && this.state.nick.length > 0 && this.state.nick.length <= 10) {\r\n//       this.setState({\r\n//         n_validity: 1,\r\n//         n_placeholder: \"사용 가능한 닉네임입니다.\"\r\n//       });\r\n//     } else {\r\n//       this.setState({\r\n//         n_placeholder: \"중복 닉네임 혹은 닉네임의 길이가 10자 이상입니다.\"\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   emailCheck = async () => {\r\n//     const { email } = this.state;\r\n//     const pattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\r\n\r\n//     if (pattern.test(email)) {\r\n//       const check = await axios.post(\"/auth/emailCheck\", { email });\r\n//       check.data === \"ok\"\r\n//         ? this.setState({\r\n//             e_validity: 1,\r\n//             e_placeholder: \"사용 가능한 email입니다.\"\r\n//           })\r\n//         : this.setState({ e_validity : 0, e_placeholder: \"이미 가입된 email입니다.\" });\r\n//     } else {\r\n//       this.setState({\r\n//         e_placeholder: \"올바른 형식의 email이 아닙니다.\"\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   handleSubmit =async (e) => {\r\n//     e.preventDefault()\r\n//     this.setState({isLoading:true})\r\n//     const {email, nick, password, e_validity, n_validity, p_validity} = this.state\r\n//     if(e_validity && n_validity && p_validity)  {\r\n//       const register = await axios.post(\"/auth/join\", { email, nick, password})\r\n//       register.data === \"success\" ? this.props.history.push('/') : alert(\"가입을 환영합니다!\"); this.props.history.push('/')\r\n//     }\r\n//     else alert(\"조건에 맞게 요소들을 작성해주세요.\")\r\n\r\n//   }\r\n\r\n//   render() {\r\n//     const {\r\n//       e_placeholder,\r\n//       n_placeholder,\r\n//       p_placeholder,\r\n//       e_validity,\r\n//       n_validity,\r\n//       p_validity,\r\n//       isLoading\r\n//     } = this.state;\r\n\r\n//     if (e_validity && n_validity && p_validity) {\r\n//       document.getElementById(\"submit\").disabled = false;\r\n//       // this.setState({\r\n//       //   style: { color: \"red\", background: \"blue\" }\r\n//       // });\r\n//     }\r\n//     const spinnerSize =\r\n//       window.innerWidth > 450\r\n//         ? \"100px\"\r\n//         : \"50px\";\r\n\r\n//     if(isLoading) return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />;\r\n\r\n//     return (\r\n\r\n//       <form>\r\n//         <center>\r\n//           <div className=\"register-form\">\r\n//             <div className=\"checkSyntax\" style={e_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n//               {e_placeholder}\r\n//             </div>\r\n//             <input\r\n//               name=\"email\"\r\n//               placeholder=\"email\"\r\n//               className=\"input\"\r\n//               onChange={this.handleChange}\r\n//               spellCheck={false}\r\n//               value={this.state.email}\r\n//             />\r\n//             <input\r\n//               className=\"checkButton\"\r\n//               type=\"button\"\r\n//               value=\"email 중복 검사\"\r\n//               onClick={this.emailCheck}\r\n//             />\r\n\r\n//             <div className=\"checkSyntax\" style={n_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n//               {n_placeholder}\r\n//             </div>\r\n//             <input\r\n//               name=\"nick\"\r\n//               spellCheck={false}\r\n//               placeholder=\"nickname\"\r\n//               className=\"input\"\r\n//               onChange={this.handleChange}\r\n//               value={this.state.nick}\r\n//               id=\"nick-input\"\r\n//             />\r\n//             <input\r\n//               className=\"checkButton\"\r\n//               type=\"button\"\r\n//               value=\"nickname 중복 검사\"\r\n//               onClick={this.nickCheck}\r\n//             />\r\n\r\n//             <div className=\"checkSyntax\" style={p_validity ? { color: \"green\" } : { color: \"red\" }}>\r\n//               {p_placeholder}\r\n//             </div>\r\n//             <input\r\n//               name=\"password\"\r\n//               type=\"password\"\r\n//               placeholder=\"password\"\r\n//               className=\"input\"\r\n//               value={this.state.password}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//             <input\r\n\r\n//               type=\"submit\"\r\n//               value=\"Submit\"\r\n//               className=\"submit-regi\"\r\n//               id=\"submit\"\r\n//               onClick={this.handleSubmit}\r\n//             />\r\n//           </div>\r\n//         </center>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from 'components/register/RegisterForm'\r\n\r\nconst RrgisterPage = ({history}) => {\r\n  return (\r\n    <div>      \r\n      <RegisterForm history={history}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RrgisterPage;","import React, { Component } from \"react\";\r\nimport \"./EachFeedComment.scss\";\r\nimport axios from \"axios\";\r\nimport EachComment from \"../../post/EachComment/EachComment\";\r\n\r\nclass EachFeedComment extends Component {\r\n  state = {\r\n    content: \"\",\r\n    commentsBefore: \"loading...\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    if (this.state.commentsBefore === \"loading...\" && this.props.commentsCount !== 0) {\r\n      const { data } = await axios.post(\"/post/getComments\", {\r\n        postid: this.props.id\r\n      });\r\n    \r\n      let commentsBefore = data ? data.map(item => {\r\n        return (\r\n          <EachComment\r\n            content={item.content}\r\n            usernick={item.usernick}\r\n            key={item.id}\r\n            match={this.props.match}\r\n          />\r\n        );\r\n      }) : \"nocomment\"\r\n\r\n      this.setState({ commentsBefore });\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { handleCommentAction, id } = this.props;\r\n    const { content } = this.state;\r\n\r\n    let re = [];\r\n    try {\r\n      re = content.match(/#[^\\s]*/g).filter(item => item.length >= 14);\r\n    } catch (e) {}\r\n\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"먼저 로그인해 주세요.\");\r\n      return;\r\n    }\r\n    if (content.length >= 50) {\r\n      alert(\"댓글은 50자 이내로 입력해 주세요.\");\r\n      return;\r\n    }\r\n    if (content.match(/#.*\\S#/g)) {\r\n      alert(\"해쉬태그는 연결해서 등록할수 없어요!\");\r\n      return;\r\n    } else if (re[0]) {\r\n      alert(\"14자가 넘는 해쉬태그가 존재합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (!content) {\r\n      alert(\"내용을 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (content.match(/#.*\\S#/g)) {\r\n      alert(\"해쉬태그는 연결해서 등록할수 없어요!\");\r\n      return;\r\n    } else if (re[0]) {\r\n      alert(\"14자가 넘는 해쉬태그가 존재합니다.\");\r\n      return;\r\n    }\r\n\r\n    const isSuccess = await axios.post(\"/post/uploadComment\", {\r\n      content: this.state.content,\r\n      postid: id,\r\n      usernick: localStorage.getItem(\"nick\")\r\n    });\r\n    if (isSuccess.data === \"success\") handleCommentAction();\r\n    else alert(\"잠시 후 다시 시도해주세요.\");\r\n  };\r\n\r\n  handleEnter = e => {\r\n    if (e.key === \"Enter\") this.handleSubmit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"each-feed-comment\">\r\n        <div className=\"get-comment\">{this.props.commentsCount === 0 ? ''  : this.state.commentsBefore}</div>\r\n        <input\r\n          placeholder=\"Add Comment\"\r\n          className=\"comment-content\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n          onKeyPress={this.handleEnter}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Submit\"\r\n          className=\"submit-button\"\r\n          onClick={this.handleSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachFeedComment;\r\n","import React, { Component } from \"react\";\r\nimport \"./EachFeed.scss\";\r\nimport axios from \"axios\";\r\nimport Hashtag from \"../../post/Hashtag/Hashtag\";\r\nimport Spinner from \"../../../lib/Spinner\";\r\nimport EachFeedComment from \"../EachFeedComment\";\r\nimport Mention from \"../../post/Mention/Mention\";\r\n// `import CommentContainer from '../../../containers/user/CommentContainer'`\r\n\r\n// 이미지 url, 좋아요, 좋아요 취소, 댓글 모양\r\nconst unlikeImage =\r\n  \"https://cdn1.iconfinder.com/data/icons/valentine-s-day-simplicity/512/empty_heart-512.png\";\r\nconst likeImage =\r\n  \"https://cdn1.iconfinder.com/data/icons/love-icons/512/love-heart-512.png\";\r\nconst commentImage =\r\n  \"https://cdn4.iconfinder.com/data/icons/vectory-basic/40/comment_2-512.png\";\r\n\r\nclass EachFeed extends Component {\r\n  state = {\r\n    nick: \"\",\r\n    likeCounts: 0,\r\n    profilePic: \"\",\r\n    isLoading: false,\r\n    like: unlikeImage,\r\n    commentsCount: 0,\r\n    commentToggle: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializer();\r\n  }\r\n\r\n  // 최초에 정보들을 서버로부터 요청해서 받아와서 정리해줌\r\n  initializer = async () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    const { id, userid } = this.props;\r\n    const nick = await axios.post(\"/post/getNick\", {\r\n      userid: this.props.userid\r\n    });\r\n\r\n    // 한꺼번에 필요 정보 가져오기\r\n    const [likeCounts, commentsCount, profilePic] = await Promise.all([\r\n      axios.post(\"/post/getLikeCount\", { postid: id }),\r\n      axios.post(\"/post/getComments\", { postid: id }),\r\n      axios.post(\"/post/getUserPic\", { userid })\r\n    ])\r\n\r\n    this.setState({\r\n      nick: nick.data,\r\n      likeCounts: likeCounts.data.length,\r\n      profilePic: profilePic.data,\r\n      commentsCount: commentsCount.data.length\r\n    });\r\n\r\n    if (localStorage.getItem(\"id\")) {\r\n      likeCounts.data.forEach(item => {\r\n        if (item.id === Number(localStorage.getItem(\"id\"))) {\r\n          this.setState({\r\n            like: likeImage\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  // 클릭했을 때 실제 게시물로 이동시키기\r\n  handleClick = () => {\r\n    const { history, id: postid, userid } = this.props;\r\n    history.push(`/user/${userid}/${postid}`);\r\n  };\r\n\r\n  // like/unlike\r\n  handleLikeClick = () => {\r\n    const { id: postid } = this.props;\r\n\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"좋아요는 로그인 후에 가능합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.like === unlikeImage) {\r\n      this.setState({\r\n        like: likeImage,\r\n        likeCounts: this.state.likeCounts + 1\r\n      });\r\n      axios.post(\"/post/like\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    } else {\r\n      this.setState({\r\n        like: unlikeImage,\r\n        likeCounts: this.state.likeCounts - 1\r\n      });\r\n      axios.post(\"/post/unlike\", {\r\n        userid: Number(localStorage.getItem(\"id\")),\r\n        postid\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleComment = () => {\r\n    const { commentToggle } = this.state;\r\n    if (!localStorage.getItem(\"nick\")) {\r\n      alert(\"댓글 작성은 로그인 후에 가능합니다.\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      commentToggle: !commentToggle\r\n    });\r\n  };\r\n\r\n  // 각 feed에서 직접 댓글 남길 때\r\n  handleCommentAction = () => {\r\n    const { commentsCount } = this.state;\r\n    this.setState({\r\n      commentsCount: commentsCount + 1,\r\n      commentToggle: 0\r\n    });\r\n  };\r\n\r\n  timeConversion = millisec => {\r\n    const seconds = (millisec / 1000).toFixed(0);\r\n    const minutes = (millisec / (1000 * 60)).toFixed(0);\r\n    const hours = (millisec / (1000 * 60 * 60)).toFixed(0);\r\n\r\n    if (seconds < 60) {\r\n      return (seconds ? seconds + \" sec ago\": \"방금 전\") \r\n    } else if (minutes < 60) {\r\n      return minutes + \" min ago\";\r\n    } else if (hours < 24) {\r\n      return hours + \" hrs ago\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { img, date, content, userid, history } = this.props;\r\n    const { nick, likeCounts, profilePic, like, commentsCount } = this.state;\r\n\r\n    // 게시글 작성 시간과 현재 시간의 날짜를 구해옴\r\n    const writtenDate = date.substr(0, 10);\r\n    const nowDate = new Date().toISOString().substr(0, 10);\r\n\r\n    // n시간 전\r\n    let postTime = null;\r\n    if (writtenDate === nowDate) {\r\n      postTime = this.timeConversion(new Date() - Date.parse(date));\r\n    } else {\r\n      postTime = writtenDate;\r\n    }\r\n\r\n    let spinnerSize = \"100px\";\r\n    if (window.innerWidth < 500) {\r\n      spinnerSize = \"50px\";\r\n    }\r\n\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />\r\n      );\r\n    }\r\n\r\n    let contentWithHashtag;\r\n    if (content) {\r\n      contentWithHashtag = content.split(/\\s+/); // space or newline으로 나눠줌\r\n      contentWithHashtag = contentWithHashtag.map(item => {\r\n        if (item[0] === \"#\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Hashtag hashtag={item} history={this.props.history} />\r\n            </div>\r\n          );\r\n        } else if (item[0] === \"@\" && item.length > 1) {\r\n          return (\r\n            <div>\r\n              <Mention\r\n                mention={item}\r\n                history={this.props.history}\r\n                match={this.props.match}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n        return <div className=\"word\">{item}</div>;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"each-feed\">\r\n        <div className=\"top\">\r\n          <div\r\n            className=\"left\"\r\n            onClick={() => {\r\n              history.push(`/user/${userid}`);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <div className=\"profile-pic\">\r\n              <img\r\n                src={\r\n                  profilePic\r\n                    ? profilePic\r\n                    : \"https://myspace.com/common/images/user.png\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            {nick}\r\n          </div>\r\n          <div className=\"right\">\r\n            <img\r\n              src=\"https://cdn3.iconfinder.com/data/icons/glyph/141/Alarm-Clock-512.png\"\r\n              width={30}\r\n              height={30}\r\n              alt=\"\"\r\n            />\r\n\r\n            <span className=\"span\">{postTime}</span>\r\n            {/* {date.substr(0, 10)} {time} */}\r\n          </div>\r\n        </div>\r\n        <div className=\"img-area\">\r\n          <div onClick={this.handleClick} className=\"onimg\">\r\n            <img src={img} alt=\"\" />\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <div className=\"comment-area\">\r\n              <img\r\n                src={like}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  marginTop: \"5px\",\r\n                  marginRight: \"5px\",\r\n                  marginLeft: \"-10px\"\r\n                }}\r\n                onClick={this.handleLikeClick}\r\n              />\r\n              <div style={{ width: \"100%\" }}>{likeCounts}</div>{\" \"}\r\n              <img\r\n                src={commentImage}\r\n                width={30}\r\n                height={30}\r\n                alt=\"\"\r\n                style={{\r\n                  marginTop: \"5px\",\r\n                  marginLeft: \"10px\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n                onClick={this.toggleComment}\r\n              />\r\n              <div className=\"cCount\">{commentsCount}</div>\r\n            </div>\r\n            <div className=\"test\">{contentWithHashtag}</div>\r\n            {this.state.commentToggle ? (\r\n              <div>\r\n              <EachFeedComment\r\n                handleCommentAction={this.handleCommentAction}\r\n                id={this.props.id}\r\n                commentsCount={commentsCount}\r\n              />\r\n              \r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachFeed;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport EachFeed from \"../EachFeed/EachFeed\";\r\nimport \"./Feed.scss\";\r\nimport qs from \"query-string\";\r\n\r\nclass RecommendUser extends Component {\r\n  state = {\r\n    users: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const users = await axios.post(\"/post/getAlluser\");\r\n    this.setState({\r\n      users: users.data\r\n    });    \r\n  }\r\n\r\n  // 친구추천을 위한 배열 셔플(섞기)\r\n  shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    const { recommendedUsersNumber, isFirstLogin, query } = this.props;\r\n    \r\n    \r\n    // 본인 제외\r\n    let shuffled = [];\r\n    if(Number(localStorage.getItem('id'))) shuffled = users.filter(user => user.id !== Number(localStorage.getItem('id')))\r\n    shuffled = this.shuffle(shuffled);\r\n    shuffled = shuffled.slice(0, recommendedUsersNumber);\r\n    \r\n\r\n    const list = shuffled.map(user => {\r\n      \r\n      return (\r\n        <EachRecommend\r\n          user={user}\r\n          key={user.id}\r\n          history={this.props.history}\r\n          pic={user.pic}\r\n        />\r\n      );\r\n    });\r\n    \r\n    \r\n    return (\r\n      <div\r\n        style={{ textAlign: \"center\", paddingLeft: \"10%\", paddingRight: \"10%\" }}\r\n        className=\"rec-user\"\r\n      >\r\n        <div\r\n          style={{ fontSize: \"1.25rem\", fontWeight: \"700\", marginTop: \"30px\" }}\r\n        >\r\n          {isFirstLogin ? (\r\n            <div className=\"greeting\">Feed에 더 이상 소식이 없습니다.<br/> 아래 계정들도 둘러보세요!</div>\r\n          ) : (\r\n            <div className=\"greeting\">\r\n              { !query ? \"Koostagram 가입을 환영합니다!\" : \"검색결과 없음\" }\r\n              <br />              \r\n              Follow할 계정을 둘러보세요!              \r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"following-rec\">{list}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst EachRecommend = ({ user, history, pic }) => {\r\n  return (\r\n    <div\r\n      className=\"each-rec\"\r\n      onClick={() => {\r\n        history.push(`/user/${user.id}`);\r\n      }}\r\n    >\r\n      <div className=\"profile-pic\">\r\n        {pic ? (\r\n          <img src={pic} alt=\"\" />\r\n        ) : (\r\n          <img src=\"https://myspace.com/common/images/user.png\" alt=\"\" />\r\n        )}\r\n      </div>\r\n      <div className=\"nick\">{user.nick}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Feed extends Component {\r\n  state = {\r\n    list: null,\r\n    loadingState: false,\r\n    noPost: null,\r\n    tk: 0,\r\n    wrongAccess: null,\r\n    isLoading: false\r\n  };\r\n\r\n  // 인피니트 스크롤 관련 변수들\r\n  items = [];\r\n  it = 0;\r\n  endOfList = false;\r\n\r\n  componentDidMount() {\r\n    // console.log(\"Component did mount\");\r\n    setTimeout(() => {\r\n      this.initializer();\r\n    }, 100);\r\n  }\r\n\r\n  // feed에서 query가 바뀔때 바로 적용하기 위해서\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log(\"Component did UPDATA!!!!\");\r\n\r\n    const { user, ht } = this.props;\r\n    if (prevProps.user !== user || prevProps.ht !== ht) {\r\n      this.initializer();\r\n      try {\r\n        document.getElementById(\"list\").scrollTo(0, 0);\r\n      } catch (error) {\r\n        console.log(error);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  initializer = async () => {\r\n    const { location } = this.props;\r\n    const query = qs.parse(location.search);\r\n\r\n    // 로그인 안해도 검색한 해쉬태그는 볼 수 있게    \r\n    if (!localStorage.getItem(\"id\") && !query.hashtag) {      \r\n      return;\r\n    }\r\n  \r\n    const followingList = query.hashtag\r\n      ? await axios.post(\"/post/getHashTagPost\", { tag: query.hashtag })\r\n      : await axios.post(\"/post/getFollowingPosts\", { userid: Number(localStorage.getItem('id')) });\r\n\r\n\r\n    let listData = followingList.data;\r\n\r\n    if (listData === \"no data\") {\r\n      this.setState({\r\n        noPost: 1\r\n      });\r\n      return;\r\n    } else {\r\n      this.it = listData.length;\r\n      listData = listData.reverse();\r\n      this.items = listData.splice(0, 3);\r\n\r\n      // to rendering\r\n      this.setState({\r\n        tk: !this.state.tk\r\n      });\r\n\r\n      if (listData.length > 3) {\r\n        this.infiniteScroll(listData);\r\n      } else {\r\n        this.endOfList = true;\r\n        this.setState({\r\n          tk: !this.state.tk\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  infiniteScroll = listData => {\r\n    \r\n    this.refs.iScroll.addEventListener(\"scroll\", () => {\r\n      if (\r\n        this.refs.iScroll.scrollTop + this.refs.iScroll.clientHeight + 25 >=\r\n        this.refs.iScroll.scrollHeight\r\n      ) {\r\n        this.loadMoreItems(listData);\r\n      }\r\n    });\r\n  };\r\n\r\n  loadMoreItems(listData) {\r\n    if (this.items.length >= this.it) {\r\n      this.endOfList = true;\r\n      this.setState({\r\n        tk: !this.state.tk\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { items } = this;\r\n    const temp = listData.splice(0, 3); // listData는 앞에 3개를 줄였음\r\n\r\n    this.setState({ loadingState: true });\r\n    this.items = items.concat(temp);\r\n\r\n    setTimeout(() => {\r\n      // console.log(this.items);\r\n      this.setState({ loadingState: false });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { items } = this;\r\n    const { history, location } = this.props;\r\n    const query = qs.parse(location.search);\r\n\r\n    // console.log(localStorage.getItem('id'), localStorage.getItem('nick'))\r\n\r\n    // 해쉬태그 검색결과가 없을 때 ( no post )\r\n    if (this.state.noPost && this.it === 0) {\r\n      return (\r\n        <div style={{ marginTop: \"100px\" }}>\r\n          <RecommendUser\r\n            loginuser={this.props.user}\r\n            history={this.props.history}\r\n            recommendedUsersNumber={100}\r\n            query={query}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const eachList = items.map(item => (\r\n      <EachFeed\r\n        id={item.id}\r\n        img={item.img}\r\n        nick={item.nick}\r\n        history={history}\r\n        key={item.id}\r\n        date={item.createdAt}\r\n        userid={item.userId}\r\n        content={item.content}\r\n        loggedInUser={this.props.user}\r\n      />\r\n    ));\r\n\r\n    // 첫 로그인 시(팔로우 하는 사람이 0 일 시) 추천친구를 100명 보여줌\r\n    let recommendUsers = 3;\r\n    if (this.it === 0) recommendUsers = 100;\r\n\r\n    return (\r\n      <div className=\"feed\">\r\n        <div ref=\"iScroll\" className=\"list\" id=\"list\">\r\n          {query.hashtag ? (\r\n            <center>\r\n              <div className=\"searched-hashtag\">\r\n                Searched Hashtag : {window.innerWidth < 450 ? <br/> : null}<span className=\"ht\">#{query.hashtag}</span>\r\n              </div>\r\n            </center>\r\n          ) : (\r\n            <div style={{ height: \"30px\" }} />\r\n          )}\r\n\r\n          <center>{eachList}</center>\r\n          {this.endOfList ? (\r\n            <RecommendUser\r\n              history={this.props.history}\r\n              recommendedUsersNumber={recommendUsers}\r\n              isFirstLogin={this.it}\r\n              loginuser={this.props.user}\r\n              location={this.props.user}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//}\r\n\r\nexport default Feed;\r\n","import React, { Component } from \"react\";\r\nimport Feed from \"components/feed/Feed\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass FeedContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Feed\r\n          user={this.props.user}\r\n          history={this.props.history}\r\n          location={this.props.location}\r\n          ht = {this.props.ht}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(withRouter(FeedContainer));\r\n","import React from 'react';\r\nimport FeedContainer from '../containers/feed/FeedContainer';\r\nimport qs from 'query-string'\r\n\r\nconst FeedPage = ({location}) => {\r\n  const query = qs.parse(location.search).hashtag  \r\n  return (\r\n    <div style={{overflow : \"hidden\"}}>\r\n      <FeedContainer ht={query}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;","import React, { Component } from \"react\";\r\nimport \"./Edit.scss\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../lib/Spinner\";\r\n\r\nclass Edit extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    uploading: false\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { history } = this.props;\r\n    if (!Number(localStorage.getItem('id'))) {\r\n      alert(\"Please login first\");\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleFileChange = e => {\r\n    this.setState({\r\n      selectedFile: e.target.files[0]\r\n    });\r\n    console.log(e.target.files[0]);\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { history } = this.props;\r\n    const { selectedFile } = this.state;\r\n\r\n    if (!selectedFile) {\r\n      alert(\"프로필 사진을 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const fd = new FormData();\r\n    console.log(selectedFile);\r\n    fd.append(\"img\", selectedFile, selectedFile.name); // 파일의 원본 파일이름 그대로\r\n    fd.append(\"userid\", Number(localStorage.getItem('id')));\r\n\r\n    const contentType = {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    };\r\n\r\n    this.setState({\r\n      uploading: true\r\n    });\r\n    await axios.post(\"/post/profile\", fd, contentType);\r\n    history.push(`/user/${localStorage.getItem('id')}`);\r\n  };\r\n\r\n  render() {\r\n    const { selectedFile } = this.state;\r\n\r\n    const spinnerSize = window.innerWidth > 450 ? \"100px\" : \"50px\";\r\n    if(this.state.uploading) return <Spinner width={spinnerSize} height={spinnerSize} pw=\"100%\" ph=\"90vh\" />;\r\n    \r\n    return (\r\n      <div className=\"edit\">\r\n        <center>\r\n          <div className=\"writing-form\">\r\n            <label className=\"file-wrapper\">\r\n              {selectedFile ? \"선택완료 :)\" : \"프로필 사진 선택하기\"}\r\n              <input\r\n                id=\"img\"\r\n                name=\"img\"\r\n                type=\"file\"\r\n                className=\"file-upload\"\r\n                onChange={this.handleFileChange}\r\n                accept=\".gif, .jpg, .png\"\r\n              />\r\n            </label>\r\n            {selectedFile ? selectedFile.name : \"\"}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              className=\"submit\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  user: state.login.user\r\n}))(withRouter(Edit));\r\n","import React from 'react';\r\nimport Edit from \"components/edit/Edit\"\r\n\r\nconst EditPage = () => {\r\n  return (\r\n    <div>\r\n        <Edit />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPage;","import React, { Component } from \"react\";\r\nimport \"./NotifyModal.scss\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"lib/Spinner\";\r\n\r\nconst ModalPortal = ({ children }) => {\r\n  const el = document.getElementById(\"modal\");\r\n  return ReactDOM.createPortal(children, el);\r\n};\r\n\r\n\r\n\r\nclass EachNotification extends Component {\r\n  state = {\r\n    nickname: null,\r\n    pic: null,\r\n    postpic: null,\r\n    style: {\r\n      color: \"black\"\r\n    }\r\n  };\r\n \r\n  async componentDidMount() {\r\n    const { isChecked, userid, postid } = this.props;\r\n    const style = isChecked ? { color: \"gray\" } : { color: \"black\" };\r\n\r\n    const [nickname, pic, getPostInfo] = await Promise.all([\r\n      await axios.post(\"/post/getNick\", { userid }),\r\n      await axios.post(\"/post/getUserPic\", { userid }),\r\n      await axios.post(\"/post/getSinglePost\", { postid }),\r\n      await axios.post(\"/post/togglenotification\", {\r\n        userid: Number(localStorage.getItem(\"id\"))\r\n      })\r\n    ]);\r\n\r\n    \r\n\r\n\r\n\r\n    // 0131 이렇게 뺐음\r\n    const postpic = getPostInfo.data ? getPostInfo.data.img : null;\r\n    const postUserId = getPostInfo.data ? getPostInfo.data.userId : null;\r\n  \r\n    this.setState({\r\n      nickname: nickname.data,\r\n      pic: pic.data,\r\n      postpic: postpic,\r\n      postUserId: postUserId,\r\n      style\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { history, postid, handleCloseModal } = this.props;\r\n    const { postUserId } = this.state;\r\n\r\n    handleCloseModal();\r\n    history.push(`/user/${postUserId}/${postid}`);\r\n  };\r\n\r\n  render() {\r\n    const { nickname, pic, postpic } = this.state;\r\n    const { category } = this.props;\r\n    let content = ''\r\n    switch (category) {\r\n      case \"like\":\r\n        content = \"게시물을 좋아합니다.\"\r\n        break;\r\n      case \"comment\" :\r\n        content = \"게시물에 댓글을 남겼습니다.\"\r\n        break;\r\n      case \"follow\" :\r\n        content = \"당신을 팔로우 했습니다.\"\r\n        break;\r\n      case \"mention\" :\r\n        content = \"당신을 언급했습니다.\"\r\n        break;\r\n      default :\r\n        break;\r\n    }\r\n\r\n\r\n    if (nickname && typeof pic === 'string')\r\n      return (\r\n        <div className=\"each-noti\" onClick={this.handleClick}>\r\n          <img\r\n            src={pic ? pic : \"https://myspace.com/common/images/user.png\"}\r\n            alt=\"\"\r\n            className=\"img\"\r\n          />\r\n          <div className=\"word\" style={this.state.style}>\r\n            <div className=\"nickname\">{nickname}</div>님이{\" \"}\r\n              {content}\r\n          </div>\r\n          {       \r\n            postpic \r\n              ? <img src={postpic} alt=\"\" className=\"postpic\" />\r\n              : <div></div>\r\n          }\r\n\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div onClick={this.handleClick}>\r\n          <Spinner ph={45} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nclass NotifyModal extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.initializer()\r\n  }\r\n  \r\n\r\n  handleCloseModal = () => {\r\n    this.props.handleToggle();\r\n  };\r\n\r\n  render() {\r\n    const { notifications } = this.props;\r\n\r\n    const flist = notifications.map(item => (\r\n      <EachNotification\r\n        userid={item.notifying}\r\n        postid={item.post}\r\n        category={item.category}\r\n        history={this.props.history}\r\n        handleCloseModal={this.handleCloseModal}\r\n        isChecked={item.isChecked}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <ModalPortal>\r\n        <div className=\"notify-modal\">\r\n          <div className=\"content\">\r\n            <h3>Notifications</h3>\r\n\r\n            {notifications === \"loading\" && <Spinner ph={520} /> }\r\n            {notifications[0] ? (\r\n              <div className=\"notifications\">{flist}</div>\r\n            ) : (\r\n              <div className=\"notifications\" style={{fontSize : \"1.5rem\", fontWeight : \"500\"}}>알림이 없습니다.<br/>새 게시글을 올려보세요.</div>\r\n            )}\r\n            <div>\r\n              <button onClick={this.handleCloseModal} className=\"close\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ModalPortal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NotifyModal);\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport NotifyModal from \"../NotifyModal/NotifyModal\";\r\nimport axios from \"axios\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    toggle: false,\r\n    notifications: \"loading\",\r\n    hasNewNotification: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userid = Number(localStorage.getItem(\"id\"));\r\n    if (userid) {\r\n      this.getNotifications();\r\n    }\r\n    this.initializer();\r\n  }\r\n\r\n  // 비로그인 상태에서 로그인 했을때 알림 가져올 수 있게\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.id !== nextProps.id) this.getNotifications();\r\n  }\r\n\r\n  // 일정시간(10초)에 한번씩 새로운 알림이 있는지 확인하기 위한 함수\r\n  getNotifications = () => {\r\n    setInterval(async () => {\r\n      const userid = Number(localStorage.getItem(\"id\"));\r\n      const myNotifications = await axios.post(\"/post/notification\", {\r\n        userid\r\n      });\r\n      for (const item of myNotifications.data) {\r\n        if (!item.isChecked) {\r\n          this.setState({ hasNewNotification: true });\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        notifications: myNotifications.data\r\n      });\r\n    }, 10 * 1000); // 10초\r\n  };\r\n\r\n  initializer = async () => {\r\n    const userid = Number(localStorage.getItem(\"id\"));\r\n    const myNotifications = await axios.post(\"/post/notification\", { userid });\r\n    for (const item of myNotifications.data) {\r\n      if (!item.isChecked) {\r\n        this.setState({ hasNewNotification: true });\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      notifications: myNotifications.data\r\n    });\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      toggle: !this.state.toggle,\r\n      hasNewNotification: false\r\n    });\r\n  };\r\n\r\n  // 매개변수로 온 url로 이동시키기\r\n  handleLink = link => {\r\n    if (localStorage.getItem(\"id\")) this.props.history.push(link);\r\n    else alert(\"로그인 후 가능합니다.\");\r\n  };\r\n\r\n  // 새로운 알림 확인/끄기\r\n  handleToggleNotify = () => {\r\n    if (!localStorage.getItem(\"id\")) {\r\n      alert(\"로그인 후 가능합니다.\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAble, input, handleChange, handleBlur } = this.props;\r\n    const { toggle, hasNewNotification } = this.state;\r\n\r\n    // isAble로 클릭 가능한지 정하기\r\n    let cursorStyle = isAble ? { cursor: \"pointer\" } : null;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {toggle ? (\r\n          <NotifyModal\r\n            handleToggle={this.handleToggle}\r\n            notifications={this.state.notifications}\r\n            initializer={this.initializer}\r\n          />\r\n        ) : null}\r\n        <div className=\"header\">\r\n          <Link className=\"logo\" to=\"/\">\r\n            Koostagram\r\n          </Link>\r\n\r\n          <div className=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              spellCheck={false}\r\n              placeholder=\"Search\"\r\n              onBlur={handleBlur}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"right-part\">\r\n            {/* write post */}\r\n            <div\r\n              className=\"button-icon\"\r\n              style={cursorStyle}\r\n              onClick={() => {\r\n                this.handleLink(\"/write\");\r\n              }}\r\n            >\r\n              <img\r\n                className=\"imgs\"\r\n                alt=\"\"\r\n                src=\"https://cdn3.iconfinder.com/data/icons/web-ui-3/128/Compose-2-512.png\"\r\n              />\r\n            </div>\r\n\r\n            {/* mypage */}\r\n            <div\r\n              className=\"button-icon\"\r\n              style={cursorStyle}\r\n              onClick={() => {\r\n                this.handleLink(\"/user/\" + localStorage.getItem(\"id\"));\r\n              }}\r\n            >\r\n              <img\r\n                className=\"imgs\"\r\n                alt=\"\"\r\n                src=\"https://image.flaticon.com/icons/svg/149/149071.svg\"\r\n              />\r\n            </div>\r\n\r\n            {/* notify */}\r\n            <div\r\n              className=\"button-icon cont\"\r\n              style={cursorStyle}\r\n              onClick={this.handleToggleNotify}\r\n            >\r\n              <img\r\n                className=\"imgs\"\r\n                alt=\"\"\r\n                src=\"https://image.flaticon.com/icons/svg/148/148921.svg\"\r\n              />\r\n              {hasNewNotification && <div className=\"dot\" />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"./SearchList.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass UserResult extends Component {\r\n  handleClick = () => {\r\n    // console.log(\"User Clicked\");\r\n    const { history, user } = this.props;\r\n    history.push(`/user/${user.id}`);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div className=\"user-result\" onClick={this.handleClick}>\r\n        {user.nick}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HashTagResult extends Component {\r\n  handleClick = () => {\r\n    console.log(\"hashtag Clicked\");\r\n    const { history, hashtag } = this.props;\r\n    history.push(`/feed?hashtag=${hashtag.title}`);\r\n  };\r\n\r\n  render() {\r\n    const { hashtag } = this.props;\r\n    return (\r\n      <div className=\"ht-result\" onClick={this.handleClick}>\r\n        #{hashtag.title}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SearchList extends Component {\r\n  // token이 \"user\"이면 user 3개를, \"user\"가 아니면 user의 3래의 결과를 리턴해줌\r\n  // count에 따라 둘다 갯수만큼 리턴해줌(hashtag만 검색되거나 user만 검색된 경우에 6개를 받고, 둘다 검색된 경우에 3개씩 받기 위함)\r\n  mapItems = (arr, token, count) => {\r\n    return token === \"user\"\r\n      ? arr\r\n          .slice(0, count)\r\n          .map(user => (\r\n            <UserResult\r\n              user={user}\r\n              history={this.props.history}\r\n              key={user.id}\r\n            />\r\n          ))\r\n      : arr\r\n          .slice(0, 3)\r\n          .map(hashtag => (\r\n            <HashTagResult\r\n              hashtag={hashtag}\r\n              history={this.props.history}\r\n              key={hashtag.id}\r\n            />\r\n          ));\r\n  };\r\n\r\n  render() {\r\n    const { input, data } = this.props;\r\n    const { mapItems } = this;\r\n\r\n    if (input.length <= 1) {\r\n      return <div />;\r\n    }\r\n\r\n    if (data) {\r\n      // 입력을 해서 데이터가 있을 때\r\n      const { user, hashtag } = data;\r\n      // console.log(user, hashtag);\r\n      if (user[0] && hashtag[0]) {\r\n        // 유저와 해시태그 모두 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"user-list\">{mapItems(user, \"user\", 3)}</div>\r\n              <div className=\"hash-list\">{mapItems(hashtag, \"hash\", 3)}</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (user[0] && !hashtag[0]) {\r\n        // 유저만 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"user-list\" style={{ height: \"200px\" }}>\r\n                {mapItems(user, \"user\", 6)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (!user[0] && hashtag[0]) {\r\n        // 해시태그만 검색됨\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"hash-list\" style={{ height: \"200px\" }}>\r\n                {mapItems(hashtag, \"hash\", 6)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        // 검색결과 없음\r\n\r\n        return (\r\n          <div className=\"search-list\">\r\n            <div className=\"list\">\r\n              <div className=\"noresult\">No Result</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchList);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../components/common/Header/Header\";\r\nimport SearchList from \"../../components/common/SearchList\";\r\nimport { debounce } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nclass HeaderContainer extends Component {\r\n  state = {\r\n    input: \"\",\r\n    results : null,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState(\r\n      {input: e.target.value},\r\n      () => {  if(this.state.input.length >= 2) this.searchUser(this.state.input);}\r\n    );\r\n  };\r\n\r\n  handleBlur = () =>{\r\n    setTimeout( () => {\r\n      this.setState({\r\n        input : ''\r\n      })\r\n    },150)\r\n  }\r\n\r\n  searchUser = debounce(async input => {\r\n    const results = await axios.post(\"/post/search\", { input: input });\r\n    this.setState({\r\n      results : results.data\r\n    })\r\n  }, 500);\r\n\r\n\r\n  render() {\r\n    const { isAble, to } = this.props;\r\n    const { input } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Header\r\n          isAble={isAble}\r\n          to={to}\r\n          input={input}\r\n          handleChange={this.handleChange}\r\n          handleBlur={this.handleBlur}\r\n          id={Number(localStorage.getItem(\"id\"))}\r\n        />\r\n        <SearchList data={this.state.results} input={input}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderContainer;\r\n","import React, { Component } from 'react';\nimport {Switch, Route } from 'react-router-dom'\nimport {MainPage, EachPostPage, UserPage, WritingPage, NotFound, RegisterPage, FeedPage, EditPage} from 'pages'\nimport HeaderContainer from '../containers/HeaderContainer/HeaderContainer';\n\n\nclass App extends Component {\n  render() {\n    const id = localStorage.getItem('id')\n    return (\n      <div>\n        \n        { id !== null ? (<HeaderContainer isAble={true} to={`/user/${id}`} />) : (<HeaderContainer isAble={false} to=\"123\"/>)}             \n        <Switch>\n          <Route exact path='/' component={MainPage} />          \n          <Route path='/user/:userid/:postid' component={EachPostPage} />\n          <Route path='/user/:userid' component={UserPage} />\n          <Route path='/write' component={WritingPage} />          \n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/feed\" component={FeedPage} />\n          <Route path=\"/edit\" component={EditPage} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport App from \"../components/App\";\r\nimport * as loginActions from 'store/modules/login'\r\nimport {bindActionCreators} from 'redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass AppContainer extends Component {  \r\n  componentDidMount() {\r\n    const {LoginActions} = this.props\r\n    LoginActions.login();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    return (      \r\n        <App user={user} />              \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  state => ({\r\n    user : state.login.user\r\n  }),\r\n  dispatch => ({\r\n    LoginActions : bindActionCreators(loginActions,dispatch)\r\n  })\r\n)(AppContainer))","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configure from \"store/configure\";\r\nimport AppContainer from \"./containers/AppContainer\";\r\n\r\n\r\n// Appcontianer로 바꿔서 헤더 하려 했는데 흠 잘안됨 여기서 부터 봐라\r\n\r\nconst Root = () => {\r\n  const store = configure();\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>        \r\n        <AppContainer />                \r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport Root from './Root';\nimport 'styles/base.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/puff.4597a1a0.svg\";"],"sourceRoot":""}